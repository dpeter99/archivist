<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="indexpage" kind="page">
    <compoundname>index</compoundname>
    <title>Vulkan Memory Allocator</title>
    <innerpage refid="quick_start">Quick start</innerpage>
    <innerpage refid="choosing_memory_type">Choosing memory type</innerpage>
    <innerpage refid="memory_mapping">Memory mapping</innerpage>
    <innerpage refid="staying_within_budget">Staying within budget</innerpage>
    <innerpage refid="resource_aliasing">Resource aliasing (overlap)</innerpage>
    <innerpage refid="custom_memory_pools">Custom memory pools</innerpage>
    <innerpage refid="defragmentation">Defragmentation</innerpage>
    <innerpage refid="statistics">Statistics</innerpage>
    <innerpage refid="allocation_annotation">Allocation names and user data</innerpage>
    <innerpage refid="virtual_allocator">Virtual allocator</innerpage>
    <innerpage refid="debugging_memory_usage">Debugging incorrect memory usage</innerpage>
    <innerpage refid="opengl_interop">OpenGL Interop</innerpage>
    <innerpage refid="usage_patterns">Recommended usage patterns</innerpage>
    <innerpage refid="configuration">Configuration</innerpage>
    <innerpage refid="vk_khr_dedicated_allocation">VK_KHR_dedicated_allocation</innerpage>
    <innerpage refid="enabling_buffer_device_address">Enabling buffer device address</innerpage>
    <innerpage refid="vk_ext_memory_priority">VK_EXT_memory_priority</innerpage>
    <innerpage refid="vk_amd_device_coherent_memory">VK_AMD_device_coherent_memory</innerpage>
    <innerpage refid="general_considerations">General considerations</innerpage>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><bold>Version 3.0.0 (2022-03-25)</bold></para>
<para>Copyright (c) 2017-2022 Advanced Micro Devices, Inc. All rights reserved. <linebreak/>
License: MIT</para>
<para><bold>API documentation divided into groups:</bold> [Modules](modules.html)</para>
<sect1 id="index_1main_table_of_contents">
<title>Table of contents</title>
<para><itemizedlist>
<listitem><para><bold>User guide</bold><itemizedlist>
<listitem><para><ref refid="quick_start" kindref="compound">Quick start</ref><itemizedlist>
<listitem><para>[Project setup](<ref refid="quick_start_1quick_start_project_setup" kindref="member">Project setup</ref>)</para>
</listitem><listitem><para>[Initialization](<ref refid="quick_start_1quick_start_initialization" kindref="member">Initialization</ref>)</para>
</listitem><listitem><para>[Resource allocation](<ref refid="quick_start_1quick_start_resource_allocation" kindref="member">Resource allocation</ref>)</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><ref refid="choosing_memory_type" kindref="compound">Choosing memory type</ref><itemizedlist>
<listitem><para>[Usage](<ref refid="choosing_memory_type_1choosing_memory_type_usage" kindref="member">Usage</ref>)</para>
</listitem><listitem><para>[Required and preferred flags](<ref refid="choosing_memory_type_1choosing_memory_type_required_preferred_flags" kindref="member">Required and preferred flags</ref>)</para>
</listitem><listitem><para>[Explicit memory types](<ref refid="choosing_memory_type_1choosing_memory_type_explicit_memory_types" kindref="member">Explicit memory types</ref>)</para>
</listitem><listitem><para>[Custom memory pools](<ref refid="choosing_memory_type_1choosing_memory_type_custom_memory_pools" kindref="member">Custom memory pools</ref>)</para>
</listitem><listitem><para>[Dedicated allocations](<ref refid="choosing_memory_type_1choosing_memory_type_dedicated_allocations" kindref="member">Dedicated allocations</ref>)</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><ref refid="memory_mapping" kindref="compound">Memory mapping</ref><itemizedlist>
<listitem><para>[Mapping functions](<ref refid="memory_mapping_1memory_mapping_mapping_functions" kindref="member">Mapping functions</ref>)</para>
</listitem><listitem><para>[Persistently mapped memory](<ref refid="memory_mapping_1memory_mapping_persistently_mapped_memory" kindref="member">Persistently mapped memory</ref>)</para>
</listitem><listitem><para>[Cache flush and invalidate](<ref refid="memory_mapping_1memory_mapping_cache_control" kindref="member">Cache flush and invalidate</ref>)</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><ref refid="staying_within_budget" kindref="compound">Staying within budget</ref><itemizedlist>
<listitem><para>[Querying for budget](<ref refid="staying_within_budget_1staying_within_budget_querying_for_budget" kindref="member">Querying for budget</ref>)</para>
</listitem><listitem><para>[Controlling memory usage](<ref refid="staying_within_budget_1staying_within_budget_controlling_memory_usage" kindref="member">Controlling memory usage</ref>)</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><ref refid="resource_aliasing" kindref="compound">Resource aliasing (overlap)</ref></para>
</listitem><listitem><para><ref refid="custom_memory_pools" kindref="compound">Custom memory pools</ref><itemizedlist>
<listitem><para>[Choosing memory type index](<ref refid="custom_memory_pools_1custom_memory_pools_MemTypeIndex" kindref="member">Choosing memory type index</ref>)</para>
</listitem><listitem><para>[Linear allocation algorithm](<ref refid="custom_memory_pools_1linear_algorithm" kindref="member">Linear allocation algorithm</ref>)<itemizedlist>
<listitem><para>[Free-at-once](<ref refid="custom_memory_pools_1linear_algorithm_free_at_once" kindref="member">Free-at-once</ref>)</para>
</listitem><listitem><para>[Stack](<ref refid="custom_memory_pools_1linear_algorithm_stack" kindref="member">Stack</ref>)</para>
</listitem><listitem><para>[Double stack](<ref refid="custom_memory_pools_1linear_algorithm_double_stack" kindref="member">Double stack</ref>)</para>
</listitem><listitem><para>[Ring buffer](<ref refid="custom_memory_pools_1linear_algorithm_ring_buffer" kindref="member">Ring buffer</ref>)</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><ref refid="defragmentation" kindref="compound">Defragmentation</ref></para>
</listitem><listitem><para><ref refid="statistics" kindref="compound">Statistics</ref><itemizedlist>
<listitem><para>[Numeric statistics](<ref refid="statistics_1statistics_numeric_statistics" kindref="member">Numeric statistics</ref>)</para>
</listitem><listitem><para>[JSON dump](<ref refid="statistics_1statistics_json_dump" kindref="member">JSON dump</ref>)</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><ref refid="allocation_annotation" kindref="compound">Allocation names and user data</ref><itemizedlist>
<listitem><para>[Allocation user data](<ref refid="allocation_annotation_1allocation_user_data" kindref="member">Allocation user data</ref>)</para>
</listitem><listitem><para>[Allocation names](<ref refid="allocation_annotation_1allocation_names" kindref="member">Allocation names</ref>)</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><ref refid="virtual_allocator" kindref="compound">Virtual allocator</ref></para>
</listitem><listitem><para><ref refid="debugging_memory_usage" kindref="compound">Debugging incorrect memory usage</ref><itemizedlist>
<listitem><para>[Memory initialization](<ref refid="debugging_memory_usage_1debugging_memory_usage_initialization" kindref="member">Memory initialization</ref>)</para>
</listitem><listitem><para>[Margins](<ref refid="debugging_memory_usage_1debugging_memory_usage_margins" kindref="member">Margins</ref>)</para>
</listitem><listitem><para>[Corruption detection](<ref refid="debugging_memory_usage_1debugging_memory_usage_corruption_detection" kindref="member">Corruption detection</ref>)</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><ref refid="opengl_interop" kindref="compound">OpenGL Interop</ref></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><ref refid="usage_patterns" kindref="compound">Recommended usage patterns</ref><itemizedlist>
<listitem><para>[GPU-only resource](<ref refid="usage_patterns_1usage_patterns_gpu_only" kindref="member">GPU-only resource</ref>)</para>
</listitem><listitem><para>[Staging copy for upload](<ref refid="usage_patterns_1usage_patterns_staging_copy_upload" kindref="member">Staging copy for upload</ref>)</para>
</listitem><listitem><para>[Readback](<ref refid="usage_patterns_1usage_patterns_readback" kindref="member">Readback</ref>)</para>
</listitem><listitem><para>[Advanced data uploading](<ref refid="usage_patterns_1usage_patterns_advanced_data_uploading" kindref="member">Advanced data uploading</ref>)</para>
</listitem><listitem><para>[Other use cases](<ref refid="usage_patterns_1usage_patterns_other_use_cases" kindref="member">Other use cases</ref>)</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><ref refid="configuration" kindref="compound">Configuration</ref><itemizedlist>
<listitem><para>[Pointers to Vulkan functions](<ref refid="configuration_1config_Vulkan_functions" kindref="member">Pointers to Vulkan functions</ref>)</para>
</listitem><listitem><para>[Custom host memory allocator](<ref refid="configuration_1custom_memory_allocator" kindref="member">Custom host memory allocator</ref>)</para>
</listitem><listitem><para>[Device memory allocation callbacks](<ref refid="configuration_1allocation_callbacks" kindref="member">Device memory allocation callbacks</ref>)</para>
</listitem><listitem><para>[Device heap memory limit](<ref refid="configuration_1heap_memory_limit" kindref="member">Device heap memory limit</ref>)</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>Extension support</bold><itemizedlist>
<listitem><para><ref refid="vk_khr_dedicated_allocation" kindref="compound">VK_KHR_dedicated_allocation</ref></para>
</listitem><listitem><para><ref refid="enabling_buffer_device_address" kindref="compound">Enabling buffer device address</ref></para>
</listitem><listitem><para><ref refid="vk_ext_memory_priority" kindref="compound">VK_EXT_memory_priority</ref></para>
</listitem><listitem><para><ref refid="vk_amd_device_coherent_memory" kindref="compound">VK_AMD_device_coherent_memory</ref></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><ref refid="general_considerations" kindref="compound">General considerations</ref><itemizedlist>
<listitem><para>[Thread safety](<ref refid="general_considerations_1general_considerations_thread_safety" kindref="member">Thread safety</ref>)</para>
</listitem><listitem><para>[Versioning and compatibility](<ref refid="general_considerations_1general_considerations_versioning_and_compatibility" kindref="member">Versioning and compatibility</ref>)</para>
</listitem><listitem><para>[Validation layer warnings](<ref refid="general_considerations_1general_considerations_validation_layer_warnings" kindref="member">Validation layer warnings</ref>)</para>
</listitem><listitem><para>[Allocation algorithm](<ref refid="general_considerations_1general_considerations_allocation_algorithm" kindref="member">Allocation algorithm</ref>)</para>
</listitem><listitem><para>[Features not supported](<ref refid="general_considerations_1general_considerations_features_not_supported" kindref="member">Features not supported</ref>)</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="index_1main_see_also">
<title>See also</title>
<para><itemizedlist>
<listitem><para>[**Product page on GPUOpen**](<ulink url="https://gpuopen.com/gaming-product/vulkan-memory-allocator/">https://gpuopen.com/gaming-product/vulkan-memory-allocator/</ulink>)</para>
</listitem><listitem><para>[**Source repository on GitHub**](<ulink url="https://github.com/GPUOpen-LibrariesAndSDKs/VulkanMemoryAllocator">https://github.com/GPUOpen-LibrariesAndSDKs/VulkanMemoryAllocator</ulink>) </para>
</listitem></itemizedlist>
</para>
</sect1>
    </detaileddescription>
    <location file="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h"/>
  </compounddef>
</doxygen>
