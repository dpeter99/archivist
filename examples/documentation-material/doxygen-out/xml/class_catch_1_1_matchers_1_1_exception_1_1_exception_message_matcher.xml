<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_catch_1_1_matchers_1_1_exception_1_1_exception_message_matcher" kind="class" language="C++" prot="public">
    <compoundname>Catch::Matchers::Exception::ExceptionMessageMatcher</compoundname>
    <basecompoundref refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base" prot="public" virt="non-virtual">Catch::Matchers::Impl::MatcherBase&lt; std::exception &gt;</basecompoundref>
    <includes refid="catch_8hpp" local="no">catch.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_catch_1_1_matchers_1_1_exception_1_1_exception_message_matcher_1a1cf4836834c357febac9180ab74a178a" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Catch::Matchers::Exception::ExceptionMessageMatcher::m_message</definition>
        <argsstring></argsstring>
        <name>m_message</name>
        <qualifiedname>Catch::Matchers::Exception::ExceptionMessageMatcher::m_message</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="3400" column="17" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="3400" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_catch_1_1_matchers_1_1_exception_1_1_exception_message_matcher_1ace55942f39ba653db3fd69d6d90e188f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Catch::Matchers::Exception::ExceptionMessageMatcher::ExceptionMessageMatcher</definition>
        <argsstring>(std::string const &amp;message)</argsstring>
        <name>ExceptionMessageMatcher</name>
        <qualifiedname>Catch::Matchers::Exception::ExceptionMessageMatcher::ExceptionMessageMatcher</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="3403" column="5" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="3403" bodyend="3405"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_matchers_1_1_exception_1_1_exception_message_matcher_1aa0566d24990d69e96495360b8f79593d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Catch::Matchers::Exception::ExceptionMessageMatcher::match</definition>
        <argsstring>(std::exception const &amp;ex) const override</argsstring>
        <name>match</name>
        <qualifiedname>Catch::Matchers::Exception::ExceptionMessageMatcher::match</qualifiedname>
        <param>
          <type>std::exception const &amp;</type>
          <declname>ex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="3407" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_matchers_1_1_exception_1_1_exception_message_matcher_1a3543441985ec877a781e660a403b1bae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string Catch::Matchers::Exception::ExceptionMessageMatcher::describe</definition>
        <argsstring>() const override</argsstring>
        <name>describe</name>
        <qualifiedname>Catch::Matchers::Exception::ExceptionMessageMatcher::describe</qualifiedname>
        <reimplements refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a91d3a907dbfcbb596077df24f6e11fe2">describe</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="3409" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Catch::Matchers::Exception::ExceptionMessageMatcher</label>
        <link refid="class_catch_1_1_matchers_1_1_exception_1_1_exception_message_matcher"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Catch::Matchers::Impl::MatcherBase&lt; T &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Catch::Matchers::Impl::MatcherUntypedBase</label>
        <link refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base"/>
      </node>
      <node id="4">
        <label>Catch::Matchers::Impl::MatcherMethod&lt; T &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_method"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Catch::Matchers::Exception::ExceptionMessageMatcher</label>
        <link refid="class_catch_1_1_matchers_1_1_exception_1_1_exception_message_matcher"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Catch::Matchers::Impl::MatcherBase&lt; T &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Catch::Matchers::Impl::MatcherUntypedBase</label>
        <link refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base"/>
      </node>
      <node id="4">
        <label>Catch::Matchers::Impl::MatcherMethod&lt; T &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_method"/>
      </node>
    </collaborationgraph>
    <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="3399" column="1" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="3399" bodyend="3410"/>
    <listofallmembers>
      <member refid="class_catch_1_1_matchers_1_1_exception_1_1_exception_message_matcher_1a3543441985ec877a781e660a403b1bae" prot="public" virt="virtual"><scope>Catch::Matchers::Exception::ExceptionMessageMatcher</scope><name>describe</name></member>
      <member refid="class_catch_1_1_matchers_1_1_exception_1_1_exception_message_matcher_1ace55942f39ba653db3fd69d6d90e188f" prot="public" virt="non-virtual"><scope>Catch::Matchers::Exception::ExceptionMessageMatcher</scope><name>ExceptionMessageMatcher</name></member>
      <member refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a951095c462657e7097a9a6dc4dde813f" prot="protected" virt="non-virtual"><scope>Catch::Matchers::Exception::ExceptionMessageMatcher</scope><name>m_cachedToString</name></member>
      <member refid="class_catch_1_1_matchers_1_1_exception_1_1_exception_message_matcher_1a1cf4836834c357febac9180ab74a178a" prot="private" virt="non-virtual"><scope>Catch::Matchers::Exception::ExceptionMessageMatcher</scope><name>m_message</name></member>
      <member refid="class_catch_1_1_matchers_1_1_exception_1_1_exception_message_matcher_1aa0566d24990d69e96495360b8f79593d" prot="public" virt="non-virtual"><scope>Catch::Matchers::Exception::ExceptionMessageMatcher</scope><name>match</name></member>
      <member refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_method_1ae0920ff9e817acf08e1bb0cbcb044e30" prot="public" virt="pure-virtual" ambiguityscope="Catch::Matchers::Impl::MatcherBase::"><scope>Catch::Matchers::Exception::ExceptionMessageMatcher</scope><name>match</name></member>
      <member refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1ab65764dc245d85e2b268d3be870b650a" prot="public" virt="non-virtual"><scope>Catch::Matchers::Exception::ExceptionMessageMatcher</scope><name>MatcherUntypedBase</name></member>
      <member refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a985fd3c3ffcc9f2e8dc7a330130040b0" prot="public" virt="non-virtual"><scope>Catch::Matchers::Exception::ExceptionMessageMatcher</scope><name>MatcherUntypedBase</name></member>
      <member refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base_1a5bb94bf2ff5c7ef73b7c11eb173bdf3b" prot="public" virt="non-virtual"><scope>Catch::Matchers::Exception::ExceptionMessageMatcher</scope><name>operator!</name></member>
      <member refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base_1aae4a9827601f6f26a52126e193d012de" prot="public" virt="non-virtual"><scope>Catch::Matchers::Exception::ExceptionMessageMatcher</scope><name>operator&amp;&amp;</name></member>
      <member refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a1d446c018ecedb2ef633d9426d5f7914" prot="public" virt="non-virtual"><scope>Catch::Matchers::Exception::ExceptionMessageMatcher</scope><name>operator=</name></member>
      <member refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base_1a5f8542b8f1567a6f9c65d0a6da7b679b" prot="public" virt="non-virtual"><scope>Catch::Matchers::Exception::ExceptionMessageMatcher</scope><name>operator||</name></member>
      <member refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a5982c7c80ca71dfe2298babadad7a453" prot="public" virt="non-virtual"><scope>Catch::Matchers::Exception::ExceptionMessageMatcher</scope><name>toString</name></member>
      <member refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a853be93ce33f71b5abede38081c79e9d" prot="protected" virt="virtual"><scope>Catch::Matchers::Exception::ExceptionMessageMatcher</scope><name>~MatcherUntypedBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
