<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="_vulkan_module_8cpp" kind="file" language="C++">
    <compoundname>VulkanModule.cpp</compoundname>
    <includes refid="vk__mem__alloc_8h" local="no">vulkan/vk_mem_alloc.h</includes>
    <includes refid="_tools_8h" local="no">vlkx/vulkan/Tools.h</includes>
    <includes refid="_vulkan_module_8h" local="no">vlkx\vulkan\VulkanModule.h</includes>
    <includes local="yes">spdlog/spdlog.h</includes>
    <includes local="yes">spdlog/sinks/stdout_color_sinks.h</includes>
    <includes refid="_shadow_application_8h" local="yes">core/ShadowApplication.h</includes>
    <includes refid="_s_d_l2_module_8h" local="yes">core/SDL2Module.h</includes>
    <includes refid="_screen_render_pass_8h" local="yes">vlkx/render/render_pass/ScreenRenderPass.h</includes>
    <includes refid="_swap_chain_8h" local="no">vlkx/vulkan/SwapChain.h</includes>
    <incdepgraph>
      <node id="16">
        <label>core/Module.h</label>
        <link refid="_module_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>ModuleManager.h</label>
        <link refid="_module_manager_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>core/SDL2Module.h</label>
        <link refid="_s_d_l2_module_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>core/ShadowApplication.h</label>
        <link refid="_shadow_application_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>ShadowWindow.h</label>
        <link refid="_shadow_window_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>exports.h</label>
        <link refid="exports_8h"/>
      </node>
      <node id="17">
        <label>SHObject.h</label>
        <link refid="_s_h_object_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>GenericRenderPass.h</label>
        <link refid="_generic_render_pass_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>vlkx/render/render_pass/ScreenRenderPass.h</label>
        <link refid="_screen_render_pass_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>SwapChain.h</label>
        <link refid="_swap_chain_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>vlkx/vulkan/Tools.h</label>
        <link refid="_tools_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>vlkx/vulkan/ValidationAndExtension.h</label>
        <link refid="_validation_and_extension_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>VulkanDevice.h</label>
        <link refid="_vulkan_device_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>vlkx\vulkan\VulkanModule.h</label>
        <link refid="_vulkan_module_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>Buffer.h</label>
        <link refid="_buffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>vlkx/vulkan/abstraction/Commands.h</label>
        <link refid="_commands_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>vlkx/vulkan/abstraction/Image.h</label>
        <link refid="_image_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>ImageUsage.h</label>
        <link refid="_image_usage_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>Queue.h</label>
        <link refid="_queue_8h"/>
      </node>
      <node id="2">
        <label>vulkan/vk_mem_alloc.h</label>
        <link refid="vk__mem__alloc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>shadow-engine/shadow-renderer/src/vulkan/VulkanModule.cpp</label>
        <link refid="_vulkan_module_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>shadow/util/RefCounter.h</label>
        <link refid="_ref_counter_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>SDL.h</label>
      </node>
      <node id="20">
        <label>SDL_events.h</label>
      </node>
      <node id="15">
        <label>SDL_vulkan.h</label>
      </node>
      <node id="26">
        <label>algorithm</label>
      </node>
      <node id="33">
        <label>array</label>
      </node>
      <node id="6">
        <label>functional</label>
      </node>
      <node id="41">
        <label>imgui.h</label>
      </node>
      <node id="42">
        <label>imgui_impl_sdl.h</label>
      </node>
      <node id="43">
        <label>imgui_impl_vulkan.h</label>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="40">
        <label>list</label>
      </node>
      <node id="29">
        <label>map</label>
      </node>
      <node id="21">
        <label>memory</label>
      </node>
      <node id="24">
        <label>optional</label>
      </node>
      <node id="10">
        <label>set</label>
      </node>
      <node id="36">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="35">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="5">
        <label>stdexcept</label>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="19">
        <label>typeinfo</label>
      </node>
      <node id="34">
        <label>utility</label>
      </node>
      <node id="32">
        <label>variant</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="3">
        <label>vulkan/vulkan.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_vulkan_module_8cpp_1abea80547807da765ebe9fce1c6dd6a8d" prot="public" static="no">
        <name>VMA_IMPLEMENTATION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/src/vulkan/VulkanModule.cpp" line="1" column="9" bodyfile="shadow-engine/shadow-renderer/src/vulkan/VulkanModule.cpp" bodystart="1" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_vulkan_module_8cpp_1a80c1a22862830ee59c0a13dcff37dfba" prot="public" static="no">
        <name>CATCH</name>
        <param><defname>x</defname></param>
        <initializer>    try { x } catch (std::exception&amp; e) { spdlog::error(e.what()); exit(0); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/src/vulkan/VulkanModule.cpp" line="14" column="9" bodyfile="shadow-engine/shadow-renderer/src/vulkan/VulkanModule.cpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_vulkan_module_8cpp_1ad1f30529f071ba5f530f84d7257a16d3" prot="public" static="no" mutable="no">
        <type><ref refid="_s_h_object_8h_1a140fffa6eb414a66bee4b353fae1c6b1" kindref="member">SHObject_Base_Impl</ref>(<ref refid="class_vulkan_module" kindref="compound">VulkanModule</ref>) std bool</type>
        <definition>SHObject_Base_Impl (VulkanModule) std bool renderingGeometry</definition>
        <argsstring></argsstring>
        <name>renderingGeometry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/src/vulkan/VulkanModule.cpp" line="20" column="6" bodyfile="shadow-engine/shadow-renderer/src/vulkan/VulkanModule.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_vulkan_module_8cpp_1a25d70decf309375802e7cc7246d03591" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classvlkx_1_1_screen_render_pass_manager" kindref="compound">vlkx::ScreenRenderPassManager</ref> &gt;</type>
        <definition>std::unique_ptr&lt;vlkx::ScreenRenderPassManager&gt; editorPass</definition>
        <argsstring></argsstring>
        <name>editorPass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/src/vulkan/VulkanModule.cpp" line="21" column="17" bodyfile="shadow-engine/shadow-renderer/src/vulkan/VulkanModule.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_vulkan_module_8cpp_1ae9a47cbf512cbffc64db1a14baa40350" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classvlkx_1_1_render_command" kindref="compound">vlkx::RenderCommand</ref> &gt;</type>
        <definition>std::unique_ptr&lt;vlkx::RenderCommand&gt; editorRenderCommands</definition>
        <argsstring></argsstring>
        <name>editorRenderCommands</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/src/vulkan/VulkanModule.cpp" line="23" column="17" bodyfile="shadow-engine/shadow-renderer/src/vulkan/VulkanModule.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#define<sp/>VMA_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="vk__mem__alloc_8h" kindref="compound">vulkan/vk_mem_alloc.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_tools_8h" kindref="compound">vlkx/vulkan/Tools.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_vulkan_module_8h" kindref="compound">vlkx\vulkan\VulkanModule.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;spdlog/spdlog.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;spdlog/sinks/stdout_color_sinks.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_shadow_application_8h" kindref="compound">core/ShadowApplication.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l2_module_8h" kindref="compound">core/SDL2Module.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_screen_render_pass_8h" kindref="compound">vlkx/render/render_pass/ScreenRenderPass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_swap_chain_8h" kindref="compound">vlkx/vulkan/SwapChain.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CATCH(x)<sp/>\</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>try<sp/>{<sp/>x<sp/>}<sp/>catch<sp/>(std::exception&amp;<sp/>e)<sp/>{<sp/>spdlog::error(e.what());<sp/>exit(0);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><ref refid="_s_h_object_8h_1a140fffa6eb414a66bee4b353fae1c6b1" kindref="member">SHObject_Base_Impl</ref>(<ref refid="class_vulkan_module" kindref="compound">VulkanModule</ref>)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">std::unique_ptr&lt;vlkx::ScreenRenderPassManager&gt;<sp/>renderPass;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_vulkan_module_8cpp_1ad1f30529f071ba5f530f84d7257a16d3" kindref="member">renderingGeometry</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">std::unique_ptr&lt;vlkx::ScreenRenderPassManager&gt;<sp/><ref refid="_vulkan_module_8cpp_1a25d70decf309375802e7cc7246d03591" kindref="member">editorPass</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">std::unique_ptr&lt;vlkx::RenderCommand&gt;<sp/><ref refid="_vulkan_module_8cpp_1ae9a47cbf512cbffc64db1a14baa40350" kindref="member">editorRenderCommands</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;vlkx::ScreenRenderPassManager&gt;&amp;<sp/><ref refid="class_vulkan_module_1ac24b3b793d028e7e199f5936391a91ab" kindref="member">VulkanModule::getRenderPass</ref>()<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>renderPass;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="class_vulkan_module_1ab637914aeeeaf4a4e559050642ed49e4" kindref="member">VulkanModule::VulkanModule</ref>()<sp/>{<sp/><ref refid="class_vulkan_module_1a93f33e8ec1dedf9fb6284a5400406bda" kindref="member">instance</ref><sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="class_vulkan_module_1a4b10c9900785fdcd73cc891b14b9489c" kindref="member">VulkanModule::~VulkanModule</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="class_vulkan_module" kindref="compound">VulkanModule</ref>*<sp/><ref refid="class_vulkan_module_1a93f33e8ec1dedf9fb6284a5400406bda" kindref="member">VulkanModule::instance</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><ref refid="class_vulkan_module" kindref="compound">VulkanModule</ref>*<sp/><ref refid="class_vulkan_module_1ae98fb6b5c4497288b51c9c4b860cb1bd" kindref="member">VulkanModule::getInstance</ref>()<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a93f33e8ec1dedf9fb6284a5400406bda" kindref="member">VulkanModule::instance</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>?<sp/><ref refid="class_vulkan_module_1a93f33e8ec1dedf9fb6284a5400406bda" kindref="member">VulkanModule::instance</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(<ref refid="class_vulkan_module_1a93f33e8ec1dedf9fb6284a5400406bda" kindref="member">VulkanModule::instance</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1ab637914aeeeaf4a4e559050642ed49e4" kindref="member">VulkanModule</ref>());</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a07dd1f95bbbcc625661f48ea48000546" kindref="member">VulkanModule::EnableEditor</ref>()<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>editorEnabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">VkExtent2D<sp/><ref refid="class_vulkan_module_1a0f5101f7eab48da414a7203d0a891d83" kindref="member">VulkanModule::GetRenderExtent</ref>()<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(editorEnabled)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_vulkan_module_8cpp_1ad1f30529f071ba5f530f84d7257a16d3" kindref="member">renderingGeometry</ref>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>editorContentFrames[0]-&gt;getExtent();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swapchain-&gt;<ref refid="class_swap_chain_1a206037434aed234b79446d77151f155d" kindref="member">extent</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swapchain-&gt;<ref refid="class_swap_chain_1a206037434aed234b79446d77151f155d" kindref="member">extent</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a9327e637aeae4b6d4f2cd0232a605098" kindref="member">VulkanModule::Recreate</ref>()<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDeviceWaitIdle(device-&gt;<ref refid="class_vulkan_device_1a7ae557d71031d0212e50beba8b976d4b" kindref="member">logical</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>device-&gt;<ref refid="class_vulkan_device_1a586c899219c65739d352c9cbfb254555" kindref="member">swapChain</ref><sp/>=<sp/>device-&gt;<ref refid="class_vulkan_device_1a41e5ace4383646af174805037e883847" kindref="member">checkSwapchain</ref>(device-&gt;<ref refid="class_vulkan_device_1ab69ae359dff8b58a416c59782831fe91" kindref="member">physical</ref>,<sp/>surface);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device-&gt;<ref refid="class_vulkan_device_1a586c899219c65739d352c9cbfb254555" kindref="member">swapChain</ref>.<ref refid="struct_swap_chain_meta_1a8ae5a9457f5477f6cdc810605356dd57" kindref="member">capabilities</ref>.currentExtent.width<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>device-&gt;<ref refid="class_vulkan_device_1a586c899219c65739d352c9cbfb254555" kindref="member">swapChain</ref>.<ref refid="struct_swap_chain_meta_1a8ae5a9457f5477f6cdc810605356dd57" kindref="member">capabilities</ref>.currentExtent.height<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[]()<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_Event<sp/>event;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(SDL_PollEvent(&amp;event))<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.type<sp/>==<sp/>SDL_WINDOWEVENT<sp/>&amp;&amp;<sp/>(event.window.event<sp/>==<sp/>SDL_WINDOWEVENT_MAXIMIZED<sp/>||<sp/>event.window.event<sp/>==<sp/>SDL_WINDOWEVENT_SHOWN<sp/>||<sp/>event.window.event<sp/>==<sp/>SDL_WINDOWEVENT_RESIZED<sp/>||<sp/>event.window.event<sp/>==<sp/>SDL_WINDOWEVENT_SIZE_CHANGED<sp/>||<sp/>event.window.event<sp/>==<sp/>SDL_WINDOWEVENT_RESTORED))</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>device-&gt;<ref refid="class_vulkan_device_1a586c899219c65739d352c9cbfb254555" kindref="member">swapChain</ref><sp/>=<sp/>device-&gt;<ref refid="class_vulkan_device_1a41e5ace4383646af174805037e883847" kindref="member">checkSwapchain</ref>(device-&gt;<ref refid="class_vulkan_device_1ab69ae359dff8b58a416c59782831fe91" kindref="member">physical</ref>,<sp/>surface);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>swapchain-&gt;<ref refid="class_swap_chain_1a492d4bf86eae9e273068dee33056eed1" kindref="member">destroy</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>swapchain-&gt;<ref refid="class_swap_chain_1a0c46b7490ac26fe2d8b1818168c7ea9a" kindref="member">create</ref>(surface);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>renderPass-&gt;initializeRenderPass();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_vulkan_module_8cpp_1a25d70decf309375802e7cc7246d03591" kindref="member">editorPass</ref>-&gt;initializeRenderPass();</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1af088beee41a686d73f1eab2e1f0196c5" kindref="member">VulkanModule::PreInit</ref>()<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;Vulkan<sp/>Renderer<sp/>Module<sp/>loading..&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>shApp<sp/>=<sp/><ref refid="class_shadow_engine_1_1_shadow_application_1a88962791ce15c8719755411ae7e6b007" kindref="member">ShadowEngine::ShadowApplication::Get</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_shadow_engine_1_1_module_manager" kindref="compound">ShadowEngine::ModuleManager</ref><sp/>&amp;moduleManager<sp/>=<sp/>shApp.GetModuleManager();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdl2module<sp/>=<sp/>moduleManager.<ref refid="class_shadow_engine_1_1_module_manager_1a87929c62313db7ee8b7a15830623189f" kindref="member">GetModuleByType</ref>&lt;<ref refid="class_shadow_engine_1_1_s_d_l2_module" kindref="compound">ShadowEngine::SDL2Module</ref>&gt;();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_shadow_application_8cpp_1a80c1a22862830ee59c0a13dcff37dfba" kindref="member">CATCH</ref>(<ref refid="class_vulkan_module_1a71854522b1134be7fe6d5b4f3c737772" kindref="member">initVulkan</ref>(sdl2module-&gt;_window-&gt;sdlWindowPtr);)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>IMGUI_CHECKVERSION();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::CreateContext();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiIO&amp;<sp/>io<sp/>=<sp/>ImGui::GetIO();<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)io;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>io.ConfigFlags<sp/>|=<sp/>ImGuiConfigFlags_DockingEnable;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>Docking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>io.ConfigFlags<sp/>|=<sp/>ImGuiConfigFlags_ViewportsEnable;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>Multi-Viewport<sp/>/<sp/>Platform<sp/>Windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>Dear<sp/>ImGui<sp/>style</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::StyleColorsDark();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>VkDescriptorPool<sp/>imGuiPool;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>VkDescriptorPoolSize<sp/>pool_sizes[]<sp/>=</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_SAMPLER,<sp/>1000<sp/>},</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER,<sp/>1000<sp/>},</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE,<sp/>1000<sp/>},</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_STORAGE_IMAGE,<sp/>1000<sp/>},</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER,<sp/>1000<sp/>},</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER,<sp/>1000<sp/>},</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER,<sp/>1000<sp/>},</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,<sp/>1000<sp/>},</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC,<sp/>1000<sp/>},</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC,<sp/>1000<sp/>},</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT,<sp/>1000<sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>VkDescriptorPoolCreateInfo<sp/>pool_info<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>pool_info.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>pool_info.flags<sp/>=<sp/>VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>pool_info.maxSets<sp/>=<sp/>1000<sp/>*<sp/>IM_ARRAYSIZE(pool_sizes);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>pool_info.poolSizeCount<sp/>=<sp/>(uint32_t)IM_ARRAYSIZE(pool_sizes);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>pool_info.pPoolSizes<sp/>=<sp/>pool_sizes;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>vkCreateDescriptorPool(<ref refid="class_vulkan_module_1acaf1d424d08049045241ce16405f60bf" kindref="member">getDevice</ref>()-&gt;logical,<sp/>&amp;pool_info,<sp/>VK_NULL_HANDLE,<sp/>&amp;imGuiPool);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>Platform/Renderer<sp/>backends</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplSDL2_InitForVulkan(wnd);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplVulkan_InitInfo<sp/>init_info<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.Instance<sp/>=<sp/><ref refid="class_vulkan_module_1a94dd0b8d16e08b58a6f8a336721100c5" kindref="member">getVulkan</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.PhysicalDevice<sp/>=<sp/><ref refid="class_vulkan_module_1acaf1d424d08049045241ce16405f60bf" kindref="member">getDevice</ref>()-&gt;<ref refid="class_vulkan_device_1ab69ae359dff8b58a416c59782831fe91" kindref="member">physical</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.Device<sp/>=<sp/><ref refid="class_vulkan_module_1acaf1d424d08049045241ce16405f60bf" kindref="member">getDevice</ref>()-&gt;<ref refid="class_vulkan_device_1a7ae557d71031d0212e50beba8b976d4b" kindref="member">logical</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.QueueFamily<sp/>=<sp/><ref refid="class_vulkan_module_1acaf1d424d08049045241ce16405f60bf" kindref="member">getDevice</ref>()-&gt;<ref refid="class_vulkan_device_1a61181a11767a514c8eac6e2cb0bdb7cf" kindref="member">queueData</ref>.<ref refid="struct_queue_families_1af657ef9f0339098cb1aaa38c47b16a04" kindref="member">graphics</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.Queue<sp/>=<sp/><ref refid="class_vulkan_module_1acaf1d424d08049045241ce16405f60bf" kindref="member">getDevice</ref>()-&gt;<ref refid="class_vulkan_device_1a762990556775a6d7507d1f8a067e5718" kindref="member">graphicsQueue</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.PipelineCache<sp/>=<sp/>VK_NULL_HANDLE;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.DescriptorPool<sp/>=<sp/>imGuiPool;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.Subpass<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.MinImageCount<sp/>=<sp/><ref refid="class_vulkan_module_1ad5b31bcba629111bc9f261ec41055d82" kindref="member">getSwapchain</ref>()-&gt;<ref refid="class_swap_chain_1a9b4c944341c67e67daf6e617f79def53" kindref="member">images</ref>.size();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.ImageCount<sp/>=<sp/><ref refid="class_vulkan_module_1ad5b31bcba629111bc9f261ec41055d82" kindref="member">getSwapchain</ref>()-&gt;<ref refid="class_swap_chain_1a9b4c944341c67e67daf6e617f79def53" kindref="member">images</ref>.size();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.MSAASamples<sp/>=<sp/>VK_SAMPLE_COUNT_1_BIT;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.Allocator<sp/>=<sp/>VK_NULL_HANDLE;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.CheckVkResultFn<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(editorEnabled)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>editorContentFrames.resize(1);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvlkx_1_1_texture_image_1_1_meta" kindref="compound">vlkx::TextureImage::Meta</ref><sp/>meta<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">},<sp/>{<ref refid="classvlkx_1_1_image_usage_1a6bd9af643a3396d49a412279c788001f" kindref="member">vlkx::ImageUsage::renderTarget</ref>(0)},<sp/>VK_FORMAT_R8G8B8A8_SRGB,<sp/>640,<sp/>480,<sp/>4</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>editorContentFrames[i]<sp/>=<sp/>std::make_unique&lt;vlkx::TextureImage&gt;(0,<sp/><ref refid="structvlkx_1_1_image_sampler_1_1_config" kindref="compound">vlkx::ImageSampler::Config</ref><sp/>{},<sp/>meta);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_vulkan_module_8cpp_1ae9a47cbf512cbffc64db1a14baa40350" kindref="member">editorRenderCommands</ref><sp/>=<sp/>std::make_unique&lt;vlkx::RenderCommand&gt;(editorContentFrames.size());</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>renderPass<sp/>=<sp/>std::make_unique&lt;vlkx::ScreenRenderPassManager&gt;(<ref refid="classvlkx_1_1_renderer_config" kindref="compound">vlkx::RendererConfig</ref><sp/>{<sp/>editorEnabled<sp/>?<sp/>1<sp/>:<sp/>2,<sp/>editorEnabled<sp/>?<sp/>editorContentFrames<sp/>:<sp/>swapchain-&gt;<ref refid="class_swap_chain_1a9b4c944341c67e67daf6e617f79def53" kindref="member">images</ref>,<sp/>!editorEnabled<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>renderPass-&gt;initializeRenderPass();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_vulkan_module_8cpp_1a25d70decf309375802e7cc7246d03591" kindref="member">editorPass</ref><sp/>=<sp/>std::make_unique&lt;vlkx::ScreenRenderPassManager&gt;(<ref refid="classvlkx_1_1_renderer_config" kindref="compound">vlkx::RendererConfig</ref><sp/>{<sp/>2,<sp/>swapchain-&gt;<ref refid="class_swap_chain_1a9b4c944341c67e67daf6e617f79def53" kindref="member">images</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>}<sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_vulkan_module_8cpp_1a25d70decf309375802e7cc7246d03591" kindref="member">editorPass</ref>-&gt;initializeRenderPass();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplVulkan_Init(&amp;init_info,<sp/>**(editorEnabled<sp/>?<sp/><ref refid="_vulkan_module_8cpp_1a25d70decf309375802e7cc7246d03591" kindref="member">editorPass</ref><sp/>:<sp/>renderPass)-&gt;getPass());</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_vk_tools_1a41960289749cf0bdb6da01f44aabaf77" kindref="member">VkTools::immediateExecute</ref>([](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkCommandBuffer&amp;<sp/>commands)<sp/>{<sp/>ImGui_ImplVulkan_CreateFontsTexture(commands);<sp/>},<sp/><ref refid="class_vulkan_module_1acaf1d424d08049045241ce16405f60bf" kindref="member">getDevice</ref>());</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(editorEnabled)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>editorRenderPlanes.resize(editorContentFrames.size());</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>editorContentFrames.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>editorRenderPlanes[i]<sp/>=<sp/>ImGui_ImplVulkan_AddTexture(<ref refid="namespace_vk_tools_1a01591839c97bb49c4c9fc43b78eea78f" kindref="member">VkTools::createSampler</ref>(VK_FILTER_LINEAR,<sp/>VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE,<sp/>0,<sp/>device-&gt;<ref refid="class_vulkan_device_1a7ae557d71031d0212e50beba8b976d4b" kindref="member">logical</ref>),<sp/>editorContentFrames[i]-&gt;getView(),<sp/>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_vulkan_module_8cpp_1ad1f30529f071ba5f530f84d7257a16d3" kindref="member">renderingGeometry</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a75e20c8561b8132c213b871e69f1e4ff" kindref="member">VulkanModule::Init</ref>()<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a5d5b5fe704a9753199040b711c5711b4" kindref="member">VulkanModule::BeginRenderPass</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;vlkx::RenderCommand&gt;&amp;<sp/>commands)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>update<sp/>=<sp/>!editorEnabled<sp/>?<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame)<sp/>{<sp/><ref refid="class_shadow_engine_1_1_module_manager_1a691a4e9a4c1765f94582e08e3b5664d2" kindref="member">ShadowEngine::ModuleManager::instance</ref>-&gt;<ref refid="class_shadow_engine_1_1_module_manager_1a8ba6387331cc5b577a46e2e54d2bf40b" kindref="member">Update</ref>(frame);<sp/>}<sp/>:<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame)<sp/>{};</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>commands-&gt;execute(commands-&gt;getFrame(),<sp/>swapchain-&gt;<ref refid="class_swap_chain_1a4dc5f39b6548457c13a4b3e4f80a2bd5" kindref="member">swapChain</ref>,<sp/>update,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkCommandBuffer&amp;<sp/>buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(editorEnabled<sp/>?<sp/><ref refid="_vulkan_module_8cpp_1a25d70decf309375802e7cc7246d03591" kindref="member">editorPass</ref><sp/>:<sp/>renderPass)-&gt;getPass()-&gt;execute(buffer,<sp/>frame,<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>our<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkCommandBuffer<sp/>&amp;commands)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!editorEnabled)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_vulkan_module_8cpp_1ad1f30529f071ba5f530f84d7257a16d3" kindref="member">renderingGeometry</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_shadow_engine_1_1_module_manager_1a691a4e9a4c1765f94582e08e3b5664d2" kindref="member">ShadowEngine::ModuleManager::instance</ref>-&gt;<ref refid="class_shadow_engine_1_1_module_manager_1add5f72f04d637c3593d53241a42af1d2" kindref="member">Render</ref>(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">VkCommandBuffer<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(commands),<sp/>frame);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_shadow_engine_1_1_module_manager_1a691a4e9a4c1765f94582e08e3b5664d2" kindref="member">ShadowEngine::ModuleManager::instance</ref>-&gt;<ref refid="class_shadow_engine_1_1_module_manager_1ad7ebac80aa58792360552d5ccb673897" kindref="member">LateRender</ref>(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">VkCommandBuffer<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(commands),<sp/>frame);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_vulkan_module_8cpp_1ad1f30529f071ba5f530f84d7257a16d3" kindref="member">renderingGeometry</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>ImGUI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkCommandBuffer<sp/>&amp;commands)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplVulkan_NewFrame();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplSDL2_NewFrame();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::NewFrame();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(editorEnabled)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ImGui::Begin(</highlight><highlight class="stringliteral">&quot;Game<sp/>View&quot;</highlight><highlight class="normal">,<sp/>&amp;active,<sp/>ImGuiWindowFlags_None))<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::Image((ImTextureID)<sp/>editorRenderPlanes[0],<sp/>{640,<sp/>480});</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::End();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_shadow_engine_1_1_module_manager_1a691a4e9a4c1765f94582e08e3b5664d2" kindref="member">ShadowEngine::ModuleManager::instance</ref>-&gt;<ref refid="class_shadow_engine_1_1_module_manager_1aceb079e97edadeb2aace98b644f6996d" kindref="member">OverlayRender</ref>();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::Render();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGuiIO<sp/>&amp;io<sp/>=<sp/>ImGui::GetIO();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>io;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplVulkan_RenderDrawData(ImGui::GetDrawData(),<sp/>commands);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>and<sp/>Render<sp/>additional<sp/>Platform<sp/>Windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io.ConfigFlags<sp/>&amp;<sp/>ImGuiConfigFlags_ViewportsEnable)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::UpdatePlatformWindows();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::RenderPlatformWindowsDefault();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res.has_value())</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_shadow_engine_1_1_module_manager_1a245c3eb71623700631edbeca788f8595" kindref="member">ShadowEngine::ModuleManager::getInstance</ref>()-&gt;<ref refid="class_shadow_engine_1_1_module_manager_1a7bd59afd6aa1641371f1ca23605e2487" kindref="member">Recreate</ref>();</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1aa549db3486d65ae7065760c5efa42871" kindref="member">VulkanModule::PreRender</ref>()<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(editorEnabled)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_vulkan_module_8cpp_1ae9a47cbf512cbffc64db1a14baa40350" kindref="member">editorRenderCommands</ref>-&gt;executeSimple(<ref refid="_vulkan_module_8cpp_1ae9a47cbf512cbffc64db1a14baa40350" kindref="member">editorRenderCommands</ref>-&gt;getFrame(),<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame)<sp/>{<sp/>ShadowEngine::ModuleManager::instance-&gt;Update(frame);<sp/>},</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkCommandBuffer&amp;<sp/>buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderPass-&gt;getPass()-&gt;execute(buffer,<sp/>frame,<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](const<sp/>VkCommandBuffer&amp;<sp/>commands)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderingGeometry<sp/>=<sp/>true;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShadowEngine::ModuleManager::instance-&gt;Render(const_cast&lt;VkCommandBuffer<sp/>&amp;&gt;(commands),<sp/>frame);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShadowEngine::ModuleManager::instance-&gt;LateRender(const_cast&lt;VkCommandBuffer<sp/>&amp;&gt;(commands),<sp/>frame);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderingGeometry<sp/>=<sp/>false;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a38e5fd3ac3eeb1e5b193dff34646dad4" kindref="member">VulkanModule::OverlayRender</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1ae6abe5f590823da8081ddb69e38acc52" kindref="member">VulkanModule::AfterFrameEnd</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1ab7dfb00b3005acf2f3c2c7cd45a36837" kindref="member">VulkanModule::Render</ref>(VkCommandBuffer&amp;<sp/>commands,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame)<sp/>{}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a7fce46b833391e373a5858e86e977519" kindref="member">VulkanModule::Update</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame)<sp/>{}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1ab78fc85fe99ac09ab1e859f0f8036df0" kindref="member">VulkanModule::Event</ref>(SDL_Event<sp/>*e)<sp/>{<sp/>(void)e;<sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a8dc7877220a4f2eaa08174b35fe71d5a" kindref="member">VulkanModule::LateRender</ref>(VkCommandBuffer&amp;<sp/>commands,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a45e861ddeb6dafa9b079feb57ce50e28" kindref="member">VulkanModule::Destroy</ref>()<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplVulkan_Shutdown();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplSDL2_Shutdown();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::DestroyContext();</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a6c9cfb57063b8b57b2fbdef1820876fb" kindref="member">VulkanModule::createAppAndVulkanInstance</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enableValidation,<sp/><ref refid="class_validation_and_extension" kindref="compound">ValidationAndExtension</ref>*<sp/>validations)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>VkApplicationInfo<sp/>info<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>info.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_APPLICATION_INFO;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>info.pApplicationName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Sup&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>info.applicationVersion<sp/>=<sp/>VK_MAKE_API_VERSION(0,<sp/>1,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>info.pEngineName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Infinity<sp/>Drive&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>info.engineVersion<sp/>=<sp/>VK_MAKE_API_VERSION(0,<sp/>1,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>info.apiVersion<sp/>=<sp/>VK_API_VERSION_1_0;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>VkInstanceCreateInfo<sp/>instanceInfo<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>instanceInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__APPLE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>VkFlags<sp/>instanceFlag<sp/>=<sp/>VK_INSTANCE_CREATE_ENUMERATE_PORTABILITY_BIT_KHR;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>VkFlags<sp/>instanceFlag<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>instanceInfo.flags<sp/>=<sp/>instanceFlag;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>instanceInfo.pApplicationInfo<sp/>=<sp/>&amp;info;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>extensions<sp/>=<sp/>validations-&gt;<ref refid="class_validation_and_extension_1a9aafce272c88289fa4cfa3ba8edb17ba" kindref="member">getRequiredExtensions</ref>(wnd,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>instanceInfo.enabledExtensionCount<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(extensions.size());</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>instanceInfo.ppEnabledExtensionNames<sp/>=<sp/>&amp;extensions[0];</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>layers<sp/>=<sp/>validations-&gt;<ref refid="class_validation_and_extension_1a36e54174e9371e66622855b5dc6243ae" kindref="member">requiredValidations</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enableValidation)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instanceInfo.enabledLayerCount<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(layers.size());</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instanceInfo.ppEnabledLayerNames<sp/>=<sp/>&amp;layers[0];</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instanceInfo.enabledLayerCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>vkCreateInstance(&amp;instanceInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;vulkan);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>VK_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>Vulkan:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(status));</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a71854522b1134be7fe6d5b4f3c737772" kindref="member">VulkanModule::initVulkan</ref>(SDL_Window*<sp/>window)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>wnd<sp/>=<sp/>window;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>validators<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_validation_and_extension" kindref="compound">ValidationAndExtension</ref>();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;Initializing<sp/>Infinity<sp/>Drive<sp/>rendering<sp/>engine&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::default_logger()-&gt;set_level(spdlog::level::debug);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!validators-&gt;<ref refid="class_validation_and_extension_1ab8fe732c1411ea23f90b4992c318f3cb" kindref="member">checkValidationSupport</ref>())</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Validation<sp/>not<sp/>available&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_module_1a6c9cfb57063b8b57b2fbdef1820876fb" kindref="member">createAppAndVulkanInstance</ref>(<ref refid="class_vulkan_module_1a7bb66e55b3b9b66e4dce6358efe46e4a" kindref="member">validationRequired</ref>,<sp/>validators);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>validators-&gt;<ref refid="class_validation_and_extension_1a2abbe1ad3c46919e08645016df5b0854" kindref="member">setupDebugCallback</ref>(<ref refid="class_vulkan_module_1a7bb66e55b3b9b66e4dce6358efe46e4a" kindref="member">validationRequired</ref>,<sp/>vulkan);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SDL_Vulkan_CreateSurface(window,<sp/>vulkan,<sp/>&amp;surface)<sp/>!=<sp/>SDL_TRUE)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>create<sp/>Vulkan<sp/>Surface&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;device<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_device" kindref="compound">VulkanDevice</ref>();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;device-&gt;<ref refid="class_vulkan_device_1a1e0489ece83a5a20b153a5e8c6716a0a" kindref="member">choosePhysicalDevice</ref>(&amp;vulkan,<sp/>surface);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;device-&gt;<ref refid="class_vulkan_device_1ab128ebdc96db42d01d2e16704b84ff2e" kindref="member">createLogicalDevice</ref>(surface,<sp/><ref refid="class_vulkan_module_1a7bb66e55b3b9b66e4dce6358efe46e4a" kindref="member">validationRequired</ref>,<sp/>validators);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vma_allocator_create_info" kindref="compound">VmaAllocatorCreateInfo</ref><sp/>allocatorInfo<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>allocatorInfo.<ref refid="struct_vma_allocator_create_info_1ad09ce637aa92cb7c8c2a742943668087" kindref="member">physicalDevice</ref><sp/>=<sp/>this-&gt;device-&gt;<ref refid="class_vulkan_device_1ab69ae359dff8b58a416c59782831fe91" kindref="member">physical</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>allocatorInfo.<ref refid="struct_vma_allocator_create_info_1ac35aa355d3bfcbf6bb2eb88ccf68125c" kindref="member">device</ref><sp/>=<sp/>this-&gt;device-&gt;<ref refid="class_vulkan_device_1a7ae557d71031d0212e50beba8b976d4b" kindref="member">logical</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>allocatorInfo.<ref refid="struct_vma_allocator_create_info_1aa2d4e3d86e6828834a56cf9f9406149a" kindref="member">instance</ref><sp/>=<sp/>this-&gt;vulkan;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__init_1gaf77c946fbecfcc54d02c3d1c1e7e23e7" kindref="member">vmaCreateAllocator</ref>(&amp;allocatorInfo,<sp/>&amp;this-&gt;allocator);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_vk_tools_1a7195f698aad36f4aa2a4a9e977991486" kindref="member">VkTools::allocator</ref><sp/>=<sp/>allocator;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;swapchain<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_swap_chain" kindref="compound">SwapChain</ref>();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;swapchain-&gt;<ref refid="class_swap_chain_1a0c46b7490ac26fe2d8b1818168c7ea9a" kindref="member">create</ref>(surface);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;Infinity<sp/>Drive<sp/>initialization<sp/>finished.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1ae40978cff7e5968c179044057548500d" kindref="member">VulkanModule::cleanup</ref>()<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>the<sp/>GPU<sp/>to<sp/>not<sp/>be<sp/>busy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDeviceWaitIdle(<ref refid="class_vulkan_module_1ae98fb6b5c4497288b51c9c4b860cb1bd" kindref="member">VulkanModule::getInstance</ref>()-&gt;<ref refid="class_vulkan_module_1acaf1d424d08049045241ce16405f60bf" kindref="member">getDevice</ref>()-&gt;logical);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>swapchain-&gt;<ref refid="class_swap_chain_1a492d4bf86eae9e273068dee33056eed1" kindref="member">destroy</ref>();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destroy<sp/>the<sp/>Vulkan<sp/>Device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_module_1ae98fb6b5c4497288b51c9c4b860cb1bd" kindref="member">VulkanModule::getInstance</ref>()-&gt;<ref refid="class_vulkan_module_1acaf1d424d08049045241ce16405f60bf" kindref="member">getDevice</ref>()-&gt;<ref refid="class_vulkan_device_1a64e445c2e7052a32cd753941eef89cf8" kindref="member">destroy</ref>();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>layer<sp/>validators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>validators-&gt;<ref refid="class_validation_and_extension_1ae92f27853676ed3668a31d2dd1bb75dc" kindref="member">destroy</ref>(<ref refid="class_vulkan_module_1a7bb66e55b3b9b66e4dce6358efe46e4a" kindref="member">validationRequired</ref>,<sp/>vulkan);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>surface<sp/>and<sp/>Vulkan<sp/>instance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroySurfaceKHR(vulkan,<sp/>surface,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyInstance(vulkan,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__init_1ga0383c8c957625914e9b89bd165ff13f3" kindref="member">vmaDestroyAllocator</ref>(allocator);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>swapchain;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>device;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>validators;</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="shadow-engine/shadow-renderer/src/vulkan/VulkanModule.cpp"/>
  </compounddef>
</doxygen>
