<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="structvlkx_1_1_image_descriptor_1_1_dimension" kind="struct" language="C++" prot="public">
    <compoundname>vlkx::ImageDescriptor::Dimension</compoundname>
    <includes refid="_image_8h" local="no">Image.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvlkx_1_1_image_descriptor_1_1_dimension_1ae9f71856b368176f3e260b7b3d8da8b8" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t vlkx::ImageDescriptor::Dimension::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <qualifiedname>vlkx::ImageDescriptor::Dimension::width</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Image.h" line="18" column="22" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Image.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvlkx_1_1_image_descriptor_1_1_dimension_1a5246fa0ea30b223d0ead465bfba5473a" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t vlkx::ImageDescriptor::Dimension::height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <qualifiedname>vlkx::ImageDescriptor::Dimension::height</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Image.h" line="19" column="22" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Image.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvlkx_1_1_image_descriptor_1_1_dimension_1a4f5d4d3b3eb8a5c4a6ad1750da79e46f" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t vlkx::ImageDescriptor::Dimension::channels</definition>
        <argsstring></argsstring>
        <name>channels</name>
        <qualifiedname>vlkx::ImageDescriptor::Dimension::channels</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Image.h" line="20" column="22" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Image.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvlkx_1_1_image_descriptor_1_1_dimension_1ab2e2ceb5210340680a66213153405c46" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VkExtent2D</type>
        <definition>VkExtent2D vlkx::ImageDescriptor::Dimension::getExtent</definition>
        <argsstring>() const</argsstring>
        <name>getExtent</name>
        <qualifiedname>vlkx::ImageDescriptor::Dimension::getExtent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Image.h" line="22" column="24" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Image.h" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="structvlkx_1_1_image_descriptor_1_1_dimension_1a382fcebd738dd011ca623f95f4592431" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t vlkx::ImageDescriptor::Dimension::getSize</definition>
        <argsstring>() const</argsstring>
        <name>getSize</name>
        <qualifiedname>vlkx::ImageDescriptor::Dimension::getSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Image.h" line="23" column="20" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Image.h" bodystart="23" bodyend="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Image.h" line="17" column="9" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Image.h" bodystart="17" bodyend="24"/>
    <listofallmembers>
      <member refid="structvlkx_1_1_image_descriptor_1_1_dimension_1a4f5d4d3b3eb8a5c4a6ad1750da79e46f" prot="public" virt="non-virtual"><scope>vlkx::ImageDescriptor::Dimension</scope><name>channels</name></member>
      <member refid="structvlkx_1_1_image_descriptor_1_1_dimension_1ab2e2ceb5210340680a66213153405c46" prot="public" virt="non-virtual"><scope>vlkx::ImageDescriptor::Dimension</scope><name>getExtent</name></member>
      <member refid="structvlkx_1_1_image_descriptor_1_1_dimension_1a382fcebd738dd011ca623f95f4592431" prot="public" virt="non-virtual"><scope>vlkx::ImageDescriptor::Dimension</scope><name>getSize</name></member>
      <member refid="structvlkx_1_1_image_descriptor_1_1_dimension_1a5246fa0ea30b223d0ead465bfba5473a" prot="public" virt="non-virtual"><scope>vlkx::ImageDescriptor::Dimension</scope><name>height</name></member>
      <member refid="structvlkx_1_1_image_descriptor_1_1_dimension_1ae9f71856b368176f3e260b7b3d8da8b8" prot="public" virt="non-virtual"><scope>vlkx::ImageDescriptor::Dimension</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
