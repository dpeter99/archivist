<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classvlkxtemp_1_1_model" kind="class" language="C++" prot="public">
    <compoundname>vlkxtemp::Model</compoundname>
    <includes refid="_builder_8h" local="no">Builder.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classvlkxtemp_1_1_model_1acd82c89b3e86f7e742267e827dc6674c" prot="private" static="no">
        <type><ref refid="classvlkxtemp_1_1_model_builder_1a93fee06b531f57b5eba9a049f80d2699" kindref="member">ModelBuilder::Descriptors</ref></type>
        <definition>using vlkxtemp::Model::Descriptors =  ModelBuilder::Descriptors</definition>
        <argsstring></argsstring>
        <name>Descriptors</name>
        <qualifiedname>vlkxtemp::Model::Descriptors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" line="110" column="9" bodyfile="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvlkxtemp_1_1_model_1aea653c959b1b0a8b956a41585eba39e4" prot="private" static="no">
        <type><ref refid="structvlkxtemp_1_1_model_builder_1_1_model_push_constant" kindref="compound">ModelBuilder::ModelPushConstant</ref></type>
        <definition>using vlkxtemp::Model::ModelPushConstant =  ModelBuilder::ModelPushConstant</definition>
        <argsstring></argsstring>
        <name>ModelPushConstant</name>
        <qualifiedname>vlkxtemp::Model::ModelPushConstant</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" line="111" column="9" bodyfile="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvlkxtemp_1_1_model_1a7b2447e7ad5fc1b275bfae38bcb11943" prot="private" static="no">
        <type><ref refid="classvlkxtemp_1_1_model_builder_1a6f9efb7520fe2d499e296b1cd1b1f754" kindref="member">ModelBuilder::TexturePerMesh</ref></type>
        <definition>using vlkxtemp::Model::TexturePerMesh =  ModelBuilder::TexturePerMesh</definition>
        <argsstring></argsstring>
        <name>TexturePerMesh</name>
        <qualifiedname>vlkxtemp::Model::TexturePerMesh</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" line="112" column="9" bodyfile="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvlkxtemp_1_1_model_1ab097a87059376ae31127706580ce25eb" prot="private" static="no" mutable="no">
        <type>const float</type>
        <definition>const float vlkxtemp::Model::aspectRatio</definition>
        <argsstring></argsstring>
        <name>aspectRatio</name>
        <qualifiedname>vlkxtemp::Model::aspectRatio</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" line="126" column="21" bodyfile="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkxtemp_1_1_model_1a7812e5f29f4ac7ea9181fadd0ec62a03" prot="private" static="no" mutable="no">
        <type>const std::unique_ptr&lt; <ref refid="classvlkx_1_1_static_per_vertex_buffer" kindref="compound">vlkx::StaticPerVertexBuffer</ref> &gt;</type>
        <definition>const std::unique_ptr&lt;vlkx::StaticPerVertexBuffer&gt; vlkxtemp::Model::vertexBuffer</definition>
        <argsstring></argsstring>
        <name>vertexBuffer</name>
        <qualifiedname>vlkxtemp::Model::vertexBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" line="127" column="31" bodyfile="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkxtemp_1_1_model_1aecba4a5501232df3548eb3cf1b9ef47a" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="classvlkx_1_1_per_instance_vertex_buffer" kindref="compound">vlkx::PerInstanceVertexBuffer</ref> * &gt;</type>
        <definition>const std::vector&lt;vlkx::PerInstanceVertexBuffer*&gt; vlkxtemp::Model::perInstanceBuffers</definition>
        <argsstring></argsstring>
        <name>perInstanceBuffers</name>
        <qualifiedname>vlkxtemp::Model::perInstanceBuffers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" line="128" column="27" bodyfile="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkxtemp_1_1_model_1a061115c988eb81d3549137546a5a7f51" prot="private" static="no" mutable="no">
        <type>const std::optional&lt; <ref refid="structvlkxtemp_1_1_model_builder_1_1_model_push_constant" kindref="compound">ModelPushConstant</ref> &gt;</type>
        <definition>const std::optional&lt;ModelPushConstant&gt; vlkxtemp::Model::pushConstants</definition>
        <argsstring></argsstring>
        <name>pushConstants</name>
        <qualifiedname>vlkxtemp::Model::pushConstants</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" line="129" column="29" bodyfile="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkxtemp_1_1_model_1a53b0fdea8a3697ae55371ba9032bc05d" prot="private" static="no" mutable="no">
        <type>const TexturePerMesh</type>
        <definition>const TexturePerMesh vlkxtemp::Model::sharedTextures</definition>
        <argsstring></argsstring>
        <name>sharedTextures</name>
        <qualifiedname>vlkxtemp::Model::sharedTextures</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" line="130" column="30" bodyfile="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkxtemp_1_1_model_1ac2cc2cb0ea41d3e441f200bfea5816df" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; TexturePerMesh &gt;</type>
        <definition>const std::vector&lt;TexturePerMesh&gt; vlkxtemp::Model::textures</definition>
        <argsstring></argsstring>
        <name>textures</name>
        <qualifiedname>vlkxtemp::Model::textures</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" line="131" column="27" bodyfile="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkxtemp_1_1_model_1afa4d4d82b90796f36100465eb2ae7ed2" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; Descriptors &gt;</type>
        <definition>const std::vector&lt;Descriptors&gt; vlkxtemp::Model::descriptors</definition>
        <argsstring></argsstring>
        <name>descriptors</name>
        <qualifiedname>vlkxtemp::Model::descriptors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" line="132" column="27" bodyfile="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkxtemp_1_1_model_1aa294fc69a7c9265f62cf5a4e6aefdf67" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classvlkx_1_1_graphics_pipeline_builder" kindref="compound">vlkx::GraphicsPipelineBuilder</ref> &gt;</type>
        <definition>std::unique_ptr&lt;vlkx::GraphicsPipelineBuilder&gt; vlkxtemp::Model::pipelineBuilder</definition>
        <argsstring></argsstring>
        <name>pipelineBuilder</name>
        <qualifiedname>vlkxtemp::Model::pipelineBuilder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" line="134" column="25" bodyfile="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkxtemp_1_1_model_1abb0bf73c7c6a69fd3800df32d1d9d26d" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classvlkx_1_1_pipeline" kindref="compound">vlkx::Pipeline</ref> &gt;</type>
        <definition>std::unique_ptr&lt;vlkx::Pipeline&gt; vlkxtemp::Model::pipeline</definition>
        <argsstring></argsstring>
        <name>pipeline</name>
        <qualifiedname>vlkxtemp::Model::pipeline</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" line="135" column="25" bodyfile="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvlkxtemp_1_1_model_1ac82b1f15831bdabd2c51015bb5a70449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vlkxtemp::Model::Model</definition>
        <argsstring>(const Model &amp;)=delete</argsstring>
        <name>Model</name>
        <qualifiedname>vlkxtemp::Model::Model</qualifiedname>
        <param>
          <type>const <ref refid="classvlkxtemp_1_1_model" kindref="compound">Model</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" line="102" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvlkxtemp_1_1_model_1a224db5fa8691a239c8e25da2c2760e75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvlkxtemp_1_1_model" kindref="compound">Model</ref> &amp;</type>
        <definition>Model &amp; vlkxtemp::Model::operator=</definition>
        <argsstring>(const Model &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>vlkxtemp::Model::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classvlkxtemp_1_1_model" kindref="compound">Model</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" line="103" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classvlkxtemp_1_1_model_1a337ab1ef888e36930e92e253bc85a466" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vlkxtemp::Model::update</definition>
        <argsstring>(bool opaque, const VkExtent2D &amp;frame, VkSampleCountFlagBits samples, const vlkx::RenderPass &amp;pass, uint32_t subpass, bool flipY=true)</argsstring>
        <name>update</name>
        <qualifiedname>vlkxtemp::Model::update</qualifiedname>
        <param>
          <type>bool</type>
          <declname>opaque</declname>
        </param>
        <param>
          <type>const VkExtent2D &amp;</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>VkSampleCountFlagBits</type>
          <declname>samples</declname>
        </param>
        <param>
          <type>const <ref refid="classvlkx_1_1_render_pass" kindref="compound">vlkx::RenderPass</ref> &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>subpass</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>flipY</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" line="105" column="14" bodyfile="shadow-engine/shadow-renderer/src/temp/model/Builder.cpp" bodystart="211" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classvlkxtemp_1_1_model_1a145e4a22fdd76f37ac8fee618486da9e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vlkxtemp::Model::draw</definition>
        <argsstring>(const VkCommandBuffer &amp;commands, int frame, uint32_t instances) const</argsstring>
        <name>draw</name>
        <qualifiedname>vlkxtemp::Model::draw</qualifiedname>
        <param>
          <type>const VkCommandBuffer &amp;</type>
          <declname>commands</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>instances</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" line="106" column="14" bodyfile="shadow-engine/shadow-renderer/src/temp/model/Builder.cpp" bodystart="223" bodyend="237"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classvlkxtemp_1_1_model_1a42097f458be60669f07175b9e2bc43ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classvlkxtemp_1_1_model" kindref="compound">Model</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Model &gt; ModelBuilder::build</definition>
        <argsstring>()</argsstring>
        <name>ModelBuilder::build</name>
        <qualifiedname>vlkxtemp::Model::build</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" line="109" column="32"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classvlkxtemp_1_1_model_1a390d26bea5c2a9f20b77d86dd6f62fb8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vlkxtemp::Model::Model</definition>
        <argsstring>(float aspectRatio, std::unique_ptr&lt; vlkx::StaticPerVertexBuffer &gt; &amp;&amp;vertexBuffer, std::vector&lt; vlkx::PerInstanceVertexBuffer * &gt; &amp;&amp;perInstanceBuffers, std::optional&lt; ModelPushConstant &gt; &amp;&amp;pushConstants, TexturePerMesh &amp;&amp;sharedTextures, std::vector&lt; TexturePerMesh &gt; &amp;&amp;textures, std::vector&lt; Descriptors &gt; &amp;&amp;descriptors, std::unique_ptr&lt; vlkx::GraphicsPipelineBuilder &gt; &amp;&amp;pipelineBuilder)</argsstring>
        <name>Model</name>
        <qualifiedname>vlkxtemp::Model::Model</qualifiedname>
        <param>
          <type>float</type>
          <declname>aspectRatio</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classvlkx_1_1_static_per_vertex_buffer" kindref="compound">vlkx::StaticPerVertexBuffer</ref> &gt; &amp;&amp;</type>
          <declname>vertexBuffer</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classvlkx_1_1_per_instance_vertex_buffer" kindref="compound">vlkx::PerInstanceVertexBuffer</ref> * &gt; &amp;&amp;</type>
          <declname>perInstanceBuffers</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="structvlkxtemp_1_1_model_builder_1_1_model_push_constant" kindref="compound">ModelPushConstant</ref> &gt; &amp;&amp;</type>
          <declname>pushConstants</declname>
        </param>
        <param>
          <type>TexturePerMesh &amp;&amp;</type>
          <declname>sharedTextures</declname>
        </param>
        <param>
          <type>std::vector&lt; TexturePerMesh &gt; &amp;&amp;</type>
          <declname>textures</declname>
        </param>
        <param>
          <type>std::vector&lt; Descriptors &gt; &amp;&amp;</type>
          <declname>descriptors</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classvlkx_1_1_graphics_pipeline_builder" kindref="compound">vlkx::GraphicsPipelineBuilder</ref> &gt; &amp;&amp;</type>
          <declname>pipelineBuilder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" line="114" column="9" bodyfile="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" bodystart="114" bodyend="124"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" line="99" column="5" bodyfile="shadow-engine/shadow-renderer/inc/temp/model/Builder.h" bodystart="99" bodyend="136"/>
    <listofallmembers>
      <member refid="classvlkxtemp_1_1_model_1ab097a87059376ae31127706580ce25eb" prot="private" virt="non-virtual"><scope>vlkxtemp::Model</scope><name>aspectRatio</name></member>
      <member refid="classvlkxtemp_1_1_model_1acd82c89b3e86f7e742267e827dc6674c" prot="private" virt="non-virtual"><scope>vlkxtemp::Model</scope><name>Descriptors</name></member>
      <member refid="classvlkxtemp_1_1_model_1afa4d4d82b90796f36100465eb2ae7ed2" prot="private" virt="non-virtual"><scope>vlkxtemp::Model</scope><name>descriptors</name></member>
      <member refid="classvlkxtemp_1_1_model_1a145e4a22fdd76f37ac8fee618486da9e" prot="public" virt="non-virtual"><scope>vlkxtemp::Model</scope><name>draw</name></member>
      <member refid="classvlkxtemp_1_1_model_1ac82b1f15831bdabd2c51015bb5a70449" prot="public" virt="non-virtual"><scope>vlkxtemp::Model</scope><name>Model</name></member>
      <member refid="classvlkxtemp_1_1_model_1a390d26bea5c2a9f20b77d86dd6f62fb8" prot="private" virt="non-virtual"><scope>vlkxtemp::Model</scope><name>Model</name></member>
      <member refid="classvlkxtemp_1_1_model_1a42097f458be60669f07175b9e2bc43ad" prot="private" virt="non-virtual"><scope>vlkxtemp::Model</scope><name>ModelBuilder::build</name></member>
      <member refid="classvlkxtemp_1_1_model_1aea653c959b1b0a8b956a41585eba39e4" prot="private" virt="non-virtual"><scope>vlkxtemp::Model</scope><name>ModelPushConstant</name></member>
      <member refid="classvlkxtemp_1_1_model_1a224db5fa8691a239c8e25da2c2760e75" prot="public" virt="non-virtual"><scope>vlkxtemp::Model</scope><name>operator=</name></member>
      <member refid="classvlkxtemp_1_1_model_1aecba4a5501232df3548eb3cf1b9ef47a" prot="private" virt="non-virtual"><scope>vlkxtemp::Model</scope><name>perInstanceBuffers</name></member>
      <member refid="classvlkxtemp_1_1_model_1abb0bf73c7c6a69fd3800df32d1d9d26d" prot="private" virt="non-virtual"><scope>vlkxtemp::Model</scope><name>pipeline</name></member>
      <member refid="classvlkxtemp_1_1_model_1aa294fc69a7c9265f62cf5a4e6aefdf67" prot="private" virt="non-virtual"><scope>vlkxtemp::Model</scope><name>pipelineBuilder</name></member>
      <member refid="classvlkxtemp_1_1_model_1a061115c988eb81d3549137546a5a7f51" prot="private" virt="non-virtual"><scope>vlkxtemp::Model</scope><name>pushConstants</name></member>
      <member refid="classvlkxtemp_1_1_model_1a53b0fdea8a3697ae55371ba9032bc05d" prot="private" virt="non-virtual"><scope>vlkxtemp::Model</scope><name>sharedTextures</name></member>
      <member refid="classvlkxtemp_1_1_model_1a7b2447e7ad5fc1b275bfae38bcb11943" prot="private" virt="non-virtual"><scope>vlkxtemp::Model</scope><name>TexturePerMesh</name></member>
      <member refid="classvlkxtemp_1_1_model_1ac2cc2cb0ea41d3e441f200bfea5816df" prot="private" virt="non-virtual"><scope>vlkxtemp::Model</scope><name>textures</name></member>
      <member refid="classvlkxtemp_1_1_model_1a337ab1ef888e36930e92e253bc85a466" prot="public" virt="non-virtual"><scope>vlkxtemp::Model</scope><name>update</name></member>
      <member refid="classvlkxtemp_1_1_model_1a7812e5f29f4ac7ea9181fadd0ec62a03" prot="private" virt="non-virtual"><scope>vlkxtemp::Model</scope><name>vertexBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
