<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_catch_1_1_assertion_handler" kind="class" language="C++" prot="public">
    <compoundname>Catch::AssertionHandler</compoundname>
    <includes refid="catch_8hpp" local="no">catch.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_catch_1_1_assertion_handler_1ad171e8724bb771d97949b7270f400303" prot="private" static="no" mutable="no">
        <type><ref refid="struct_catch_1_1_assertion_info" kindref="compound">AssertionInfo</ref></type>
        <definition>AssertionInfo Catch::AssertionHandler::m_assertionInfo</definition>
        <argsstring></argsstring>
        <name>m_assertionInfo</name>
        <qualifiedname>Catch::AssertionHandler::m_assertionInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2549" column="23" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2549" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_catch_1_1_assertion_handler_1a8203c08a43a3761b5f400ee6587fad55" prot="private" static="no" mutable="no">
        <type><ref refid="struct_catch_1_1_assertion_reaction" kindref="compound">AssertionReaction</ref></type>
        <definition>AssertionReaction Catch::AssertionHandler::m_reaction</definition>
        <argsstring></argsstring>
        <name>m_reaction</name>
        <qualifiedname>Catch::AssertionHandler::m_reaction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2550" column="27" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2550" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_catch_1_1_assertion_handler_1a5a756818dff781c155e8eb970d1d4c68" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Catch::AssertionHandler::m_completed</definition>
        <argsstring></argsstring>
        <name>m_completed</name>
        <qualifiedname>Catch::AssertionHandler::m_completed</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2551" column="14" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2551" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_catch_1_1_assertion_handler_1aea5283ee36124ce5c51dc2a697b22a39" prot="private" static="no" mutable="no">
        <type><ref refid="struct_catch_1_1_i_result_capture" kindref="compound">IResultCapture</ref> &amp;</type>
        <definition>IResultCapture&amp; Catch::AssertionHandler::m_resultCapture</definition>
        <argsstring></argsstring>
        <name>m_resultCapture</name>
        <qualifiedname>Catch::AssertionHandler::m_resultCapture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2552" column="24" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2552" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_catch_1_1_assertion_handler_1a32efbb1b56b71d758d4c2094bac1f1a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Catch::AssertionHandler::AssertionHandler</definition>
        <argsstring>(StringRef const &amp;macroName, SourceLineInfo const &amp;lineInfo, StringRef capturedExpression, ResultDisposition::Flags resultDisposition)</argsstring>
        <name>AssertionHandler</name>
        <qualifiedname>Catch::AssertionHandler::AssertionHandler</qualifiedname>
        <param>
          <type><ref refid="class_catch_1_1_string_ref" kindref="compound">StringRef</ref> const &amp;</type>
          <declname>macroName</declname>
        </param>
        <param>
          <type><ref refid="struct_catch_1_1_source_line_info" kindref="compound">SourceLineInfo</ref> const &amp;</type>
          <declname>lineInfo</declname>
        </param>
        <param>
          <type><ref refid="class_catch_1_1_string_ref" kindref="compound">StringRef</ref></type>
          <declname>capturedExpression</declname>
        </param>
        <param>
          <type><ref refid="struct_catch_1_1_result_disposition_1a3396cad6e2259af326b3aae93e23e9d8" kindref="member">ResultDisposition::Flags</ref></type>
          <declname>resultDisposition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2555" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_assertion_handler_1a1e839d810f6ac0fa6d127fe8350175ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Catch::AssertionHandler::~AssertionHandler</definition>
        <argsstring>()</argsstring>
        <name>~AssertionHandler</name>
        <qualifiedname>Catch::AssertionHandler::~AssertionHandler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2560" column="9" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2560" bodyend="2564"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_assertion_handler_1a2ef387e567bad90ec6e4b5bf5c367388" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Catch::AssertionHandler::handleExpr</definition>
        <argsstring>(ExprLhs&lt; T &gt; const &amp;expr)</argsstring>
        <name>handleExpr</name>
        <qualifiedname>Catch::AssertionHandler::handleExpr</qualifiedname>
        <param>
          <type><ref refid="class_catch_1_1_expr_lhs" kindref="compound">ExprLhs</ref>&lt; T &gt; const &amp;</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2567" column="14" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2567" bodyend="2569"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_assertion_handler_1afe14d9cf1b1c7f70dae439fbdb51d0c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Catch::AssertionHandler::handleExpr</definition>
        <argsstring>(ITransientExpression const &amp;expr)</argsstring>
        <name>handleExpr</name>
        <qualifiedname>Catch::AssertionHandler::handleExpr</qualifiedname>
        <param>
          <type><ref refid="struct_catch_1_1_i_transient_expression" kindref="compound">ITransientExpression</ref> const &amp;</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2570" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_assertion_handler_1abdb4c180ed83ec2858b2fb87712c516d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Catch::AssertionHandler::handleMessage</definition>
        <argsstring>(ResultWas::OfType resultType, StringRef const &amp;message)</argsstring>
        <name>handleMessage</name>
        <qualifiedname>Catch::AssertionHandler::handleMessage</qualifiedname>
        <param>
          <type><ref refid="struct_catch_1_1_result_was_1a624e1ee3661fcf6094ceef1f654601ef" kindref="member">ResultWas::OfType</ref></type>
          <declname>resultType</declname>
        </param>
        <param>
          <type><ref refid="class_catch_1_1_string_ref" kindref="compound">StringRef</ref> const &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2572" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_assertion_handler_1ab6caf765764a4064e90fce829eec201d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Catch::AssertionHandler::handleExceptionThrownAsExpected</definition>
        <argsstring>()</argsstring>
        <name>handleExceptionThrownAsExpected</name>
        <qualifiedname>Catch::AssertionHandler::handleExceptionThrownAsExpected</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2574" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_assertion_handler_1a7764d0adb6ed5eeb10964f6abc02fab1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Catch::AssertionHandler::handleUnexpectedExceptionNotThrown</definition>
        <argsstring>()</argsstring>
        <name>handleUnexpectedExceptionNotThrown</name>
        <qualifiedname>Catch::AssertionHandler::handleUnexpectedExceptionNotThrown</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2575" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_assertion_handler_1a51e4936e3af43b74690cedae6d2e297a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Catch::AssertionHandler::handleExceptionNotThrownAsExpected</definition>
        <argsstring>()</argsstring>
        <name>handleExceptionNotThrownAsExpected</name>
        <qualifiedname>Catch::AssertionHandler::handleExceptionNotThrownAsExpected</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2576" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_assertion_handler_1a67a194d5518f307c4a16faa03a7f7442" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Catch::AssertionHandler::handleThrowingCallSkipped</definition>
        <argsstring>()</argsstring>
        <name>handleThrowingCallSkipped</name>
        <qualifiedname>Catch::AssertionHandler::handleThrowingCallSkipped</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2577" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_assertion_handler_1aa2504dad6a91f3645e5f52c932c11270" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Catch::AssertionHandler::handleUnexpectedInflightException</definition>
        <argsstring>()</argsstring>
        <name>handleUnexpectedInflightException</name>
        <qualifiedname>Catch::AssertionHandler::handleUnexpectedInflightException</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2578" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_assertion_handler_1a878a9eb828d8a1863c8dcb6575f6f40e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Catch::AssertionHandler::complete</definition>
        <argsstring>()</argsstring>
        <name>complete</name>
        <qualifiedname>Catch::AssertionHandler::complete</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2580" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_assertion_handler_1a6756bd5395c0ddd28764a9fb4612d5e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Catch::AssertionHandler::setCompleted</definition>
        <argsstring>()</argsstring>
        <name>setCompleted</name>
        <qualifiedname>Catch::AssertionHandler::setCompleted</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2581" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_assertion_handler_1a193bb3999494c46457f3059184c6b251" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto Catch::AssertionHandler::allowThrows</definition>
        <argsstring>() const -&gt; bool</argsstring>
        <name>allowThrows</name>
        <qualifiedname>Catch::AssertionHandler::allowThrows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2584" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2548" column="5" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2548" bodyend="2585"/>
    <listofallmembers>
      <member refid="class_catch_1_1_assertion_handler_1a193bb3999494c46457f3059184c6b251" prot="public" virt="non-virtual"><scope>Catch::AssertionHandler</scope><name>allowThrows</name></member>
      <member refid="class_catch_1_1_assertion_handler_1a32efbb1b56b71d758d4c2094bac1f1a9" prot="public" virt="non-virtual"><scope>Catch::AssertionHandler</scope><name>AssertionHandler</name></member>
      <member refid="class_catch_1_1_assertion_handler_1a878a9eb828d8a1863c8dcb6575f6f40e" prot="public" virt="non-virtual"><scope>Catch::AssertionHandler</scope><name>complete</name></member>
      <member refid="class_catch_1_1_assertion_handler_1a51e4936e3af43b74690cedae6d2e297a" prot="public" virt="non-virtual"><scope>Catch::AssertionHandler</scope><name>handleExceptionNotThrownAsExpected</name></member>
      <member refid="class_catch_1_1_assertion_handler_1ab6caf765764a4064e90fce829eec201d" prot="public" virt="non-virtual"><scope>Catch::AssertionHandler</scope><name>handleExceptionThrownAsExpected</name></member>
      <member refid="class_catch_1_1_assertion_handler_1a2ef387e567bad90ec6e4b5bf5c367388" prot="public" virt="non-virtual"><scope>Catch::AssertionHandler</scope><name>handleExpr</name></member>
      <member refid="class_catch_1_1_assertion_handler_1afe14d9cf1b1c7f70dae439fbdb51d0c4" prot="public" virt="non-virtual"><scope>Catch::AssertionHandler</scope><name>handleExpr</name></member>
      <member refid="class_catch_1_1_assertion_handler_1abdb4c180ed83ec2858b2fb87712c516d" prot="public" virt="non-virtual"><scope>Catch::AssertionHandler</scope><name>handleMessage</name></member>
      <member refid="class_catch_1_1_assertion_handler_1a67a194d5518f307c4a16faa03a7f7442" prot="public" virt="non-virtual"><scope>Catch::AssertionHandler</scope><name>handleThrowingCallSkipped</name></member>
      <member refid="class_catch_1_1_assertion_handler_1a7764d0adb6ed5eeb10964f6abc02fab1" prot="public" virt="non-virtual"><scope>Catch::AssertionHandler</scope><name>handleUnexpectedExceptionNotThrown</name></member>
      <member refid="class_catch_1_1_assertion_handler_1aa2504dad6a91f3645e5f52c932c11270" prot="public" virt="non-virtual"><scope>Catch::AssertionHandler</scope><name>handleUnexpectedInflightException</name></member>
      <member refid="class_catch_1_1_assertion_handler_1ad171e8724bb771d97949b7270f400303" prot="private" virt="non-virtual"><scope>Catch::AssertionHandler</scope><name>m_assertionInfo</name></member>
      <member refid="class_catch_1_1_assertion_handler_1a5a756818dff781c155e8eb970d1d4c68" prot="private" virt="non-virtual"><scope>Catch::AssertionHandler</scope><name>m_completed</name></member>
      <member refid="class_catch_1_1_assertion_handler_1a8203c08a43a3761b5f400ee6587fad55" prot="private" virt="non-virtual"><scope>Catch::AssertionHandler</scope><name>m_reaction</name></member>
      <member refid="class_catch_1_1_assertion_handler_1aea5283ee36124ce5c51dc2a697b22a39" prot="private" virt="non-virtual"><scope>Catch::AssertionHandler</scope><name>m_resultCapture</name></member>
      <member refid="class_catch_1_1_assertion_handler_1a6756bd5395c0ddd28764a9fb4612d5e4" prot="public" virt="non-virtual"><scope>Catch::AssertionHandler</scope><name>setCompleted</name></member>
      <member refid="class_catch_1_1_assertion_handler_1a1e839d810f6ac0fa6d127fe8350175ed" prot="public" virt="non-virtual"><scope>Catch::AssertionHandler</scope><name>~AssertionHandler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
