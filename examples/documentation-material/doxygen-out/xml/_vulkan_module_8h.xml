<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="_vulkan_module_8h" kind="file" language="C++">
    <compoundname>VulkanModule.h</compoundname>
    <includes refid="_validation_and_extension_8h" local="no">vlkx/vulkan/ValidationAndExtension.h</includes>
    <includes refid="_vulkan_device_8h" local="no">vlkx/vulkan/VulkanDevice.h</includes>
    <includes refid="vk__mem__alloc_8h" local="no">vulkan/vk_mem_alloc.h</includes>
    <includes local="no">vulkan/vulkan.h</includes>
    <includes local="no">SDL_vulkan.h</includes>
    <includes refid="_module_8h" local="no">core/Module.h</includes>
    <includes refid="_swap_chain_8h" local="yes">SwapChain.h</includes>
    <includedby refid="_shadow_application_8cpp" local="no">shadow-engine/core/src/core/ShadowApplication.cpp</includedby>
    <includedby refid="_pipeline_8h" local="yes">shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h</includedby>
    <includedby refid="_descriptor_8h" local="no">shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Descriptor.h</includedby>
    <includedby refid="_pipeline_8cpp" local="yes">shadow-engine/shadow-renderer/src/render/pipeline/Pipeline.cpp</includedby>
    <includedby refid="_generic_render_pass_8cpp" local="yes">shadow-engine/shadow-renderer/src/render/render_pass/GenericRenderPass.cpp</includedby>
    <includedby refid="_screen_render_pass_8cpp" local="yes">shadow-engine/shadow-renderer/src/render/render_pass/ScreenRenderPass.cpp</includedby>
    <includedby refid="_swap_chain_8cpp" local="no">shadow-engine/shadow-renderer/src/vulkan/SwapChain.cpp</includedby>
    <includedby refid="_vulkan_module_8cpp" local="no">shadow-engine/shadow-renderer/src/vulkan/VulkanModule.cpp</includedby>
    <includedby refid="_buffer_8cpp" local="yes">shadow-engine/shadow-renderer/src/vulkan/abstraction/Buffer.cpp</includedby>
    <includedby refid="_commands_8cpp" local="yes">shadow-engine/shadow-renderer/src/vulkan/abstraction/Commands.cpp</includedby>
    <includedby refid="_image_8cpp" local="yes">shadow-engine/shadow-renderer/src/vulkan/abstraction/Image.cpp</includedby>
    <incdepgraph>
      <node id="12">
        <label>core/Module.h</label>
        <link refid="_module_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>exports.h</label>
        <link refid="exports_8h"/>
      </node>
      <node id="13">
        <label>SHObject.h</label>
        <link refid="_s_h_object_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>SwapChain.h</label>
        <link refid="_swap_chain_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>vlkx/vulkan/Tools.h</label>
        <link refid="_tools_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>vlkx/vulkan/ValidationAndExtension.h</label>
        <link refid="_validation_and_extension_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>vlkx/vulkan/VulkanDevice.h</label>
        <link refid="_vulkan_device_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>shadow-engine/shadow-renderer/inc/vlkx/vulkan/VulkanModule.h</label>
        <link refid="_vulkan_module_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>Buffer.h</label>
        <link refid="_buffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>vlkx/vulkan/abstraction/Commands.h</label>
        <link refid="_commands_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>vlkx/vulkan/abstraction/Image.h</label>
        <link refid="_image_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>ImageUsage.h</label>
        <link refid="_image_usage_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Queue.h</label>
        <link refid="_queue_8h"/>
      </node>
      <node id="10">
        <label>vulkan/vk_mem_alloc.h</label>
        <link refid="vk__mem__alloc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>shadow/util/RefCounter.h</label>
        <link refid="_ref_counter_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>SDL.h</label>
      </node>
      <node id="17">
        <label>SDL_events.h</label>
      </node>
      <node id="11">
        <label>SDL_vulkan.h</label>
      </node>
      <node id="24">
        <label>algorithm</label>
      </node>
      <node id="32">
        <label>array</label>
      </node>
      <node id="21">
        <label>functional</label>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="28">
        <label>map</label>
      </node>
      <node id="18">
        <label>memory</label>
      </node>
      <node id="22">
        <label>optional</label>
      </node>
      <node id="9">
        <label>set</label>
      </node>
      <node id="8">
        <label>stdexcept</label>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="15">
        <label>typeinfo</label>
      </node>
      <node id="33">
        <label>utility</label>
      </node>
      <node id="31">
        <label>variant</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="3">
        <label>vulkan/vulkan.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>shadow-engine/core/src/core/ShadowApplication.cpp</label>
        <link refid="_shadow_application_8cpp"/>
      </node>
      <node id="4">
        <label>shadow-engine/shadow-renderer/inc/temp/model/Builder.h</label>
        <link refid="_builder_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h</label>
        <link refid="_pipeline_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>shadow-engine/shadow-renderer/inc/vlkx/vulkan/VulkanModule.h</label>
        <link refid="_vulkan_module_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Descriptor.h</label>
        <link refid="_descriptor_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>shadow-engine/shadow-renderer/src/render/pipeline/Pipeline.cpp</label>
        <link refid="_pipeline_8cpp"/>
      </node>
      <node id="9">
        <label>shadow-engine/shadow-renderer/src/render/render_pass/GenericRenderPass.cpp</label>
        <link refid="_generic_render_pass_8cpp"/>
      </node>
      <node id="10">
        <label>shadow-engine/shadow-renderer/src/render/render_pass/ScreenRenderPass.cpp</label>
        <link refid="_screen_render_pass_8cpp"/>
      </node>
      <node id="5">
        <label>shadow-engine/shadow-renderer/src/temp/model/Builder.cpp</label>
        <link refid="_builder_8cpp"/>
      </node>
      <node id="11">
        <label>shadow-engine/shadow-renderer/src/vulkan/SwapChain.cpp</label>
        <link refid="_swap_chain_8cpp"/>
      </node>
      <node id="12">
        <label>shadow-engine/shadow-renderer/src/vulkan/VulkanModule.cpp</label>
        <link refid="_vulkan_module_8cpp"/>
      </node>
      <node id="13">
        <label>shadow-engine/shadow-renderer/src/vulkan/abstraction/Buffer.cpp</label>
        <link refid="_buffer_8cpp"/>
      </node>
      <node id="14">
        <label>shadow-engine/shadow-renderer/src/vulkan/abstraction/Commands.cpp</label>
        <link refid="_commands_8cpp"/>
      </node>
      <node id="8">
        <label>shadow-engine/shadow-renderer/src/vulkan/abstraction/Descriptor.cpp</label>
        <link refid="_descriptor_8cpp"/>
      </node>
      <node id="15">
        <label>shadow-engine/shadow-renderer/src/vulkan/abstraction/Image.cpp</label>
        <link refid="_image_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_vulkan_module" prot="public">VulkanModule</innerclass>
    <innernamespace refid="namespacevlkx">vlkx</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_validation_and_extension_8h" kindref="compound">vlkx/vulkan/ValidationAndExtension.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_vulkan_device_8h" kindref="compound">vlkx/vulkan/VulkanDevice.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="vk__mem__alloc_8h" kindref="compound">vulkan/vk_mem_alloc.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vulkan/vulkan.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SDL_vulkan.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_module_8h" kindref="compound">core/Module.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_swap_chain_8h" kindref="compound">SwapChain.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevlkx" kindref="compound">vlkx</ref><sp/>{<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ScreenRenderPassManager;<sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="class_vulkan_module" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_vulkan_module" kindref="compound">VulkanModule</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_shadow_engine_1_1_renderer_module" kindref="compound">ShadowEngine::RendererModule</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_object_8h_1ab6e37410b4b149b1b5cb3c4bafe8aa53" kindref="member">SHObject_Base</ref>(<ref refid="class_vulkan_module" kindref="compound">VulkanModule</ref>);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_module_1ab637914aeeeaf4a4e559050642ed49e4" kindref="member">VulkanModule</ref>();</highlight></codeline>
<codeline lineno="20" refid="class_vulkan_module_1a4b10c9900785fdcd73cc891b14b9489c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_module_1a4b10c9900785fdcd73cc891b14b9489c" kindref="member">~VulkanModule</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a7bb66e55b3b9b66e4dce6358efe46e4a" kindref="member">validationRequired</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_vulkan_module_1a7bb66e55b3b9b66e4dce6358efe46e4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a7bb66e55b3b9b66e4dce6358efe46e4a" kindref="member">validationRequired</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1af088beee41a686d73f1eab2e1f0196c5" kindref="member">PreInit</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a75e20c8561b8132c213b871e69f1e4ff" kindref="member">Init</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a9327e637aeae4b6d4f2cd0232a605098" kindref="member">Recreate</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a7fce46b833391e373a5858e86e977519" kindref="member">Update</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1aa549db3486d65ae7065760c5efa42871" kindref="member">PreRender</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1ab7dfb00b3005acf2f3c2c7cd45a36837" kindref="member">Render</ref>(VkCommandBuffer&amp;<sp/>commands,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a38e5fd3ac3eeb1e5b193dff34646dad4" kindref="member">OverlayRender</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a8dc7877220a4f2eaa08174b35fe71d5a" kindref="member">LateRender</ref>(VkCommandBuffer&amp;<sp/>commands,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1ae6abe5f590823da8081ddb69e38acc52" kindref="member">AfterFrameEnd</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a45e861ddeb6dafa9b079feb57ce50e28" kindref="member">Destroy</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1ab78fc85fe99ac09ab1e859f0f8036df0" kindref="member">Event</ref>(SDL_Event*<sp/>e)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a5d5b5fe704a9753199040b711c5711b4" kindref="member">BeginRenderPass</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;vlkx::RenderCommand&gt;&amp;<sp/>commands)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a07dd1f95bbbcc625661f48ea48000546" kindref="member">EnableEditor</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>VkExtent2D<sp/><ref refid="class_vulkan_module_1a0f5101f7eab48da414a7203d0a891d83" kindref="member">GetRenderExtent</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>VulkanModule<sp/>is<sp/>a<sp/>singleton<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_vulkan_module_1a93f33e8ec1dedf9fb6284a5400406bda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module" kindref="compound">VulkanModule</ref>*<sp/><ref refid="class_vulkan_module_1a93f33e8ec1dedf9fb6284a5400406bda" kindref="member">instance</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module" kindref="compound">VulkanModule</ref>*<sp/><ref refid="class_vulkan_module_1ae98fb6b5c4497288b51c9c4b860cb1bd" kindref="member">getInstance</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>all<sp/>Vulkan<sp/>context<sp/>and<sp/>prepare<sp/>validations<sp/>in<sp/>debug<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a71854522b1134be7fe6d5b4f3c737772" kindref="member">initVulkan</ref>(SDL_Window*<sp/>window);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a6c9cfb57063b8b57b2fbdef1820876fb" kindref="member">createAppAndVulkanInstance</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enableValidation,<sp/><ref refid="class_validation_and_extension" kindref="compound">ValidationAndExtension</ref>*<sp/>validations);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>and<sp/>end<sp/>a<sp/>frame<sp/>render.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="class_vulkan_module_1a6c9fcef12fcd9aae3a8ccafa024354cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a6c9fcef12fcd9aae3a8ccafa024354cd" kindref="member">startDraw</ref>();</highlight></codeline>
<codeline lineno="66" refid="class_vulkan_module_1a9022e1b63e52126be59f3fae86e315ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1a9022e1b63e52126be59f3fae86e315ee" kindref="member">endDraw</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cleanup<sp/>after<sp/>the<sp/>application<sp/>has<sp/>closed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_module_1ae40978cff7e5968c179044057548500d" kindref="member">cleanup</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_vulkan_module_1a94dd0b8d16e08b58a6f8a336721100c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VkInstance<sp/><ref refid="class_vulkan_module_1a94dd0b8d16e08b58a6f8a336721100c5" kindref="member">getVulkan</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vulkan;<sp/>}</highlight></codeline>
<codeline lineno="72" refid="class_vulkan_module_1acaf1d424d08049045241ce16405f60bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_device" kindref="compound">VulkanDevice</ref>*<sp/><ref refid="class_vulkan_module_1acaf1d424d08049045241ce16405f60bf" kindref="member">getDevice</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>device;<sp/>}</highlight></codeline>
<codeline lineno="73" refid="class_vulkan_module_1ad5b31bcba629111bc9f261ec41055d82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_swap_chain" kindref="compound">SwapChain</ref>*<sp/><ref refid="class_vulkan_module_1ad5b31bcba629111bc9f261ec41055d82" kindref="member">getSwapchain</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>swapchain;<sp/>}</highlight></codeline>
<codeline lineno="74" refid="class_vulkan_module_1adf3a28f7a6bd0a8fb24bbfc3bf967100" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vma_allocator" kindref="compound">VmaAllocator</ref><sp/><ref refid="class_vulkan_module_1adf3a28f7a6bd0a8fb24bbfc3bf967100" kindref="member">getAllocator</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>allocator;<sp/>}</highlight></codeline>
<codeline lineno="75" refid="class_vulkan_module_1ae0ca5bd092df45634256c61a90ac8b83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_Window*<sp/><ref refid="class_vulkan_module_1ae0ca5bd092df45634256c61a90ac8b83" kindref="member">getWind</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wnd;<sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;vlkx::ScreenRenderPassManager&gt;&amp;<sp/><ref refid="class_vulkan_module_1ac24b3b793d028e7e199f5936391a91ab" kindref="member">getRenderPass</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>editorEnabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;VkDescriptorSet&gt;<sp/>editorRenderPlanes;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr&lt;vlkx::Image&gt;&gt;<sp/>editorContentFrames;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>SDL<sp/>Window<sp/>contains<sp/>the<sp/>size<sp/>of<sp/>the<sp/>drawable<sp/>area.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_Window*<sp/>wnd;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>handle<sp/>the<sp/>validation<sp/>of<sp/>Vulkan<sp/>API<sp/>usage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_validation_and_extension" kindref="compound">ValidationAndExtension</ref>*<sp/>validators{};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>manage<sp/>interaction<sp/>with<sp/>the<sp/>hardware</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_device" kindref="compound">VulkanDevice</ref>*<sp/>device{};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>handle<sp/>the<sp/>framebuffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_swap_chain" kindref="compound">SwapChain</ref>*<sp/>swapchain{};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>handle<sp/>automatic<sp/>management<sp/>of<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vma_allocator" kindref="compound">VmaAllocator</ref><sp/>allocator{};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>manage<sp/>the<sp/>Vulkan<sp/>context<sp/>that<sp/>was<sp/>passed<sp/>to<sp/>us<sp/>by<sp/>the<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>VkInstance<sp/>vulkan{};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>manage<sp/>the<sp/>canvas<sp/>that<sp/>was<sp/>given<sp/>to<sp/>us<sp/>by<sp/>GLFW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSurfaceKHR<sp/>surface{};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/VulkanModule.h"/>
  </compounddef>
</doxygen>
