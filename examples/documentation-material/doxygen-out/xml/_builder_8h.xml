<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="_builder_8h" kind="file" language="C++">
    <compoundname>Builder.h</compoundname>
    <includes refid="_pipeline_8h" local="yes">vlkx/render/shader/Pipeline.h</includes>
    <includes refid="_loader_8h" local="yes">Loader.h</includes>
    <includes refid="_generic_render_pass_8h" local="yes">vlkx/render/render_pass/GenericRenderPass.h</includes>
    <includes refid="_descriptor_8h" local="yes">vlkx/vulkan/abstraction/Descriptor.h</includes>
    <includedby refid="_builder_8cpp" local="yes">shadow-engine/shadow-renderer/src/temp/model/Builder.cpp</includedby>
    <incdepgraph>
      <node id="20">
        <label>core/Module.h</label>
        <link refid="_module_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>exports.h</label>
        <link refid="exports_8h"/>
      </node>
      <node id="21">
        <label>SHObject.h</label>
        <link refid="_s_h_object_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>shadow-engine/shadow-renderer/inc/temp/model/Builder.h</label>
        <link refid="_builder_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>Loader.h</label>
        <link refid="_loader_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>vlkx/render/Geometry.h</label>
        <link refid="_geometry_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>vlkx/render/render_pass/GenericRenderPass.h</label>
        <link refid="_generic_render_pass_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>vlkx/render/shader/Pipeline.h</label>
        <link refid="_pipeline_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>SwapChain.h</label>
        <link refid="_swap_chain_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>vlkx/vulkan/Tools.h</label>
        <link refid="_tools_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>vlkx/vulkan/ValidationAndExtension.h</label>
        <link refid="_validation_and_extension_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>vlkx/vulkan/VulkanDevice.h</label>
        <link refid="_vulkan_device_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>vlkx/vulkan/VulkanModule.h</label>
        <link refid="_vulkan_module_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>Buffer.h</label>
        <link refid="_buffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>vlkx/vulkan/abstraction/Commands.h</label>
        <link refid="_commands_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>vlkx/vulkan/abstraction/Descriptor.h</label>
        <link refid="_descriptor_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>vlkx/vulkan/abstraction/Image.h</label>
        <link refid="_image_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>ImageUsage.h</label>
        <link refid="_image_usage_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>Queue.h</label>
        <link refid="_queue_8h"/>
      </node>
      <node id="18">
        <label>vulkan/vk_mem_alloc.h</label>
        <link refid="vk__mem__alloc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>shadow/util/RefCounter.h</label>
        <link refid="_ref_counter_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>SDL.h</label>
      </node>
      <node id="24">
        <label>SDL_events.h</label>
      </node>
      <node id="19">
        <label>SDL_vulkan.h</label>
      </node>
      <node id="29">
        <label>algorithm</label>
      </node>
      <node id="35">
        <label>array</label>
      </node>
      <node id="6">
        <label>fstream</label>
      </node>
      <node id="27">
        <label>functional</label>
      </node>
      <node id="39">
        <label>glm/glm.hpp</label>
      </node>
      <node id="40">
        <label>glm/gtc/matrix_transform.hpp</label>
      </node>
      <node id="13">
        <label>iostream</label>
      </node>
      <node id="9">
        <label>map</label>
      </node>
      <node id="10">
        <label>memory</label>
      </node>
      <node id="5">
        <label>optional</label>
      </node>
      <node id="17">
        <label>set</label>
      </node>
      <node id="16">
        <label>stdexcept</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="22">
        <label>typeinfo</label>
      </node>
      <node id="36">
        <label>utility</label>
      </node>
      <node id="34">
        <label>variant</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="3">
        <label>vulkan/vulkan.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>shadow-engine/shadow-renderer/inc/temp/model/Builder.h</label>
        <link refid="_builder_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>shadow-engine/shadow-renderer/src/temp/model/Builder.cpp</label>
        <link refid="_builder_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classvlkxtemp_1_1_model_builder" prot="public">vlkxtemp::ModelBuilder</innerclass>
    <innerclass refid="classvlkxtemp_1_1_model_builder_1_1_model_resource" prot="public">vlkxtemp::ModelBuilder::ModelResource</innerclass>
    <innerclass refid="classvlkxtemp_1_1_model_builder_1_1_single_mesh_model" prot="public">vlkxtemp::ModelBuilder::SingleMeshModel</innerclass>
    <innerclass refid="classvlkxtemp_1_1_model_builder_1_1_multi_mesh_model" prot="public">vlkxtemp::ModelBuilder::MultiMeshModel</innerclass>
    <innerclass refid="structvlkxtemp_1_1_model_builder_1_1_model_push_constant" prot="public">vlkxtemp::ModelBuilder::ModelPushConstant</innerclass>
    <innerclass refid="structvlkxtemp_1_1_model_builder_1_1_model_push_constant_1_1_meta" prot="public">vlkxtemp::ModelBuilder::ModelPushConstant::Meta</innerclass>
    <innerclass refid="classvlkxtemp_1_1_model" prot="public">vlkxtemp::Model</innerclass>
    <innernamespace refid="namespacevlkxtemp">vlkxtemp</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_pipeline_8h" kindref="compound">vlkx/render/shader/Pipeline.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_loader_8h" kindref="compound">Loader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_generic_render_pass_8h" kindref="compound">vlkx/render/render_pass/GenericRenderPass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_descriptor_8h" kindref="compound">vlkx/vulkan/abstraction/Descriptor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="namespacevlkxtemp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevlkxtemp" kindref="compound">vlkxtemp</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkxtemp_1_1_model" kindref="compound">Model</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="classvlkxtemp_1_1_model_builder" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkxtemp_1_1_model_builder" kindref="compound">ModelBuilder</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classvlkxtemp_1_1_model_builder_1a84882aee091002dd6c62db8ba38470f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classvlkxtemp_1_1_model_builder_1a84882aee091002dd6c62db8ba38470f3" kindref="member">ShaderPool</ref><sp/>=<sp/><ref refid="classvlkx_1_1_shader_module_1a7f874a822b8a748d033e5e9d66c83246" kindref="member">vlkx::ShaderModule::ReleasePool</ref>;</highlight></codeline>
<codeline lineno="16" refid="classvlkxtemp_1_1_model_builder_1ac729f1fa732342a53d933b8fb52347ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classvlkxtemp_1_1_model_loader_1a514055e13e1d8132ae485d6d6b11f2d3" kindref="member">TextureType</ref><sp/>=<sp/><ref refid="classvlkxtemp_1_1_model_loader_1a514055e13e1d8132ae485d6d6b11f2d3" kindref="member">ModelLoader::TextureType</ref>;</highlight></codeline>
<codeline lineno="17" refid="classvlkxtemp_1_1_model_builder_1a6f9efb7520fe2d499e296b1cd1b1f754" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classvlkxtemp_1_1_model_builder_1a6f9efb7520fe2d499e296b1cd1b1f754" kindref="member">TexturePerMesh</ref><sp/>=<sp/>std::array&lt;std::vector&lt;std::unique_ptr&lt;vlkx::SamplableImage&gt;&gt;,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(TextureType::Count)&gt;;</highlight></codeline>
<codeline lineno="18" refid="classvlkxtemp_1_1_model_builder_1a129ba88f65b8da8d86db1cec5f66a05c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classvlkxtemp_1_1_model_builder_1a129ba88f65b8da8d86db1cec5f66a05c" kindref="member">BindingPoints</ref><sp/>=<sp/>std::map&lt;TextureType,<sp/>uint32_t&gt;;</highlight></codeline>
<codeline lineno="19" refid="classvlkxtemp_1_1_model_builder_1abdb3e5a4d714eeeaed51c6d427c2f24a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classvlkxtemp_1_1_model_builder_1abdb3e5a4d714eeeaed51c6d427c2f24a" kindref="member">TextureSource</ref><sp/>=<sp/><ref refid="classvlkx_1_1_ref_counted_texture_1abe22da373d7c7755a32c7339f99800ab" kindref="member">vlkx::RefCountedTexture::ImageLocation</ref>;</highlight></codeline>
<codeline lineno="20" refid="classvlkxtemp_1_1_model_builder_1a2adfcbf62a85e02440bc2cf0540417e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classvlkxtemp_1_1_model_builder_1a2adfcbf62a85e02440bc2cf0540417e1" kindref="member">TextureSources</ref><sp/>=<sp/>std::map&lt;TextureType,<sp/>std::vector&lt;TextureSource&gt;&gt;;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classvlkxtemp_1_1_model_builder_1_1_model_resource" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkxtemp_1_1_model_builder_1_1_model_resource" kindref="compound">ModelResource</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24" refid="classvlkxtemp_1_1_model_builder_1_1_model_resource_1a0c0c33533fc6dfce2f535308b81f1965" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classvlkxtemp_1_1_model_builder_1_1_model_resource_1a0c0c33533fc6dfce2f535308b81f1965" kindref="member">~ModelResource</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25" refid="classvlkxtemp_1_1_model_builder_1_1_model_resource_1a93258f32c23ece5b5294e09988a6ad3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkxtemp_1_1_model_builder_1_1_model_resource_1a93258f32c23ece5b5294e09988a6ad3b" kindref="member">load</ref>(<ref refid="classvlkxtemp_1_1_model_builder" kindref="compound">ModelBuilder</ref>*<sp/>builder)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classvlkxtemp_1_1_model_builder_1_1_single_mesh_model" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkxtemp_1_1_model_builder_1_1_single_mesh_model" kindref="compound">SingleMeshModel</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvlkxtemp_1_1_model_builder_1_1_model_resource" kindref="compound">ModelResource</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30" refid="classvlkxtemp_1_1_model_builder_1_1_single_mesh_model_1a8ede4872881e6410530281c000ed85ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkxtemp_1_1_model_builder_1_1_single_mesh_model_1a8ede4872881e6410530281c000ed85ab" kindref="member">SingleMeshModel</ref>(std::string&amp;&amp;<sp/>path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexBase,<sp/><ref refid="classvlkxtemp_1_1_model_builder_1a2adfcbf62a85e02440bc2cf0540417e1" kindref="member">TextureSources</ref>&amp;&amp;<sp/>sources)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>objFile(std::move(path)),<sp/>objIndexBase(indexBase),<sp/>textureSources(std::move(sources))<sp/>{}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkxtemp_1_1_model_builder_1_1_single_mesh_model_1a6c5e3e49315ea018225b49907eec47c4" kindref="member">load</ref>(<ref refid="classvlkxtemp_1_1_model_builder" kindref="compound">ModelBuilder</ref>*<sp/>builder)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>objFile;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>objIndexBase;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkxtemp_1_1_model_builder_1a2adfcbf62a85e02440bc2cf0540417e1" kindref="member">TextureSources</ref><sp/>textureSources;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classvlkxtemp_1_1_model_builder_1_1_multi_mesh_model" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkxtemp_1_1_model_builder_1_1_multi_mesh_model" kindref="compound">MultiMeshModel</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvlkxtemp_1_1_model_builder_1_1_model_resource" kindref="compound">ModelResource</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42" refid="classvlkxtemp_1_1_model_builder_1_1_multi_mesh_model_1aa70e5eabb690acd883a9b953de82fb2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkxtemp_1_1_model_builder_1_1_multi_mesh_model_1aa70e5eabb690acd883a9b953de82fb2c" kindref="member">MultiMeshModel</ref>(std::string&amp;&amp;<sp/>modelDir,<sp/>std::string&amp;&amp;<sp/>textureDir)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>models(std::move(modelDir)),<sp/>textures(std::move(textureDir))<sp/>{}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkxtemp_1_1_model_builder_1_1_multi_mesh_model_1a92fceb307e93bbb80e5ec2d19a14a5d8" kindref="member">load</ref>(<ref refid="classvlkxtemp_1_1_model_builder" kindref="compound">ModelBuilder</ref>*<sp/>builder)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>models;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>textures;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="structvlkxtemp_1_1_model_builder_1_1_model_push_constant" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvlkxtemp_1_1_model_builder_1_1_model_push_constant" kindref="compound">ModelPushConstant</ref><sp/>{</highlight></codeline>
<codeline lineno="53" refid="structvlkxtemp_1_1_model_builder_1_1_model_push_constant_1_1_meta" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvlkxtemp_1_1_model_builder_1_1_model_push_constant_1_1_meta" kindref="compound">Meta</ref><sp/>{</highlight></codeline>
<codeline lineno="54" refid="structvlkxtemp_1_1_model_builder_1_1_model_push_constant_1_1_meta_1a6d0ac2bea489974a7cb49979736d74fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_push_constant" kindref="compound">vlkx::PushConstant</ref>*<sp/><ref refid="structvlkxtemp_1_1_model_builder_1_1_model_push_constant_1_1_meta_1a6d0ac2bea489974a7cb49979736d74fa" kindref="member">constants</ref>;</highlight></codeline>
<codeline lineno="55" refid="structvlkxtemp_1_1_model_builder_1_1_model_push_constant_1_1_meta_1a80a01d964dc050cc5698e56516ad7866" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structvlkxtemp_1_1_model_builder_1_1_model_push_constant_1_1_meta_1a80a01d964dc050cc5698e56516ad7866" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="structvlkxtemp_1_1_model_builder_1_1_model_push_constant_1a9f97a0f62aa96f189f6c93e5496b8970" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkShaderStageFlags<sp/><ref refid="structvlkxtemp_1_1_model_builder_1_1_model_push_constant_1a9f97a0f62aa96f189f6c93e5496b8970" kindref="member">stage</ref>;</highlight></codeline>
<codeline lineno="59" refid="structvlkxtemp_1_1_model_builder_1_1_model_push_constant_1ab20d322f621d5a750b09b1fcac4677bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Meta&gt;<sp/><ref refid="structvlkxtemp_1_1_model_builder_1_1_model_push_constant_1ab20d322f621d5a750b09b1fcac4677bc" kindref="member">constants</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classvlkxtemp_1_1_model_builder_1a93fee06b531f57b5eba9a049f80d2699" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classvlkxtemp_1_1_model_builder_1a93fee06b531f57b5eba9a049f80d2699" kindref="member">Descriptors</ref><sp/>=<sp/>std::vector&lt;std::unique_ptr&lt;vlkx::StaticDescriptor&gt;&gt;;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkxtemp_1_1_model_builder" kindref="compound">ModelBuilder</ref>(std::string&amp;&amp;<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frames,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>aspect,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkxtemp_1_1_model_builder_1_1_model_resource" kindref="compound">ModelResource</ref>&amp;<sp/>resource);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classvlkxtemp_1_1_model_builder_1a19e87c6946c6d17ef2d9f95c567f1bbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkxtemp_1_1_model_builder_1a19e87c6946c6d17ef2d9f95c567f1bbd" kindref="member">ModelBuilder</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkxtemp_1_1_model_builder" kindref="compound">ModelBuilder</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67" refid="classvlkxtemp_1_1_model_builder_1ab5177507c9214a7d1b662caeac6eed1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkxtemp_1_1_model_builder" kindref="compound">ModelBuilder</ref>&amp;<sp/><ref refid="classvlkxtemp_1_1_model_builder_1ab5177507c9214a7d1b662caeac6eed1b" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkxtemp_1_1_model_builder" kindref="compound">ModelBuilder</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkxtemp_1_1_model_builder" kindref="compound">ModelBuilder</ref>&amp;<sp/><ref refid="classvlkxtemp_1_1_model_builder_1ad02b90518e889094a3d5dafe3e58df8f" kindref="member">texture</ref>(<ref refid="classvlkxtemp_1_1_model_loader_1a514055e13e1d8132ae485d6d6b11f2d3" kindref="member">TextureType</ref><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkxtemp_1_1_model_builder_1abdb3e5a4d714eeeaed51c6d427c2f24a" kindref="member">TextureSource</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkxtemp_1_1_model_builder" kindref="compound">ModelBuilder</ref>&amp;<sp/><ref refid="classvlkxtemp_1_1_model_builder_1a207cca9e26a5cb2f70077b6d59b9abf8" kindref="member">bindTextures</ref>(<ref refid="classvlkxtemp_1_1_model_loader_1a514055e13e1d8132ae485d6d6b11f2d3" kindref="member">TextureType</ref><sp/>type,<sp/>uint32_t<sp/>point);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkxtemp_1_1_model_builder" kindref="compound">ModelBuilder</ref>&amp;<sp/><ref refid="classvlkxtemp_1_1_model_builder_1aae5f148c85d7ed29eb4344e9ec58a1b6" kindref="member">instanceBuffer</ref>(<ref refid="classvlkx_1_1_per_instance_vertex_buffer" kindref="compound">vlkx::PerInstanceVertexBuffer</ref>*<sp/>buffer);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkxtemp_1_1_model_builder" kindref="compound">ModelBuilder</ref>&amp;<sp/><ref refid="classvlkxtemp_1_1_model_builder_1a9357345e8831bcc95f6b1eda88d5012a" kindref="member">uniform</ref>(VkShaderStageFlags<sp/>stage,<sp/>std::vector&lt;vlkx::Descriptor::Meta::Binding&gt;&amp;&amp;<sp/>bindings);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkxtemp_1_1_model_builder" kindref="compound">ModelBuilder</ref>&amp;<sp/><ref refid="classvlkxtemp_1_1_model_builder_1ae0188dedecb79076bcc100e82d1ee8f2" kindref="member">uniformBuffer</ref>(uint32_t<sp/>point,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_uniform_buffer" kindref="compound">vlkx::UniformBuffer</ref>&amp;<sp/>buffer);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkxtemp_1_1_model_builder" kindref="compound">ModelBuilder</ref>&amp;<sp/><ref refid="classvlkxtemp_1_1_model_builder_1a84f1a17efddd657ba778cbd83d5fa324" kindref="member">pushStage</ref>(VkShaderStageFlags<sp/>stage);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkxtemp_1_1_model_builder" kindref="compound">ModelBuilder</ref>&amp;<sp/><ref refid="classvlkxtemp_1_1_model_builder_1a78b2acbe1fb6e5d82a5004bc5472c89c" kindref="member">pushConstant</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_push_constant" kindref="compound">vlkx::PushConstant</ref>*<sp/>constant,<sp/>uint32_t<sp/>offset);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkxtemp_1_1_model_builder" kindref="compound">ModelBuilder</ref>&amp;<sp/><ref refid="classvlkxtemp_1_1_model_builder_1a829578e2d3cefecb60bd699a31d2cd47" kindref="member">shader</ref>(VkShaderStageFlagBits<sp/>stage,<sp/>std::string&amp;&amp;<sp/>file);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Model&gt;<sp/><ref refid="classvlkxtemp_1_1_model_builder_1a3896bcfc7686261f54bc79775db0db23" kindref="member">build</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Descriptors&gt;<sp/>createDescs()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frames;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>aspectRatio;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;vlkx::StaticPerVertexBuffer&gt;<sp/>vertexBuffer;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;TexturePerMesh&gt;<sp/>textures;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkxtemp_1_1_model_builder_1a6f9efb7520fe2d499e296b1cd1b1f754" kindref="member">TexturePerMesh</ref><sp/>sharedTextures;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkxtemp_1_1_model_builder_1a129ba88f65b8da8d86db1cec5f66a05c" kindref="member">BindingPoints</ref><sp/>bindPoints;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;vlkx::PerInstanceVertexBuffer*&gt;<sp/>instanceBuffers;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;vlkx::Descriptor::Meta&gt;<sp/>uniformMeta;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;vlkx::Descriptor::BufferInfos&gt;<sp/>uniformBufferMeta;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;ModelPushConstant&gt;<sp/>pushConstants;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;vlkx::GraphicsPipelineBuilder&gt;<sp/>pipelineBuilder;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classvlkxtemp_1_1_model" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkxtemp_1_1_model" kindref="compound">Model</ref><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classvlkxtemp_1_1_model_1ac82b1f15831bdabd2c51015bb5a70449" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkxtemp_1_1_model_1ac82b1f15831bdabd2c51015bb5a70449" kindref="member">Model</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkxtemp_1_1_model" kindref="compound">Model</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103" refid="classvlkxtemp_1_1_model_1a224db5fa8691a239c8e25da2c2760e75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkxtemp_1_1_model" kindref="compound">Model</ref>&amp;<sp/><ref refid="classvlkxtemp_1_1_model_1a224db5fa8691a239c8e25da2c2760e75" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkxtemp_1_1_model" kindref="compound">Model</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkxtemp_1_1_model_1a337ab1ef888e36930e92e253bc85a466" kindref="member">update</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>opaque,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkExtent2D&amp;<sp/>frame,<sp/>VkSampleCountFlagBits<sp/>samples,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_render_pass" kindref="compound">vlkx::RenderPass</ref>&amp;<sp/>pass,<sp/>uint32_t<sp/>subpass,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flipY<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkxtemp_1_1_model_1a145e4a22fdd76f37ac8fee618486da9e" kindref="member">draw</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkCommandBuffer&amp;<sp/>commands,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame,<sp/>uint32_t<sp/>instances)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109" refid="classvlkxtemp_1_1_model_1a42097f458be60669f07175b9e2bc43ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;Model&gt;<sp/><ref refid="classvlkxtemp_1_1_model_builder_1a3896bcfc7686261f54bc79775db0db23" kindref="member">ModelBuilder::build</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Descriptors<sp/>=<sp/><ref refid="classvlkxtemp_1_1_model_builder_1a93fee06b531f57b5eba9a049f80d2699" kindref="member">ModelBuilder::Descriptors</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structvlkxtemp_1_1_model_builder_1_1_model_push_constant" kindref="compound">ModelPushConstant</ref><sp/>=<sp/><ref refid="structvlkxtemp_1_1_model_builder_1_1_model_push_constant" kindref="compound">ModelBuilder::ModelPushConstant</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">TexturePerMesh<sp/>=<sp/><ref refid="classvlkxtemp_1_1_model_builder_1a6f9efb7520fe2d499e296b1cd1b1f754" kindref="member">ModelBuilder::TexturePerMesh</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkxtemp_1_1_model" kindref="compound">Model</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>aspectRatio,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;vlkx::StaticPerVertexBuffer&gt;&amp;&amp;<sp/>vertexBuffer,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;vlkx::PerInstanceVertexBuffer*&gt;&amp;&amp;<sp/>perInstanceBuffers,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;ModelPushConstant&gt;&amp;&amp;<sp/>pushConstants,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TexturePerMesh&amp;&amp;<sp/>sharedTextures,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;TexturePerMesh&gt;&amp;&amp;<sp/>textures,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Descriptors&gt;&amp;&amp;<sp/>descriptors,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;vlkx::GraphicsPipelineBuilder&gt;&amp;&amp;<sp/>pipelineBuilder)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>aspectRatio(aspectRatio),<sp/>vertexBuffer(std::move(vertexBuffer)),<sp/>perInstanceBuffers(std::move(perInstanceBuffers)),</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pushConstants(std::move(pushConstants)),<sp/>sharedTextures(std::move(sharedTextures)),<sp/>textures(std::move(textures)),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptors(std::move(descriptors)),<sp/>pipelineBuilder(std::move(pipelineBuilder))<sp/>{}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>aspectRatio;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;vlkx::StaticPerVertexBuffer&gt;<sp/>vertexBuffer;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;vlkx::PerInstanceVertexBuffer*&gt;<sp/>perInstanceBuffers;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;ModelPushConstant&gt;<sp/>pushConstants;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TexturePerMesh<sp/>sharedTextures;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TexturePerMesh&gt;<sp/>textures;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Descriptors&gt;<sp/>descriptors;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;vlkx::GraphicsPipelineBuilder&gt;<sp/>pipelineBuilder;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;vlkx::Pipeline&gt;<sp/>pipeline;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="shadow-engine/shadow-renderer/inc/temp/model/Builder.h"/>
  </compounddef>
</doxygen>
