<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="struct_vma_virtual_block" kind="struct" language="C++" prot="public">
    <compoundname>VmaVirtualBlock</compoundname>
    <includes refid="vk__mem__alloc_8h" local="no">vk_mem_alloc.h</includes>
    <briefdescription>
<para>Handle to a virtual block object that allows to use core allocation algorithm without allocating any real GPU memory. </para>
    </briefdescription>
    <detaileddescription>
<para>Fill in <ref refid="struct_vma_virtual_block_create_info" kindref="compound">VmaVirtualBlockCreateInfo</ref> structure and use <ref refid="group__group__virtual_1ga869baad02bf3b5fb012d61e1a43f92c5" kindref="member">vmaCreateVirtualBlock()</ref> to create it. Use <ref refid="group__group__virtual_1ga1a464943809fb27dd3b78d1cd6e3d534" kindref="member">vmaDestroyVirtualBlock()</ref> to destroy it. For more information, see documentation chapter <ref refid="virtual_allocator" kindref="compound">Virtual allocator</ref>.</para>
<para>This object is not thread-safe - should not be used from multiple threads simultaneously, must be synchronized externally. </para>
    </detaileddescription>
    <location file="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" line="899" column="1"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
