<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="struct_vma_statistics" kind="struct" language="C++" prot="public">
    <compoundname>VmaStatistics</compoundname>
    <includes refid="vk__mem__alloc_8h" local="no">vk_mem_alloc.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_vma_statistics_1a309179d5853a6a7cd534df497ee43957" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t VmaStatistics::blockCount</definition>
        <argsstring></argsstring>
        <name>blockCount</name>
        <qualifiedname>VmaStatistics::blockCount</qualifiedname>
        <briefdescription>
<para>Number of `VkDeviceMemory` objects - Vulkan memory blocks allocated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" line="1114" column="14" bodyfile="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" bodystart="1114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_vma_statistics_1ab0ff76e50f58f9f54b6f265e5bf5dde2" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t VmaStatistics::allocationCount</definition>
        <argsstring></argsstring>
        <name>allocationCount</name>
        <qualifiedname>VmaStatistics::allocationCount</qualifiedname>
        <briefdescription>
<para>Number of <ref refid="struct_vma_allocation" kindref="compound">VmaAllocation</ref> objects allocated. </para>
        </briefdescription>
        <detaileddescription>
<para>Dedicated allocations have their own blocks, so each one adds 1 to `allocationCount` as well as `blockCount`. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" line="1119" column="14" bodyfile="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" bodystart="1119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_vma_statistics_1a2afbc1c7aa8ad7bbb8de06215ba7e5c4" prot="public" static="no" mutable="no">
        <type>VkDeviceSize</type>
        <definition>VkDeviceSize VmaStatistics::blockBytes</definition>
        <argsstring></argsstring>
        <name>blockBytes</name>
        <qualifiedname>VmaStatistics::blockBytes</qualifiedname>
        <briefdescription>
<para>Number of bytes allocated in `VkDeviceMemory` blocks. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>To avoid confusion, please be aware that what Vulkan calls an &quot;allocation&quot; - a whole `VkDeviceMemory` object (e.g. as in `VkPhysicalDeviceLimits::maxMemoryAllocationCount`) is called a &quot;block&quot; in VMA, while VMA calls &quot;allocation&quot; a <ref refid="struct_vma_allocation" kindref="compound">VmaAllocation</ref> object that represents a memory region sub-allocated from such block, usually for a single buffer or image. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" line="1126" column="18" bodyfile="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" bodystart="1126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_vma_statistics_1a21db06eba3422f87a2b4b4703d879c16" prot="public" static="no" mutable="no">
        <type>VkDeviceSize</type>
        <definition>VkDeviceSize VmaStatistics::allocationBytes</definition>
        <argsstring></argsstring>
        <name>allocationBytes</name>
        <qualifiedname>VmaStatistics::allocationBytes</qualifiedname>
        <briefdescription>
<para>Total number of bytes occupied by all <ref refid="struct_vma_allocation" kindref="compound">VmaAllocation</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
<para>Always less or equal than `blockBytes`. Difference `(blockBytes - allocationBytes)` is the amount of memory allocated from Vulkan but unused by any <ref refid="struct_vma_allocation" kindref="compound">VmaAllocation</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" line="1133" column="18" bodyfile="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" bodystart="1133" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Calculated statistics of memory usage e.g. in a specific memory type, heap, custom pool, or total. </para>
    </briefdescription>
    <detaileddescription>
<para>These are fast to calculate. See functions: <ref refid="group__group__stats_1ga620eaa8a9d919860f7deaf4d0148b2a1" kindref="member">vmaGetHeapBudgets()</ref>, <ref refid="group__group__stats_1ga7e489a68f893dbefc78a6ac9413c4220" kindref="member">vmaGetPoolStatistics()</ref>. </para>
    </detaileddescription>
    <location file="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" line="1110" column="1" bodyfile="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" bodystart="1111" bodyend="1134"/>
    <listofallmembers>
      <member refid="struct_vma_statistics_1a21db06eba3422f87a2b4b4703d879c16" prot="public" virt="non-virtual"><scope>VmaStatistics</scope><name>allocationBytes</name></member>
      <member refid="struct_vma_statistics_1ab0ff76e50f58f9f54b6f265e5bf5dde2" prot="public" virt="non-virtual"><scope>VmaStatistics</scope><name>allocationCount</name></member>
      <member refid="struct_vma_statistics_1a2afbc1c7aa8ad7bbb8de06215ba7e5c4" prot="public" virt="non-virtual"><scope>VmaStatistics</scope><name>blockBytes</name></member>
      <member refid="struct_vma_statistics_1a309179d5853a6a7cd534df497ee43957" prot="public" virt="non-virtual"><scope>VmaStatistics</scope><name>blockCount</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
