<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_catch_1_1_reusable_string_stream" kind="class" language="C++" prot="public">
    <compoundname>Catch::ReusableStringStream</compoundname>
    <basecompoundref refid="class_catch_1_1_non_copyable" prot="private" virt="non-virtual">Catch::NonCopyable</basecompoundref>
    <includes refid="catch_8hpp" local="no">catch.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_catch_1_1_reusable_string_stream_1a6e8154ffe67117de424c491e3b192504" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t Catch::ReusableStringStream::m_index</definition>
        <argsstring></argsstring>
        <name>m_index</name>
        <qualifiedname>Catch::ReusableStringStream::m_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="1441" column="21" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="1441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_catch_1_1_reusable_string_stream_1ae8dc0aa8ab418990869cd5ea9ee51f14" prot="private" static="no" mutable="no">
        <type>std::ostream *</type>
        <definition>std::ostream* Catch::ReusableStringStream::m_oss</definition>
        <argsstring></argsstring>
        <name>m_oss</name>
        <qualifiedname>Catch::ReusableStringStream::m_oss</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="1442" column="22" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="1442" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_catch_1_1_reusable_string_stream_1a9b3f8c52b0d2d63ffd825297a9c09781" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Catch::ReusableStringStream::ReusableStringStream</definition>
        <argsstring>()</argsstring>
        <name>ReusableStringStream</name>
        <qualifiedname>Catch::ReusableStringStream::ReusableStringStream</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="1444" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_reusable_string_stream_1aba9384e258a4db3178447b6a58414712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Catch::ReusableStringStream::~ReusableStringStream</definition>
        <argsstring>()</argsstring>
        <name>~ReusableStringStream</name>
        <qualifiedname>Catch::ReusableStringStream::~ReusableStringStream</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="1445" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_reusable_string_stream_1a0e9ecf260b2a5d35f4886ef0d51f6270" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto Catch::ReusableStringStream::str</definition>
        <argsstring>() const -&gt; std::string</argsstring>
        <name>str</name>
        <qualifiedname>Catch::ReusableStringStream::str</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="1447" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_reusable_string_stream_1af95f72024c082db70e5e50782e28e4f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Catch::ReusableStringStream::operator&lt;&lt;</definition>
        <argsstring>(T const &amp;value) -&gt; ReusableStringStream &amp;</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>Catch::ReusableStringStream::operator&lt;&lt;</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="1450" column="9" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="1450" bodyend="1453"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_reusable_string_stream_1a6881808c60a080d4e24a0b81c94cbf67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Catch::ReusableStringStream::get</definition>
        <argsstring>() -&gt; std::ostream &amp;</argsstring>
        <name>get</name>
        <qualifiedname>Catch::ReusableStringStream::get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="1454" column="14" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="1454" bodyend="1454"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Catch::NonCopyable</label>
        <link refid="class_catch_1_1_non_copyable"/>
      </node>
      <node id="1">
        <label>Catch::ReusableStringStream</label>
        <link refid="class_catch_1_1_reusable_string_stream"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Catch::NonCopyable</label>
        <link refid="class_catch_1_1_non_copyable"/>
      </node>
      <node id="1">
        <label>Catch::ReusableStringStream</label>
        <link refid="class_catch_1_1_reusable_string_stream"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="1440" column="5" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="1440" bodyend="1455"/>
    <listofallmembers>
      <member refid="class_catch_1_1_reusable_string_stream_1a6881808c60a080d4e24a0b81c94cbf67" prot="public" virt="non-virtual"><scope>Catch::ReusableStringStream</scope><name>get</name></member>
      <member refid="class_catch_1_1_reusable_string_stream_1a6e8154ffe67117de424c491e3b192504" prot="private" virt="non-virtual"><scope>Catch::ReusableStringStream</scope><name>m_index</name></member>
      <member refid="class_catch_1_1_reusable_string_stream_1ae8dc0aa8ab418990869cd5ea9ee51f14" prot="private" virt="non-virtual"><scope>Catch::ReusableStringStream</scope><name>m_oss</name></member>
      <member refid="class_catch_1_1_reusable_string_stream_1af95f72024c082db70e5e50782e28e4f6" prot="public" virt="non-virtual"><scope>Catch::ReusableStringStream</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_catch_1_1_reusable_string_stream_1a9b3f8c52b0d2d63ffd825297a9c09781" prot="public" virt="non-virtual"><scope>Catch::ReusableStringStream</scope><name>ReusableStringStream</name></member>
      <member refid="class_catch_1_1_reusable_string_stream_1a0e9ecf260b2a5d35f4886ef0d51f6270" prot="public" virt="non-virtual"><scope>Catch::ReusableStringStream</scope><name>str</name></member>
      <member refid="class_catch_1_1_reusable_string_stream_1aba9384e258a4db3178447b6a58414712" prot="public" virt="non-virtual"><scope>Catch::ReusableStringStream</scope><name>~ReusableStringStream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
