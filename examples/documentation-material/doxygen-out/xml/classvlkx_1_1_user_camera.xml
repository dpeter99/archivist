<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classvlkx_1_1_user_camera" kind="class" language="C++" prot="public">
    <compoundname>vlkx::UserCamera</compoundname>
    <includes refid="shadow-renderer_2inc_2vlkx_2render_2_camera_8h" local="no">Camera.h</includes>
    <templateparamlist>
      <param>
        <type>typename Type</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvlkx_1_1_user_camera_1af288e65f7b8535788c898eb8af84a3be" prot="private" static="no" mutable="no">
        <type>const <ref refid="structvlkx_1_1_camera_1_1_movement" kindref="compound">Camera::Movement</ref></type>
        <definition>const Camera::Movement vlkx::UserCamera&lt; Type &gt;::config</definition>
        <argsstring></argsstring>
        <name>config</name>
        <qualifiedname>vlkx::UserCamera::config</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" line="179" column="32" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_user_camera_1acbe4ff7035ea6de8ebaac74d15d6adaa" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vlkx::UserCamera&lt; Type &gt;::isActive</definition>
        <argsstring></argsstring>
        <name>isActive</name>
        <qualifiedname>vlkx::UserCamera::isActive</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" line="180" column="14" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_user_camera_1a96050df52ce404964434d50278689cc8" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Type &gt;</type>
        <definition>std::unique_ptr&lt;Type&gt; vlkx::UserCamera&lt; Type &gt;::camera</definition>
        <argsstring></argsstring>
        <name>camera</name>
        <qualifiedname>vlkx::UserCamera::camera</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" line="182" column="25" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_user_camera_1a50c0b614b6f929e0cbf58b09e2cca9cc" prot="private" static="no" mutable="no">
        <type>glm::dvec2</type>
        <definition>glm::dvec2 vlkx::UserCamera&lt; Type &gt;::cursorPos</definition>
        <argsstring></argsstring>
        <name>cursorPos</name>
        <qualifiedname>vlkx::UserCamera::cursorPos</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" line="183" column="20" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_user_camera_1aeb80a453e1ed5aef9f2108e006896863" prot="private" static="no" mutable="no">
        <type>glm::vec3</type>
        <definition>glm::vec3 vlkx::UserCamera&lt; Type &gt;::refForward</definition>
        <argsstring></argsstring>
        <name>refForward</name>
        <qualifiedname>vlkx::UserCamera::refForward</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" line="184" column="19" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_user_camera_1aac03d26b5aebfb424308c77f0094360f" prot="private" static="no" mutable="no">
        <type>glm::vec3</type>
        <definition>glm::vec3 vlkx::UserCamera&lt; Type &gt;::refLeft</definition>
        <argsstring></argsstring>
        <name>refLeft</name>
        <qualifiedname>vlkx::UserCamera::refLeft</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" line="185" column="19" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_user_camera_1a0cc0ffac57cad067c99e7cdbe78db040" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float vlkx::UserCamera&lt; Type &gt;::pitch</definition>
        <argsstring></argsstring>
        <name>pitch</name>
        <qualifiedname>vlkx::UserCamera::pitch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" line="187" column="15" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_user_camera_1ab511ceb25bffb83a857a86e8b86f373a" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float vlkx::UserCamera&lt; Type &gt;::yaw</definition>
        <argsstring></argsstring>
        <name>yaw</name>
        <qualifiedname>vlkx::UserCamera::yaw</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" line="188" column="15" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvlkx_1_1_user_camera_1a10d63da8ed19a80fcea0d9b403755222" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vlkx::UserCamera&lt; Type &gt;::UserCamera</definition>
        <argsstring>(const UserCamera &amp;)=delete</argsstring>
        <name>UserCamera</name>
        <qualifiedname>vlkx::UserCamera::UserCamera</qualifiedname>
        <param>
          <type>const <ref refid="classvlkx_1_1_user_camera" kindref="compound">UserCamera</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" line="149" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_user_camera_1acd59c9bcac75856333be9bca31fd95a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvlkx_1_1_user_camera" kindref="compound">UserCamera</ref> &amp;</type>
        <definition>UserCamera &amp; vlkx::UserCamera&lt; Type &gt;::operator=</definition>
        <argsstring>(const UserCamera &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>vlkx::UserCamera::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classvlkx_1_1_user_camera" kindref="compound">UserCamera</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" line="151" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_user_camera_1a07174728034e62d62f5314b5166db3a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual vlkx::UserCamera&lt; Type &gt;::~UserCamera</definition>
        <argsstring>()=default</argsstring>
        <name>~UserCamera</name>
        <qualifiedname>vlkx::UserCamera::~UserCamera</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" line="153" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_user_camera_1ace6f190532807c0037b0e0678938537d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UserCamera::setInternal</definition>
        <argsstring>(std::function&lt; void(Type *)&gt; op)</argsstring>
        <name>setInternal</name>
        <qualifiedname>vlkx::UserCamera::setInternal</qualifiedname>
        <param>
          <type>std::function&lt; void(Type *)&gt;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" line="155" column="14" bodyfile="shadow-engine/shadow-renderer/src/render/Camera.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_user_camera_1aff6b379dc934ffaaa1e93f198506c4a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vlkx::UserCamera&lt; Type &gt;::setPos</definition>
        <argsstring>(const glm::dvec2 &amp;pos)</argsstring>
        <name>setPos</name>
        <qualifiedname>vlkx::UserCamera::setPos</qualifiedname>
        <param>
          <type>const glm::dvec2 &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" line="157" column="14" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_user_camera_1aaf779129f56435827c92449efafa1e8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UserCamera::move</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>move</name>
        <qualifiedname>vlkx::UserCamera::move</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" line="159" column="14" bodyfile="shadow-engine/shadow-renderer/src/render/Camera.cpp" bodystart="65" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_user_camera_1ac99792d3a83693ae97d847fe95860793" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UserCamera::scroll</definition>
        <argsstring>(double delta, double min, double max)</argsstring>
        <name>scroll</name>
        <qualifiedname>vlkx::UserCamera::scroll</qualifiedname>
        <param>
          <type>double</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>double</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" line="161" column="14" bodyfile="shadow-engine/shadow-renderer/src/render/Camera.cpp" bodystart="77" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_user_camera_1aa29b2484a1375d6eaec7f057cdd6468e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UserCamera::press</definition>
        <argsstring>(Camera::Input key, float time)</argsstring>
        <name>press</name>
        <qualifiedname>vlkx::UserCamera::press</qualifiedname>
        <param>
          <type><ref refid="classvlkx_1_1_camera_1ad0d52aa641344b1ab74a43517b266385" kindref="member">Camera::Input</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" line="163" column="14" bodyfile="shadow-engine/shadow-renderer/src/render/Camera.cpp" bodystart="100" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_user_camera_1ac981ddb2ac1ecb76306ebc179ff6cb65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vlkx::UserCamera&lt; Type &gt;::active</definition>
        <argsstring>(bool active)</argsstring>
        <name>active</name>
        <qualifiedname>vlkx::UserCamera::active</qualifiedname>
        <param>
          <type>bool</type>
          <declname>active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" line="165" column="14" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_user_camera_1a5e25dbb0dabe880b4d32a7e066336d7a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Type &amp;</type>
        <definition>const Type &amp; vlkx::UserCamera&lt; Type &gt;::getCamera</definition>
        <argsstring>() const</argsstring>
        <name>getCamera</name>
        <qualifiedname>vlkx::UserCamera::getCamera</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" line="167" column="20" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_user_camera_1a238bbdecf84db2f68b41efda1cb37017" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vlkx::UserCamera&lt; Type &gt;::UserCamera</definition>
        <argsstring>(const Camera::Movement &amp;movement, std::unique_ptr&lt; Type &gt; &amp;&amp;cam)</argsstring>
        <name>UserCamera</name>
        <qualifiedname>vlkx::UserCamera::UserCamera</qualifiedname>
        <param>
          <type>const <ref refid="structvlkx_1_1_camera_1_1_movement" kindref="compound">Camera::Movement</ref> &amp;</type>
          <declname>movement</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; Type &gt; &amp;&amp;</type>
          <declname>cam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" line="169" column="9" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" bodystart="169" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_user_camera_1a7713d90a9d0f0b1d81aeb8e3f5071bcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UserCamera::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <qualifiedname>vlkx::UserCamera::reset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" line="174" column="14" bodyfile="shadow-engine/shadow-renderer/src/render/Camera.cpp" bodystart="122" bodyend="126"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" line="147" column="5" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/Camera.h" bodystart="147" bodyend="189"/>
    <listofallmembers>
      <member refid="classvlkx_1_1_user_camera_1ac981ddb2ac1ecb76306ebc179ff6cb65" prot="public" virt="non-virtual"><scope>vlkx::UserCamera</scope><name>active</name></member>
      <member refid="classvlkx_1_1_user_camera_1a96050df52ce404964434d50278689cc8" prot="private" virt="non-virtual"><scope>vlkx::UserCamera</scope><name>camera</name></member>
      <member refid="classvlkx_1_1_user_camera_1af288e65f7b8535788c898eb8af84a3be" prot="private" virt="non-virtual"><scope>vlkx::UserCamera</scope><name>config</name></member>
      <member refid="classvlkx_1_1_user_camera_1a50c0b614b6f929e0cbf58b09e2cca9cc" prot="private" virt="non-virtual"><scope>vlkx::UserCamera</scope><name>cursorPos</name></member>
      <member refid="classvlkx_1_1_user_camera_1a5e25dbb0dabe880b4d32a7e066336d7a" prot="public" virt="non-virtual"><scope>vlkx::UserCamera</scope><name>getCamera</name></member>
      <member refid="classvlkx_1_1_user_camera_1acbe4ff7035ea6de8ebaac74d15d6adaa" prot="private" virt="non-virtual"><scope>vlkx::UserCamera</scope><name>isActive</name></member>
      <member refid="classvlkx_1_1_user_camera_1aaf779129f56435827c92449efafa1e8f" prot="public" virt="non-virtual"><scope>vlkx::UserCamera</scope><name>move</name></member>
      <member refid="classvlkx_1_1_user_camera_1acd59c9bcac75856333be9bca31fd95a3" prot="public" virt="non-virtual"><scope>vlkx::UserCamera</scope><name>operator=</name></member>
      <member refid="classvlkx_1_1_user_camera_1a0cc0ffac57cad067c99e7cdbe78db040" prot="private" virt="non-virtual"><scope>vlkx::UserCamera</scope><name>pitch</name></member>
      <member refid="classvlkx_1_1_user_camera_1aa29b2484a1375d6eaec7f057cdd6468e" prot="public" virt="non-virtual"><scope>vlkx::UserCamera</scope><name>press</name></member>
      <member refid="classvlkx_1_1_user_camera_1aeb80a453e1ed5aef9f2108e006896863" prot="private" virt="non-virtual"><scope>vlkx::UserCamera</scope><name>refForward</name></member>
      <member refid="classvlkx_1_1_user_camera_1aac03d26b5aebfb424308c77f0094360f" prot="private" virt="non-virtual"><scope>vlkx::UserCamera</scope><name>refLeft</name></member>
      <member refid="classvlkx_1_1_user_camera_1a7713d90a9d0f0b1d81aeb8e3f5071bcd" prot="public" virt="non-virtual"><scope>vlkx::UserCamera</scope><name>reset</name></member>
      <member refid="classvlkx_1_1_user_camera_1ac99792d3a83693ae97d847fe95860793" prot="public" virt="non-virtual"><scope>vlkx::UserCamera</scope><name>scroll</name></member>
      <member refid="classvlkx_1_1_user_camera_1ace6f190532807c0037b0e0678938537d" prot="public" virt="non-virtual"><scope>vlkx::UserCamera</scope><name>setInternal</name></member>
      <member refid="classvlkx_1_1_user_camera_1aff6b379dc934ffaaa1e93f198506c4a9" prot="public" virt="non-virtual"><scope>vlkx::UserCamera</scope><name>setPos</name></member>
      <member refid="classvlkx_1_1_user_camera_1a10d63da8ed19a80fcea0d9b403755222" prot="public" virt="non-virtual"><scope>vlkx::UserCamera</scope><name>UserCamera</name></member>
      <member refid="classvlkx_1_1_user_camera_1a238bbdecf84db2f68b41efda1cb37017" prot="public" virt="non-virtual"><scope>vlkx::UserCamera</scope><name>UserCamera</name></member>
      <member refid="classvlkx_1_1_user_camera_1ab511ceb25bffb83a857a86e8b86f373a" prot="private" virt="non-virtual"><scope>vlkx::UserCamera</scope><name>yaw</name></member>
      <member refid="classvlkx_1_1_user_camera_1a07174728034e62d62f5314b5166db3a3" prot="public" virt="virtual"><scope>vlkx::UserCamera</scope><name>~UserCamera</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
