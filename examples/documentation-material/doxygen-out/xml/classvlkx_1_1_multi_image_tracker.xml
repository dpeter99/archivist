<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classvlkx_1_1_multi_image_tracker" kind="class" language="C++" prot="public">
    <compoundname>vlkx::MultiImageTracker</compoundname>
    <includes refid="_image_usage_8h" local="no">ImageUsage.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvlkx_1_1_multi_image_tracker_1a96502bbf3f5bd296ef2d4a1cb8c831c5" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="classvlkx_1_1_image_usage" kindref="compound">ImageUsage</ref> &gt;</type>
        <definition>std::map&lt;std::string, ImageUsage&gt; vlkx::MultiImageTracker::images</definition>
        <argsstring></argsstring>
        <name>images</name>
        <qualifiedname>vlkx::MultiImageTracker::images</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/ImageUsage.h" line="294" column="18" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/ImageUsage.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvlkx_1_1_multi_image_tracker_1abf4a785bc3552bdde63ebb6329fa8ec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vlkx::MultiImageTracker::MultiImageTracker</definition>
        <argsstring>()=default</argsstring>
        <name>MultiImageTracker</name>
        <qualifiedname>vlkx::MultiImageTracker::MultiImageTracker</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/ImageUsage.h" line="261" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_multi_image_tracker_1a54711f5b41f7f457445c5c688ee38a27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vlkx::MultiImageTracker::MultiImageTracker</definition>
        <argsstring>(const MultiImageTracker &amp;)=delete</argsstring>
        <name>MultiImageTracker</name>
        <qualifiedname>vlkx::MultiImageTracker::MultiImageTracker</qualifiedname>
        <param>
          <type>const <ref refid="classvlkx_1_1_multi_image_tracker" kindref="compound">MultiImageTracker</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/ImageUsage.h" line="263" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_multi_image_tracker_1a637df485ab0fd10c413b10ca3bfd8d16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvlkx_1_1_multi_image_tracker" kindref="compound">MultiImageTracker</ref> &amp;</type>
        <definition>MultiImageTracker &amp; vlkx::MultiImageTracker::operator=</definition>
        <argsstring>(const MultiImageTracker &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>vlkx::MultiImageTracker::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classvlkx_1_1_multi_image_tracker" kindref="compound">MultiImageTracker</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/ImageUsage.h" line="264" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_multi_image_tracker_1ad5b7084777246bf17d70118f42e059a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_generic_render_pass_8h_1a68b39832e0bbd552c45aae02054bbe79" kindref="member">fluent</ref></type>
        <definition>fluent vlkx::MultiImageTracker::track</definition>
        <argsstring>(std::string &amp;&amp;name, const ImageUsage &amp;usage)</argsstring>
        <name>track</name>
        <qualifiedname>vlkx::MultiImageTracker::track</qualifiedname>
        <param>
          <type>std::string &amp;&amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classvlkx_1_1_image_usage" kindref="compound">ImageUsage</ref> &amp;</type>
          <declname>usage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/ImageUsage.h" line="270" column="16" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/ImageUsage.h" bodystart="270" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_multi_image_tracker_1a0879836b217057afbb72437dab71ec4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_generic_render_pass_8h_1a68b39832e0bbd552c45aae02054bbe79" kindref="member">fluent</ref></type>
        <definition>fluent vlkx::MultiImageTracker::track</definition>
        <argsstring>(const std::string &amp;name, const ImageUsage &amp;usage)</argsstring>
        <name>track</name>
        <qualifiedname>vlkx::MultiImageTracker::track</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classvlkx_1_1_image_usage" kindref="compound">ImageUsage</ref> &amp;</type>
          <declname>usage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/ImageUsage.h" line="275" column="16" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/ImageUsage.h" bodystart="275" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_multi_image_tracker_1a4b8be4059b29ed37e183d359ac30c9de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_generic_render_pass_8h_1a68b39832e0bbd552c45aae02054bbe79" kindref="member">fluent</ref></type>
        <definition>fluent vlkx::MultiImageTracker::update</definition>
        <argsstring>(const std::string &amp;name, const ImageUsage &amp;usage)</argsstring>
        <name>update</name>
        <qualifiedname>vlkx::MultiImageTracker::update</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classvlkx_1_1_image_usage" kindref="compound">ImageUsage</ref> &amp;</type>
          <declname>usage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/ImageUsage.h" line="279" column="16" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/ImageUsage.h" bodystart="279" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_multi_image_tracker_1ac345fc90a43c19c6b4d672c45ae37cf6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vlkx::MultiImageTracker::isTracking</definition>
        <argsstring>(const std::string &amp;image) const</argsstring>
        <name>isTracking</name>
        <qualifiedname>vlkx::MultiImageTracker::isTracking</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>image</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/ImageUsage.h" line="285" column="15" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/ImageUsage.h" bodystart="285" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_multi_image_tracker_1a2fda3df59d5ef36ab58e6d523a4face3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classvlkx_1_1_image_usage" kindref="compound">ImageUsage</ref> &amp;</type>
        <definition>const ImageUsage &amp; vlkx::MultiImageTracker::get</definition>
        <argsstring>(const std::string &amp;image) const</argsstring>
        <name>get</name>
        <qualifiedname>vlkx::MultiImageTracker::get</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>image</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/ImageUsage.h" line="289" column="27" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/ImageUsage.h" bodystart="289" bodyend="291"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A simple wrapper that allows tracking the current usage of multiple images. </para>
    </detaileddescription>
    <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/ImageUsage.h" line="259" column="5" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/ImageUsage.h" bodystart="259" bodyend="296"/>
    <listofallmembers>
      <member refid="classvlkx_1_1_multi_image_tracker_1a2fda3df59d5ef36ab58e6d523a4face3" prot="public" virt="non-virtual"><scope>vlkx::MultiImageTracker</scope><name>get</name></member>
      <member refid="classvlkx_1_1_multi_image_tracker_1a96502bbf3f5bd296ef2d4a1cb8c831c5" prot="private" virt="non-virtual"><scope>vlkx::MultiImageTracker</scope><name>images</name></member>
      <member refid="classvlkx_1_1_multi_image_tracker_1ac345fc90a43c19c6b4d672c45ae37cf6" prot="public" virt="non-virtual"><scope>vlkx::MultiImageTracker</scope><name>isTracking</name></member>
      <member refid="classvlkx_1_1_multi_image_tracker_1abf4a785bc3552bdde63ebb6329fa8ec9" prot="public" virt="non-virtual"><scope>vlkx::MultiImageTracker</scope><name>MultiImageTracker</name></member>
      <member refid="classvlkx_1_1_multi_image_tracker_1a54711f5b41f7f457445c5c688ee38a27" prot="public" virt="non-virtual"><scope>vlkx::MultiImageTracker</scope><name>MultiImageTracker</name></member>
      <member refid="classvlkx_1_1_multi_image_tracker_1a637df485ab0fd10c413b10ca3bfd8d16" prot="public" virt="non-virtual"><scope>vlkx::MultiImageTracker</scope><name>operator=</name></member>
      <member refid="classvlkx_1_1_multi_image_tracker_1ad5b7084777246bf17d70118f42e059a8" prot="public" virt="non-virtual"><scope>vlkx::MultiImageTracker</scope><name>track</name></member>
      <member refid="classvlkx_1_1_multi_image_tracker_1a0879836b217057afbb72437dab71ec4d" prot="public" virt="non-virtual"><scope>vlkx::MultiImageTracker</scope><name>track</name></member>
      <member refid="classvlkx_1_1_multi_image_tracker_1a4b8be4059b29ed37e183d359ac30c9de" prot="public" virt="non-virtual"><scope>vlkx::MultiImageTracker</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
