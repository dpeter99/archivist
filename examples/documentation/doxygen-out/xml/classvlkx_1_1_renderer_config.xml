<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classvlkx_1_1_renderer_config" kind="class" language="C++" prot="public">
    <compoundname>vlkx::RendererConfig</compoundname>
    <includes refid="_screen_render_pass_8h" local="no">ScreenRenderPass.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classvlkx_1_1_renderer_config_1a462c54afd68685fe28541ca4f77e3e36" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int vlkx::RendererConfig::numOpaquePasses</definition>
        <argsstring></argsstring>
        <name>numOpaquePasses</name>
        <qualifiedname>vlkx::RendererConfig::numOpaquePasses</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" line="43" column="13" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_renderer_config_1a391f168e9e42441bb1e178e568463a6d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int vlkx::RendererConfig::numTransparentPasses</definition>
        <argsstring></argsstring>
        <name>numTransparentPasses</name>
        <qualifiedname>vlkx::RendererConfig::numTransparentPasses</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" line="44" column="13" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_renderer_config_1a7d207eead3215bdb3be2e1d9970136c9" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="classvlkx_1_1_image" kindref="compound">vlkx::Image</ref> &gt; &gt; &amp;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;vlkx::Image&gt; &gt;&amp; vlkx::RendererConfig::renderImages</definition>
        <argsstring></argsstring>
        <name>renderImages</name>
        <qualifiedname>vlkx::RendererConfig::renderImages</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" line="45" column="21" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_renderer_config_1abbbfe0a388525082c88980895c02f371" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool vlkx::RendererConfig::rendersToScreen</definition>
        <argsstring></argsstring>
        <name>rendersToScreen</name>
        <qualifiedname>vlkx::RendererConfig::rendersToScreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" line="46" column="14" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvlkx_1_1_renderer_config_1a7c87f5dc326d2f76e8595a4e3f00633d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int vlkx::RendererConfig::numOverlayPasses</definition>
        <argsstring></argsstring>
        <name>numOverlayPasses</name>
        <qualifiedname>vlkx::RendererConfig::numOverlayPasses</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" line="48" column="13" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvlkx_1_1_renderer_config_1a0e5bb1f8babbb679a03dd8a08a20c66f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vlkx::RendererConfig::RendererConfig</definition>
        <argsstring>(std::vector&lt; std::unique_ptr&lt; vlkx::Image &gt; &gt; &amp;destinations, bool toScreen=true)</argsstring>
        <name>RendererConfig</name>
        <qualifiedname>vlkx::RendererConfig::RendererConfig</qualifiedname>
        <param>
          <type>std::vector&lt; std::unique_ptr&lt; <ref refid="classvlkx_1_1_image" kindref="compound">vlkx::Image</ref> &gt; &gt; &amp;</type>
          <declname>destinations</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>toScreen</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" line="15" column="9" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_renderer_config_1a252aab9939e93aa87a2f00fe059cac25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vlkx::RendererConfig::RendererConfig</definition>
        <argsstring>(int passCount, std::vector&lt; std::unique_ptr&lt; vlkx::Image &gt; &gt; &amp;destinations, bool toScreen=true, std::optional&lt; int &gt; firstTransparent=std::nullopt, std::optional&lt; int &gt; firstOverlay=std::nullopt)</argsstring>
        <name>RendererConfig</name>
        <qualifiedname>vlkx::RendererConfig::RendererConfig</qualifiedname>
        <param>
          <type>int</type>
          <declname>passCount</declname>
        </param>
        <param>
          <type>std::vector&lt; std::unique_ptr&lt; <ref refid="classvlkx_1_1_image" kindref="compound">vlkx::Image</ref> &gt; &gt; &amp;</type>
          <declname>destinations</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>toScreen</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>std::optional&lt; int &gt;</type>
          <declname>firstTransparent</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; int &gt;</type>
          <declname>firstOverlay</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" line="20" column="9" bodyfile="shadow-engine/shadow-renderer/src/render/render_pass/ScreenRenderPass.cpp" bodystart="25" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_renderer_config_1ae4271a43427892015dc4e0d7a6feda84" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vlkx::RendererConfig::depthPasses</definition>
        <argsstring>() const</argsstring>
        <name>depthPasses</name>
        <qualifiedname>vlkx::RendererConfig::depthPasses</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" line="23" column="13" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_renderer_config_1ac7b60b80830730b8489d2ccdb059916a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vlkx::RendererConfig::passes</definition>
        <argsstring>() const</argsstring>
        <name>passes</name>
        <qualifiedname>vlkx::RendererConfig::passes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" line="28" column="13" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_renderer_config_1a9603ae1ba3a866156cf1113488973232" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vlkx::RendererConfig::usesDepth</definition>
        <argsstring>() const</argsstring>
        <name>usesDepth</name>
        <qualifiedname>vlkx::RendererConfig::usesDepth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" line="33" column="14" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_renderer_config_1af2933cc0723caeea2c7eb181349bbf1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vlkx::RendererConfig::build</definition>
        <argsstring>()</argsstring>
        <name>build</name>
        <qualifiedname>vlkx::RendererConfig::build</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" line="38" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_renderer_config_1ad4ed4c8515c1ebfb8fc3fe7071b4fc1b" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>vlkx::RendererConfig::RendererConfig</definition>
        <argsstring>(RendererConfig &amp;) noexcept=default</argsstring>
        <name>RendererConfig</name>
        <qualifiedname>vlkx::RendererConfig::RendererConfig</qualifiedname>
        <param>
          <type><ref refid="classvlkx_1_1_renderer_config" kindref="compound">RendererConfig</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" line="40" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_renderer_config_1ad439a1ea9c689de7a1f000f34d7292d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vlkx::RendererConfig::RendererConfig</definition>
        <argsstring>(const RendererConfig &amp;)=default</argsstring>
        <name>RendererConfig</name>
        <qualifiedname>vlkx::RendererConfig::RendererConfig</qualifiedname>
        <param>
          <type>const <ref refid="classvlkx_1_1_renderer_config" kindref="compound">RendererConfig</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" line="41" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" line="13" column="5" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h" bodystart="13" bodyend="49"/>
    <listofallmembers>
      <member refid="classvlkx_1_1_renderer_config_1af2933cc0723caeea2c7eb181349bbf1e" prot="public" virt="non-virtual"><scope>vlkx::RendererConfig</scope><name>build</name></member>
      <member refid="classvlkx_1_1_renderer_config_1ae4271a43427892015dc4e0d7a6feda84" prot="public" virt="non-virtual"><scope>vlkx::RendererConfig</scope><name>depthPasses</name></member>
      <member refid="classvlkx_1_1_renderer_config_1a462c54afd68685fe28541ca4f77e3e36" prot="public" virt="non-virtual"><scope>vlkx::RendererConfig</scope><name>numOpaquePasses</name></member>
      <member refid="classvlkx_1_1_renderer_config_1a7c87f5dc326d2f76e8595a4e3f00633d" prot="private" virt="non-virtual"><scope>vlkx::RendererConfig</scope><name>numOverlayPasses</name></member>
      <member refid="classvlkx_1_1_renderer_config_1a391f168e9e42441bb1e178e568463a6d" prot="public" virt="non-virtual"><scope>vlkx::RendererConfig</scope><name>numTransparentPasses</name></member>
      <member refid="classvlkx_1_1_renderer_config_1ac7b60b80830730b8489d2ccdb059916a" prot="public" virt="non-virtual"><scope>vlkx::RendererConfig</scope><name>passes</name></member>
      <member refid="classvlkx_1_1_renderer_config_1a0e5bb1f8babbb679a03dd8a08a20c66f" prot="public" virt="non-virtual"><scope>vlkx::RendererConfig</scope><name>RendererConfig</name></member>
      <member refid="classvlkx_1_1_renderer_config_1a252aab9939e93aa87a2f00fe059cac25" prot="public" virt="non-virtual"><scope>vlkx::RendererConfig</scope><name>RendererConfig</name></member>
      <member refid="classvlkx_1_1_renderer_config_1ad4ed4c8515c1ebfb8fc3fe7071b4fc1b" prot="public" virt="non-virtual"><scope>vlkx::RendererConfig</scope><name>RendererConfig</name></member>
      <member refid="classvlkx_1_1_renderer_config_1ad439a1ea9c689de7a1f000f34d7292d7" prot="public" virt="non-virtual"><scope>vlkx::RendererConfig</scope><name>RendererConfig</name></member>
      <member refid="classvlkx_1_1_renderer_config_1a7d207eead3215bdb3be2e1d9970136c9" prot="public" virt="non-virtual"><scope>vlkx::RendererConfig</scope><name>renderImages</name></member>
      <member refid="classvlkx_1_1_renderer_config_1abbbfe0a388525082c88980895c02f371" prot="public" virt="non-virtual"><scope>vlkx::RendererConfig</scope><name>rendersToScreen</name></member>
      <member refid="classvlkx_1_1_renderer_config_1a9603ae1ba3a866156cf1113488973232" prot="public" virt="non-virtual"><scope>vlkx::RendererConfig</scope><name>usesDepth</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
