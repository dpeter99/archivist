<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="_descriptor_8h" kind="file" language="C++">
    <compoundname>Descriptor.h</compoundname>
    <includes local="no">map</includes>
    <includes local="no">vector</includes>
    <includes local="no">vulkan/vulkan.h</includes>
    <includes refid="_loader_8h" local="no">temp/model/Loader.h</includes>
    <includes refid="_vulkan_module_8h" local="no">vlkx/vulkan/VulkanModule.h</includes>
    <includedby refid="_builder_8h" local="yes">shadow-engine/shadow-renderer/inc/temp/model/Builder.h</includedby>
    <includedby refid="_descriptor_8cpp" local="yes">shadow-engine/shadow-renderer/src/vulkan/abstraction/Descriptor.cpp</includedby>
    <incdepgraph>
      <node id="20">
        <label>core/Module.h</label>
        <link refid="_module_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>exports.h</label>
        <link refid="exports_8h"/>
      </node>
      <node id="21">
        <label>SHObject.h</label>
        <link refid="_s_h_object_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>temp/model/Loader.h</label>
        <link refid="_loader_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>vlkx/render/Geometry.h</label>
        <link refid="_geometry_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>SwapChain.h</label>
        <link refid="_swap_chain_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>vlkx/vulkan/Tools.h</label>
        <link refid="_tools_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>vlkx/vulkan/ValidationAndExtension.h</label>
        <link refid="_validation_and_extension_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>vlkx/vulkan/VulkanDevice.h</label>
        <link refid="_vulkan_device_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>vlkx/vulkan/VulkanModule.h</label>
        <link refid="_vulkan_module_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>Buffer.h</label>
        <link refid="_buffer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>vlkx/vulkan/abstraction/Commands.h</label>
        <link refid="_commands_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Descriptor.h</label>
        <link refid="_descriptor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>vlkx/vulkan/abstraction/Image.h</label>
        <link refid="_image_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>ImageUsage.h</label>
        <link refid="_image_usage_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>Queue.h</label>
        <link refid="_queue_8h"/>
      </node>
      <node id="18">
        <label>vulkan/vk_mem_alloc.h</label>
        <link refid="vk__mem__alloc_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>shadow/util/RefCounter.h</label>
        <link refid="_ref_counter_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>SDL.h</label>
      </node>
      <node id="24">
        <label>SDL_events.h</label>
      </node>
      <node id="19">
        <label>SDL_vulkan.h</label>
      </node>
      <node id="31">
        <label>algorithm</label>
      </node>
      <node id="8">
        <label>array</label>
      </node>
      <node id="28">
        <label>functional</label>
      </node>
      <node id="9">
        <label>glm/glm.hpp</label>
      </node>
      <node id="10">
        <label>glm/gtc/matrix_transform.hpp</label>
      </node>
      <node id="13">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>map</label>
      </node>
      <node id="25">
        <label>memory</label>
      </node>
      <node id="29">
        <label>optional</label>
      </node>
      <node id="17">
        <label>set</label>
      </node>
      <node id="16">
        <label>stdexcept</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="22">
        <label>typeinfo</label>
      </node>
      <node id="38">
        <label>utility</label>
      </node>
      <node id="37">
        <label>variant</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="4">
        <label>vulkan/vulkan.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>shadow-engine/shadow-renderer/inc/temp/model/Builder.h</label>
        <link refid="_builder_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Descriptor.h</label>
        <link refid="_descriptor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>shadow-engine/shadow-renderer/src/temp/model/Builder.cpp</label>
        <link refid="_builder_8cpp"/>
      </node>
      <node id="4">
        <label>shadow-engine/shadow-renderer/src/vulkan/abstraction/Descriptor.cpp</label>
        <link refid="_descriptor_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classvlkx_1_1_descriptor" prot="public">vlkx::Descriptor</innerclass>
    <innerclass refid="structvlkx_1_1_descriptor_1_1_meta" prot="public">vlkx::Descriptor::Meta</innerclass>
    <innerclass refid="structvlkx_1_1_descriptor_1_1_meta_1_1_binding" prot="public">vlkx::Descriptor::Meta::Binding</innerclass>
    <innerclass refid="classvlkx_1_1_static_descriptor" prot="public">vlkx::StaticDescriptor</innerclass>
    <innernamespace refid="namespacevlkx">vlkx</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vulkan/vulkan.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_loader_8h" kindref="compound">temp/model/Loader.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_vulkan_module_8h" kindref="compound">vlkx/vulkan/VulkanModule.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevlkx" kindref="compound">vlkx</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="classvlkx_1_1_descriptor" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_descriptor" kindref="compound">Descriptor</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13" refid="classvlkx_1_1_descriptor_1a5b0d41cd23e84dcedb25c825e6b8dae8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classvlkxtemp_1_1_model_loader_1a514055e13e1d8132ae485d6d6b11f2d3" kindref="member">TextureType</ref><sp/>=<sp/><ref refid="classvlkxtemp_1_1_model_loader_1a514055e13e1d8132ae485d6d6b11f2d3" kindref="member">vlkxtemp::ModelLoader::TextureType</ref>;</highlight></codeline>
<codeline lineno="14" refid="classvlkx_1_1_descriptor_1a3294c51c009d0ac9de4f5c133ad852c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_descriptor_1a3294c51c009d0ac9de4f5c133ad852c8" kindref="member">BufferInfos</ref><sp/>=<sp/>std::map&lt;uint32_t,<sp/>std::vector&lt;VkDescriptorBufferInfo&gt;&gt;;</highlight></codeline>
<codeline lineno="15" refid="classvlkx_1_1_descriptor_1a4e02bf81a006a3dfadb9269b8c1f1647" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_descriptor_1a4e02bf81a006a3dfadb9269b8c1f1647" kindref="member">ImageInfos</ref><sp/>=<sp/>std::map&lt;uint32_t,<sp/>std::vector&lt;VkDescriptorImageInfo&gt;&gt;;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="structvlkx_1_1_descriptor_1_1_meta" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvlkx_1_1_descriptor_1_1_meta" kindref="compound">Meta</ref><sp/>{</highlight></codeline>
<codeline lineno="18" refid="structvlkx_1_1_descriptor_1_1_meta_1_1_binding" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvlkx_1_1_descriptor_1_1_meta_1_1_binding" kindref="compound">Binding</ref><sp/>{</highlight></codeline>
<codeline lineno="19" refid="structvlkx_1_1_descriptor_1_1_meta_1_1_binding_1a6f054cb8dfc75304679b8d9b7fae4b3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structvlkx_1_1_descriptor_1_1_meta_1_1_binding_1a6f054cb8dfc75304679b8d9b7fae4b3c" kindref="member">bindPoint</ref>;</highlight></codeline>
<codeline lineno="20" refid="structvlkx_1_1_descriptor_1_1_meta_1_1_binding_1a3e5e00c584c5694f89559393f8855833" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structvlkx_1_1_descriptor_1_1_meta_1_1_binding_1a3e5e00c584c5694f89559393f8855833" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="structvlkx_1_1_descriptor_1_1_meta_1ae2a608f7ae8967f2eb88f3d13995b304" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDescriptorType<sp/><ref refid="structvlkx_1_1_descriptor_1_1_meta_1ae2a608f7ae8967f2eb88f3d13995b304" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="24" refid="structvlkx_1_1_descriptor_1_1_meta_1abc443e5235b2e66b4902449cce52d389" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkShaderStageFlags<sp/><ref refid="structvlkx_1_1_descriptor_1_1_meta_1abc443e5235b2e66b4902449cce52d389" kindref="member">stage</ref>;</highlight></codeline>
<codeline lineno="25" refid="structvlkx_1_1_descriptor_1_1_meta_1add0c978eb7706e82bcc1fdb4c175bbbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Binding&gt;<sp/><ref refid="structvlkx_1_1_descriptor_1_1_meta_1add0c978eb7706e82bcc1fdb4c175bbbd" kindref="member">bindings</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classvlkx_1_1_descriptor_1ac08426f6ea79aea75e826cabd55fec15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_descriptor_1ac08426f6ea79aea75e826cabd55fec15" kindref="member">Descriptor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_descriptor" kindref="compound">Descriptor</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29" refid="classvlkx_1_1_descriptor_1a1743fa4145fda2b013c53fa5c86ac771" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_descriptor" kindref="compound">Descriptor</ref>&amp;<sp/><ref refid="classvlkx_1_1_descriptor_1a1743fa4145fda2b013c53fa5c86ac771" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_descriptor" kindref="compound">Descriptor</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classvlkx_1_1_descriptor_1a55273f2d9ac5eb7a85ffa5fe40185746" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_descriptor_1a55273f2d9ac5eb7a85ffa5fe40185746" kindref="member">~Descriptor</ref>()<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyDescriptorSetLayout(<ref refid="class_vulkan_module_1ae98fb6b5c4497288b51c9c4b860cb1bd" kindref="member">VulkanModule::getInstance</ref>()-&gt;getDevice()-&gt;logical,<sp/>layout,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classvlkx_1_1_descriptor_1a678a608c818d18d69570aab2d66c6998" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkDescriptorSetLayout&amp;<sp/><ref refid="classvlkx_1_1_descriptor_1a678a608c818d18d69570aab2d66c6998" kindref="member">getLayout</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>layout;<sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38" refid="classvlkx_1_1_descriptor_1a006a213e21ad4cd795ac38bcb83dfcdf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_descriptor_1a006a213e21ad4cd795ac38bcb83dfcdf" kindref="member">Descriptor</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classvlkx_1_1_descriptor_1a5eab2d07d6b9eb03bfc31357d46d0851" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_descriptor_1a5eab2d07d6b9eb03bfc31357d46d0851" kindref="member">setLayout</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkDescriptorSetLayout&amp;<sp/>newLayout)<sp/>{<sp/>layout<sp/>=<sp/>newLayout;<sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDescriptorSetLayout<sp/>layout;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classvlkx_1_1_static_descriptor" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_static_descriptor" kindref="compound">StaticDescriptor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_descriptor" kindref="compound">Descriptor</ref><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_static_descriptor" kindref="compound">StaticDescriptor</ref>(std::vector&lt;Meta&gt;<sp/>metas);</highlight></codeline>
<codeline lineno="50" refid="classvlkx_1_1_static_descriptor_1aaabd6f7f148183c46d3723bf4e4c02a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_static_descriptor_1aaabd6f7f148183c46d3723bf4e4c02a5" kindref="member">StaticDescriptor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_static_descriptor" kindref="compound">StaticDescriptor</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51" refid="classvlkx_1_1_static_descriptor_1a4f93f30f45caf5859cf02f426cbcaa5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_static_descriptor" kindref="compound">StaticDescriptor</ref>&amp;<sp/><ref refid="classvlkx_1_1_static_descriptor_1a4f93f30f45caf5859cf02f426cbcaa5a" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_static_descriptor" kindref="compound">StaticDescriptor</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classvlkx_1_1_static_descriptor_1ac0079a16526bb99c2b4db905e4646dcb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_static_descriptor_1ac0079a16526bb99c2b4db905e4646dcb" kindref="member">~StaticDescriptor</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyDescriptorPool(<ref refid="class_vulkan_module_1ae98fb6b5c4497288b51c9c4b860cb1bd" kindref="member">VulkanModule::getInstance</ref>()-&gt;getDevice()-&gt;logical,<sp/>pool,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_static_descriptor" kindref="compound">StaticDescriptor</ref>&amp;<sp/><ref refid="classvlkx_1_1_static_descriptor_1a8878ff41efb3ce526ba056468b7555e1" kindref="member">buffers</ref>(VkDescriptorType<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_descriptor_1a3294c51c009d0ac9de4f5c133ad852c8" kindref="member">BufferInfos</ref>&amp;<sp/>infos)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_static_descriptor" kindref="compound">StaticDescriptor</ref>&amp;<sp/><ref refid="classvlkx_1_1_static_descriptor_1a1afc662a43b00a2e43433cc39e925d7c" kindref="member">images</ref>(VkDescriptorType<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_descriptor_1a4e02bf81a006a3dfadb9269b8c1f1647" kindref="member">ImageInfos</ref>&amp;<sp/>infos)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_static_descriptor_1abaab86211fa7c59b681eb4a590613bd4" kindref="member">bind</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkCommandBuffer&amp;<sp/>commands,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkPipelineLayout&amp;<sp/>layout,<sp/>VkPipelineBindPoint<sp/>bindPoint)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_static_descriptor" kindref="compound">StaticDescriptor</ref>&amp;<sp/>updateSet(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;VkWriteDescriptorSet&gt;&amp;<sp/>write)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDescriptorPool<sp/>pool;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDescriptorSet<sp/>set;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>dynamic<sp/>sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Descriptor.h"/>
  </compounddef>
</doxygen>
