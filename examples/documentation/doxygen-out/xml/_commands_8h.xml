<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="_commands_8h" kind="file" language="C++">
    <compoundname>Commands.h</compoundname>
    <includes local="no">vulkan/vulkan.h</includes>
    <includes refid="_queue_8h" local="yes">Queue.h</includes>
    <includes refid="_vulkan_device_8h" local="yes">vlkx/vulkan/VulkanDevice.h</includes>
    <includes local="no">functional</includes>
    <includes local="no">optional</includes>
    <includedby refid="_module_8h" local="yes">shadow-engine/core/inc/core/Module.h</includedby>
    <includedby refid="_shadow_application_8cpp" local="yes">shadow-engine/core/src/core/ShadowApplication.cpp</includedby>
    <includedby refid="_tools_8cpp" local="yes">shadow-engine/shadow-renderer/src/vulkan/Tools.cpp</includedby>
    <includedby refid="_commands_8cpp" local="yes">shadow-engine/shadow-renderer/src/vulkan/abstraction/Commands.cpp</includedby>
    <incdepgraph>
      <node id="9">
        <label>vlkx/vulkan/ValidationAndExtension.h</label>
        <link refid="_validation_and_extension_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>vlkx/vulkan/VulkanDevice.h</label>
        <link refid="_vulkan_device_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Commands.h</label>
        <link refid="_commands_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Queue.h</label>
        <link refid="_queue_8h"/>
      </node>
      <node id="10">
        <label>SDL.h</label>
      </node>
      <node id="11">
        <label>functional</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="12">
        <label>optional</label>
      </node>
      <node id="8">
        <label>set</label>
      </node>
      <node id="5">
        <label>stdexcept</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
      <node id="2">
        <label>vulkan/vulkan.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>shadow-engine/core/inc/core/Module.h</label>
        <link refid="_module_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>shadow-engine/core/inc/core/ModuleManager.h</label>
        <link refid="_module_manager_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>shadow-engine/core/inc/core/SDL2Module.h</label>
        <link refid="_s_d_l2_module_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>shadow-engine/core/inc/core/ShadowApplication.h</label>
        <link refid="_shadow_application_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>shadow-engine/core/inc/debug/DebugModule.h</label>
        <link refid="_debug_module_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>shadow-engine/core/src/core/Module.cpp</label>
        <link refid="_module_8cpp"/>
      </node>
      <node id="9">
        <label>shadow-engine/core/src/core/ModuleManager.cpp</label>
        <link refid="_module_manager_8cpp"/>
      </node>
      <node id="12">
        <label>shadow-engine/core/src/core/SDL2Module.cpp</label>
        <link refid="_s_d_l2_module_8cpp"/>
      </node>
      <node id="5">
        <label>shadow-engine/core/src/core/ShadowApplication.cpp</label>
        <link refid="_shadow_application_8cpp"/>
      </node>
      <node id="10">
        <label>shadow-engine/core/src/debug/DebugModule.cpp</label>
        <link refid="_debug_module_8cpp"/>
      </node>
      <node id="6">
        <label>shadow-engine/shadow-entity/Entities/Camera.cpp</label>
        <link refid="shadow-entity_2_entities_2_camera_8cpp"/>
      </node>
      <node id="15">
        <label>shadow-engine/shadow-entity/inc/EntitySystem.h</label>
        <link refid="_entity_system_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>shadow-engine/shadow-entity/src/EntitySystem.cpp</label>
        <link refid="_entity_system_8cpp"/>
      </node>
      <node id="19">
        <label>shadow-engine/shadow-renderer/inc/temp/model/Builder.h</label>
        <link refid="_builder_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h</label>
        <link refid="_pipeline_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>shadow-engine/shadow-renderer/inc/vlkx/vulkan/VulkanModule.h</label>
        <link refid="_vulkan_module_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Commands.h</label>
        <link refid="_commands_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Descriptor.h</label>
        <link refid="_descriptor_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>shadow-engine/shadow-renderer/src/render/pipeline/Pipeline.cpp</label>
        <link refid="_pipeline_8cpp"/>
      </node>
      <node id="24">
        <label>shadow-engine/shadow-renderer/src/render/render_pass/GenericRenderPass.cpp</label>
        <link refid="_generic_render_pass_8cpp"/>
      </node>
      <node id="25">
        <label>shadow-engine/shadow-renderer/src/render/render_pass/ScreenRenderPass.cpp</label>
        <link refid="_screen_render_pass_8cpp"/>
      </node>
      <node id="20">
        <label>shadow-engine/shadow-renderer/src/temp/model/Builder.cpp</label>
        <link refid="_builder_8cpp"/>
      </node>
      <node id="26">
        <label>shadow-engine/shadow-renderer/src/vulkan/SwapChain.cpp</label>
        <link refid="_swap_chain_8cpp"/>
      </node>
      <node id="30">
        <label>shadow-engine/shadow-renderer/src/vulkan/Tools.cpp</label>
        <link refid="_tools_8cpp"/>
      </node>
      <node id="7">
        <label>shadow-engine/shadow-renderer/src/vulkan/VulkanModule.cpp</label>
        <link refid="_vulkan_module_8cpp"/>
      </node>
      <node id="27">
        <label>shadow-engine/shadow-renderer/src/vulkan/abstraction/Buffer.cpp</label>
        <link refid="_buffer_8cpp"/>
      </node>
      <node id="28">
        <label>shadow-engine/shadow-renderer/src/vulkan/abstraction/Commands.cpp</label>
        <link refid="_commands_8cpp"/>
      </node>
      <node id="23">
        <label>shadow-engine/shadow-renderer/src/vulkan/abstraction/Descriptor.cpp</label>
        <link refid="_descriptor_8cpp"/>
      </node>
      <node id="29">
        <label>shadow-engine/shadow-renderer/src/vulkan/abstraction/Image.cpp</label>
        <link refid="_image_8cpp"/>
      </node>
      <node id="8">
        <label>shadow-runtime/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classvlkx_1_1_command_buffer" prot="public">vlkx::CommandBuffer</innerclass>
    <innerclass refid="classvlkx_1_1_immediate_command" prot="public">vlkx::ImmediateCommand</innerclass>
    <innerclass refid="classvlkx_1_1_render_command" prot="public">vlkx::RenderCommand</innerclass>
    <innernamespace refid="namespacevlkx">vlkx</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vulkan/vulkan.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_queue_8h" kindref="compound">Queue.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_vulkan_device_8h" kindref="compound">vlkx/vulkan/VulkanDevice.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevlkx" kindref="compound">vlkx</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Root<sp/>class<sp/>of<sp/>VkCommandBuffer<sp/>wrappers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="classvlkx_1_1_command_buffer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_command_buffer" kindref="compound">CommandBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14" refid="classvlkx_1_1_command_buffer_1a89dd25d41ce895e7506227880b18b39c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_command_buffer_1a89dd25d41ce895e7506227880b18b39c" kindref="member">Command</ref><sp/>=<sp/>std::function&lt;void(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkCommandBuffer&amp;<sp/>buffer)&gt;;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classvlkx_1_1_command_buffer_1a44d89415c68f53839bed9a500e9e9c28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_command_buffer_1a44d89415c68f53839bed9a500e9e9c28" kindref="member">CommandBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_command_buffer" kindref="compound">CommandBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17" refid="classvlkx_1_1_command_buffer_1a5d1e3c8f4e1125c23a7c6b0308bc0ccd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_command_buffer" kindref="compound">CommandBuffer</ref>&amp;<sp/><ref refid="classvlkx_1_1_command_buffer_1a5d1e3c8f4e1125c23a7c6b0308bc0ccd" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_command_buffer" kindref="compound">CommandBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classvlkx_1_1_command_buffer_1aff399355ff561d9db85e3363188a51f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_command_buffer_1aff399355ff561d9db85e3363188a51f3" kindref="member">~CommandBuffer</ref>()<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyCommandPool(<ref refid="classvlkx_1_1_command_buffer_1a913b667da1ec1e3bb83753ed30c9cf9a" kindref="member">dev</ref>-&gt;<ref refid="class_vulkan_device_1a7ae557d71031d0212e50beba8b976d4b" kindref="member">logical</ref>,<sp/>pool,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_command_buffer_1a31dd9faba1742793714a6cfb85dadea9" kindref="member">CommandBuffer</ref>();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classvlkx_1_1_command_buffer_1a9431b9fa33c651adb2dd8752d054f66a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_command_buffer_1a9431b9fa33c651adb2dd8752d054f66a" kindref="member">setPool</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkCommandPool&amp;<sp/>newPool)<sp/>{<sp/>pool<sp/>=<sp/>newPool;<sp/>}</highlight></codeline>
<codeline lineno="26" refid="classvlkx_1_1_command_buffer_1a913b667da1ec1e3bb83753ed30c9cf9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_device" kindref="compound">VulkanDevice</ref>*<sp/><ref refid="classvlkx_1_1_command_buffer_1a913b667da1ec1e3bb83753ed30c9cf9a" kindref="member">dev</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkCommandPool<sp/>pool;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>command<sp/>buffer<sp/>that<sp/>will<sp/>be<sp/>immediately<sp/>executed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classvlkx_1_1_immediate_command" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_immediate_command" kindref="compound">ImmediateCommand</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_command_buffer" kindref="compound">CommandBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_immediate_command" kindref="compound">ImmediateCommand</ref>(<ref refid="structvlkx_1_1_queue" kindref="compound">Queue</ref><sp/>queue);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classvlkx_1_1_immediate_command_1a8b0a5b292c6edd8ba8ec8c5bf2cd5f6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_immediate_command_1a8b0a5b292c6edd8ba8ec8c5bf2cd5f6e" kindref="member">ImmediateCommand</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_immediate_command" kindref="compound">ImmediateCommand</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37" refid="classvlkx_1_1_immediate_command_1afd9c49e57c4337512dead18a177613f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_immediate_command" kindref="compound">ImmediateCommand</ref>&amp;<sp/><ref refid="classvlkx_1_1_immediate_command_1afd9c49e57c4337512dead18a177613f2" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_immediate_command" kindref="compound">ImmediateCommand</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_immediate_command_1aff73ac980b4e9de4ba0078a23b9cebf7" kindref="member">run</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_command_buffer_1a89dd25d41ce895e7506227880b18b39c" kindref="member">Command</ref>&amp;<sp/>cmd);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structvlkx_1_1_queue" kindref="compound">Queue</ref><sp/>queue;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkCommandBuffer<sp/>commands;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>command<sp/>buffer<sp/>that<sp/>will<sp/>be<sp/>reused<sp/>every<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classvlkx_1_1_render_command" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_render_command" kindref="compound">RenderCommand</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_command_buffer" kindref="compound">CommandBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49" refid="classvlkx_1_1_render_command_1a034e5a7c839967dab511e39f8ebc5f28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_render_command_1a034e5a7c839967dab511e39f8ebc5f28" kindref="member">Command</ref><sp/>=<sp/>std::function&lt;void(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkCommandBuffer&amp;<sp/>commands,<sp/>uint32_t<sp/>framebuffer)&gt;;</highlight></codeline>
<codeline lineno="50" refid="classvlkx_1_1_render_command_1a76562bcc16cd1c839916dd66722e5998" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_render_command_1a76562bcc16cd1c839916dd66722e5998" kindref="member">Update</ref><sp/>=<sp/>std::function&lt;void(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame)&gt;;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classvlkx_1_1_render_command_1a92e3a81557751519ebf17d9b138232d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_render_command_1a92e3a81557751519ebf17d9b138232d7" kindref="member">~RenderCommand</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destroy<sp/>our<sp/>own<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroySemaphore(<ref refid="classvlkx_1_1_command_buffer_1a913b667da1ec1e3bb83753ed30c9cf9a" kindref="member">dev</ref>-&gt;<ref refid="class_vulkan_device_1a7ae557d71031d0212e50beba8b976d4b" kindref="member">logical</ref>,<sp/>renderDoneSem,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroySemaphore(<ref refid="classvlkx_1_1_command_buffer_1a913b667da1ec1e3bb83753ed30c9cf9a" kindref="member">dev</ref>-&gt;<ref refid="class_vulkan_device_1a7ae557d71031d0212e50beba8b976d4b" kindref="member">logical</ref>,<sp/>newImageSem,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyFence(<ref refid="classvlkx_1_1_command_buffer_1a913b667da1ec1e3bb83753ed30c9cf9a" kindref="member">dev</ref>-&gt;<ref refid="class_vulkan_device_1a7ae557d71031d0212e50beba8b976d4b" kindref="member">logical</ref>,<sp/>inFlight[i],<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_render_command" kindref="compound">RenderCommand</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frames);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classvlkx_1_1_render_command_1abb281128d8fbef931af839d8da23070b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_render_command_1abb281128d8fbef931af839d8da23070b" kindref="member">RenderCommand</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_render_command" kindref="compound">RenderCommand</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65" refid="classvlkx_1_1_render_command_1a51b9a3e6f0721fb1be2c25c2f9f9f22a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_render_command" kindref="compound">RenderCommand</ref>&amp;<sp/><ref refid="classvlkx_1_1_render_command_1a51b9a3e6f0721fb1be2c25c2f9f9f22a" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_render_command" kindref="compound">RenderCommand</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classvlkx_1_1_render_command_1a4c8f5635011dc7b81c5fd2208c7020de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="classvlkx_1_1_render_command_1a4c8f5635011dc7b81c5fd2208c7020de" kindref="member">getFrame</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>imageIndex;<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classvlkx_1_1_render_command_1aab606c788bd7da1f4b253e8a4f166c3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_render_command_1aab606c788bd7da1f4b253e8a4f166c3d" kindref="member">nextFrame</ref>()<sp/>{<sp/>imageIndex<sp/>=<sp/>(imageIndex<sp/>+<sp/>1)<sp/>%<sp/>2;<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;VkResult&gt;<sp/><ref refid="classvlkx_1_1_render_command_1ab67b33b39ff4ebd42ff6c179899bc8ad" kindref="member">execute</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkSwapchainKHR&amp;<sp/>swapchain,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_render_command_1a76562bcc16cd1c839916dd66722e5998" kindref="member">Update</ref>&amp;<sp/>update,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_render_command_1a034e5a7c839967dab511e39f8ebc5f28" kindref="member">Command</ref>&amp;<sp/>cmd);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Renders<sp/>a<sp/>single<sp/>frame<sp/>out,<sp/>no<sp/>semaphores<sp/>or<sp/>fences.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;VkResult&gt;<sp/><ref refid="classvlkx_1_1_render_command_1ae15509ece3fec404d3117ffa13a7498d" kindref="member">executeSimple</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_render_command_1a76562bcc16cd1c839916dd66722e5998" kindref="member">Update</ref>&amp;<sp/>update,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_render_command_1a034e5a7c839967dab511e39f8ebc5f28" kindref="member">Command</ref>&amp;<sp/>cmd);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;VkCommandBuffer&gt;<sp/>commands;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Raised<sp/>when<sp/>a<sp/>new<sp/>image<sp/>is<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkSemaphore<sp/>newImageSem;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Raised<sp/>when<sp/>a<sp/>render<sp/>is<sp/>finished</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkSemaphore<sp/>renderDoneSem;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stores<sp/>fences<sp/>for<sp/>frames<sp/>that<sp/>are<sp/>currently<sp/>&quot;in<sp/>flight&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;VkFence&gt;<sp/>inFlight;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>index<sp/>of<sp/>the<sp/>texture<sp/>that<sp/>is<sp/>currently<sp/>being<sp/>used<sp/>by<sp/>the<sp/>GPU.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>imageIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Commands.h"/>
  </compounddef>
</doxygen>
