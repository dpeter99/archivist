<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="struct_vma_defragmentation_move" kind="struct" language="C++" prot="public">
    <compoundname>VmaDefragmentationMove</compoundname>
    <includes refid="vk__mem__alloc_8h" local="no">vk_mem_alloc.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_vma_defragmentation_move_1a20996a4686c9246dff77b375ac4a91e2" prot="public" static="no" mutable="no">
        <type><ref refid="group__group__alloc_1gada9e3861caf96f08894b0bcc160ec257" kindref="member">VmaDefragmentationMoveOperation</ref></type>
        <definition>VmaDefragmentationMoveOperation VmaDefragmentationMove::operation</definition>
        <argsstring></argsstring>
        <name>operation</name>
        <qualifiedname>VmaDefragmentationMove::operation</qualifiedname>
        <briefdescription>
<para>Operation to be performed on the allocation by <ref refid="group__group__alloc_1gabbc69db60f82972ddffaceb6653e344a" kindref="member">vmaEndDefragmentationPass()</ref>. Default value is <ref refid="group__group__alloc_1ggada9e3861caf96f08894b0bcc160ec257ad4a06ac46c4cb1c67b0ebc1edfab9f18" kindref="member">VMA_DEFRAGMENTATION_MOVE_OPERATION_COPY</ref>. You can modify it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" line="1424" column="37" bodyfile="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" bodystart="1424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_vma_defragmentation_move_1a51c1ff05d7c1290499c4af2ffe238df5" prot="public" static="no" mutable="no">
        <type><ref refid="struct_vma_allocation" kindref="compound">VmaAllocation</ref> <ref refid="vk__mem__alloc_8h_1a0366f45516136c073f98582341ecf9de" kindref="member">VMA_NOT_NULL</ref></type>
        <definition>VmaAllocation VMA_NOT_NULL VmaDefragmentationMove::srcAllocation</definition>
        <argsstring></argsstring>
        <name>srcAllocation</name>
        <qualifiedname>VmaDefragmentationMove::srcAllocation</qualifiedname>
        <briefdescription>
<para>Allocation that should be moved. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" line="1426" column="32" bodyfile="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" bodystart="1426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_vma_defragmentation_move_1a4568ef03127bffa6000fe811205aeda4" prot="public" static="no" mutable="no">
        <type><ref refid="struct_vma_allocation" kindref="compound">VmaAllocation</ref> <ref refid="vk__mem__alloc_8h_1a0366f45516136c073f98582341ecf9de" kindref="member">VMA_NOT_NULL</ref></type>
        <definition>VmaAllocation VMA_NOT_NULL VmaDefragmentationMove::dstTmpAllocation</definition>
        <argsstring></argsstring>
        <name>dstTmpAllocation</name>
        <qualifiedname>VmaDefragmentationMove::dstTmpAllocation</qualifiedname>
        <briefdescription>
<para>Temporary allocation pointing to destination memory that will replace `srcAllocation`. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Do not store this allocation in your data structures! It exists only temporarily, for the duration of the defragmentation pass, to be used for binding new buffer/image to the destination memory using e.g. <ref refid="group__group__alloc_1ga7748e60ccc54e240777a848cb260bb19" kindref="member">vmaBindBufferMemory()</ref>. <ref refid="group__group__alloc_1gabbc69db60f82972ddffaceb6653e344a" kindref="member">vmaEndDefragmentationPass()</ref> will destroy it and make `srcAllocation` point to this memory. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" line="1433" column="32" bodyfile="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" bodystart="1433" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Single move of an allocation to be done for defragmentation. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>VmaAllocation</label>
        <link refid="struct_vma_allocation"/>
      </node>
      <node id="1">
        <label>VmaDefragmentationMove</label>
        <link refid="struct_vma_defragmentation_move"/>
        <childnode refid="2" relation="usage">
          <edgelabel>dstTmpAllocation</edgelabel>
          <edgelabel>srcAllocation</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" line="1421" column="1" bodyfile="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" bodystart="1422" bodyend="1434"/>
    <listofallmembers>
      <member refid="struct_vma_defragmentation_move_1a4568ef03127bffa6000fe811205aeda4" prot="public" virt="non-virtual"><scope>VmaDefragmentationMove</scope><name>dstTmpAllocation</name></member>
      <member refid="struct_vma_defragmentation_move_1a20996a4686c9246dff77b375ac4a91e2" prot="public" virt="non-virtual"><scope>VmaDefragmentationMove</scope><name>operation</name></member>
      <member refid="struct_vma_defragmentation_move_1a51c1ff05d7c1290499c4af2ffe238df5" prot="public" virt="non-virtual"><scope>VmaDefragmentationMove</scope><name>srcAllocation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
