<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="struct_vma_allocation_create_info" kind="struct" language="C++" prot="public">
    <compoundname>VmaAllocationCreateInfo</compoundname>
    <includes refid="vk__mem__alloc_8h" local="no">vk_mem_alloc.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_vma_allocation_create_info_1add09658ac14fe290ace25470ddd6d41b" prot="public" static="no" mutable="no">
        <type><ref refid="group__group__alloc_1ga5225e5e11f8376f6a31a1791f3d6e817" kindref="member">VmaAllocationCreateFlags</ref></type>
        <definition>VmaAllocationCreateFlags VmaAllocationCreateInfo::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <qualifiedname>VmaAllocationCreateInfo::flags</qualifiedname>
        <briefdescription>
<para>Use <ref refid="group__group__alloc_1gad9889c10c798b040d59c92f257cae597" kindref="member">VmaAllocationCreateFlagBits</ref> enum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" line="1224" column="30" bodyfile="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" bodystart="1224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_vma_allocation_create_info_1accb8b06b1f677d858cb9af20705fa910" prot="public" static="no" mutable="no">
        <type><ref refid="group__group__alloc_1gaa5846affa1e9da3800e3e78fae2305cc" kindref="member">VmaMemoryUsage</ref></type>
        <definition>VmaMemoryUsage VmaAllocationCreateInfo::usage</definition>
        <argsstring></argsstring>
        <name>usage</name>
        <qualifiedname>VmaAllocationCreateInfo::usage</qualifiedname>
        <briefdescription>
<para>Intended usage of memory. </para>
        </briefdescription>
        <detaileddescription>
<para>You can leave <ref refid="group__group__alloc_1ggaa5846affa1e9da3800e3e78fae2305ccaf50d27e34e0925cf3a63db8c839121dd" kindref="member">VMA_MEMORY_USAGE_UNKNOWN</ref> if you specify memory requirements in other way. <linebreak/>
If `pool` is not null, this member is ignored. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" line="1230" column="20" bodyfile="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" bodystart="1230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_vma_allocation_create_info_1a9166390303ff42d783305bc31c2b6b90" prot="public" static="no" mutable="no">
        <type>VkMemoryPropertyFlags</type>
        <definition>VkMemoryPropertyFlags VmaAllocationCreateInfo::requiredFlags</definition>
        <argsstring></argsstring>
        <name>requiredFlags</name>
        <qualifiedname>VmaAllocationCreateInfo::requiredFlags</qualifiedname>
        <briefdescription>
<para>Flags that must be set in a Memory Type chosen for an allocation. </para>
        </briefdescription>
        <detaileddescription>
<para>Leave 0 if you specify memory requirements in other way. <linebreak/>
If `pool` is not null, this member is ignored. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" line="1235" column="27" bodyfile="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" bodystart="1235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_vma_allocation_create_info_1a7fe8d81a1ad10b2a2faacacee5b15d6d" prot="public" static="no" mutable="no">
        <type>VkMemoryPropertyFlags</type>
        <definition>VkMemoryPropertyFlags VmaAllocationCreateInfo::preferredFlags</definition>
        <argsstring></argsstring>
        <name>preferredFlags</name>
        <qualifiedname>VmaAllocationCreateInfo::preferredFlags</qualifiedname>
        <briefdescription>
<para>Flags that preferably should be set in a memory type chosen for an allocation. </para>
        </briefdescription>
        <detaileddescription>
<para>Set to 0 if no additional flags are preferred. <linebreak/>
If `pool` is not null, this member is ignored. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" line="1240" column="27" bodyfile="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" bodystart="1240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_vma_allocation_create_info_1a3bf940c0271d85d6ba32a4d820075055" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t VmaAllocationCreateInfo::memoryTypeBits</definition>
        <argsstring></argsstring>
        <name>memoryTypeBits</name>
        <qualifiedname>VmaAllocationCreateInfo::memoryTypeBits</qualifiedname>
        <briefdescription>
<para>Bitmask containing one bit set for every memory type acceptable for this allocation. </para>
        </briefdescription>
        <detaileddescription>
<para>Value 0 is equivalent to `UINT32_MAX` - it means any memory type is accepted if it meets other requirements specified by this structure, with no further restrictions on memory type index. <linebreak/>
If `pool` is not null, this member is ignored. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" line="1248" column="14" bodyfile="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" bodystart="1248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_vma_allocation_create_info_1ad5aa903b9be1fa934abf2dd6c650fca6" prot="public" static="no" mutable="no">
        <type><ref refid="struct_vma_pool" kindref="compound">VmaPool</ref> <ref refid="vk__mem__alloc_8h_1a3ff043960766509fbba947bc2c68bdb6" kindref="member">VMA_NULLABLE</ref></type>
        <definition>VmaPool VMA_NULLABLE VmaAllocationCreateInfo::pool</definition>
        <argsstring></argsstring>
        <name>pool</name>
        <qualifiedname>VmaAllocationCreateInfo::pool</qualifiedname>
        <briefdescription>
<para>Pool that this allocation should be created in. </para>
        </briefdescription>
        <detaileddescription>
<para>Leave `VK_NULL_HANDLE` to allocate from default pool. If not null, members: `usage`, `requiredFlags`, `preferredFlags`, `memoryTypeBits` are ignored. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" line="1254" column="26" bodyfile="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" bodystart="1254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_vma_allocation_create_info_1a74e2eb74b3772b657c59473ce605058a" prot="public" static="no" mutable="no">
        <type>void *<ref refid="vk__mem__alloc_8h_1a3ff043960766509fbba947bc2c68bdb6" kindref="member">VMA_NULLABLE</ref></type>
        <definition>void* VMA_NULLABLE VmaAllocationCreateInfo::pUserData</definition>
        <argsstring></argsstring>
        <name>pUserData</name>
        <qualifiedname>VmaAllocationCreateInfo::pUserData</qualifiedname>
        <briefdescription>
<para>Custom general-purpose pointer that will be stored in <ref refid="struct_vma_allocation" kindref="compound">VmaAllocation</ref>, can be read as <ref refid="struct_vma_allocation_info_1ad0ea9d64dd733ffd7beff7af6d289ad0" kindref="member">VmaAllocationInfo::pUserData</ref> and changed using <ref refid="group__group__alloc_1gac1f392a3c70a647f0c53a9ddaa7a6f14" kindref="member">vmaSetAllocationUserData()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>If <ref refid="group__group__alloc_1ggad9889c10c798b040d59c92f257cae597aa6f24f821cd6a7c5e4a443f7bf59c520" kindref="member">VMA_ALLOCATION_CREATE_USER_DATA_COPY_STRING_BIT</ref> is used, it must be either null or pointer to a null-terminated string. The string will be then copied to internal buffer, so it doesn&apos;t need to be valid after allocation call. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" line="1261" column="23" bodyfile="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" bodystart="1261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_vma_allocation_create_info_1a983d39e1a2e63649d78a960aa2fdd0f7" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float VmaAllocationCreateInfo::priority</definition>
        <argsstring></argsstring>
        <name>priority</name>
        <qualifiedname>VmaAllocationCreateInfo::priority</qualifiedname>
        <briefdescription>
<para>A floating-point value between 0 and 1, indicating the priority of the allocation relative to other memory allocations. </para>
        </briefdescription>
        <detaileddescription>
<para>It is used only when <ref refid="group__group__init_1gga4f87c9100d154a65a4ad495f7763cf7caffdd7a5169be3dbd7cbf6b3619e4f78a" kindref="member">VMA_ALLOCATOR_CREATE_EXT_MEMORY_PRIORITY_BIT</ref> flag was used during creation of the <ref refid="struct_vma_allocator" kindref="compound">VmaAllocator</ref> object and this allocation ends up as dedicated or is explicitly forced as dedicated using <ref refid="group__group__alloc_1ggad9889c10c798b040d59c92f257cae597a3fc311d855c2ff53f1090ef5c722b38f" kindref="member">VMA_ALLOCATION_CREATE_DEDICATED_MEMORY_BIT</ref>. Otherwise, it has the priority of a memory block where it is placed and this variable is ignored. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" line="1268" column="11" bodyfile="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" bodystart="1268" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Parameters of new <ref refid="struct_vma_allocation" kindref="compound">VmaAllocation</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>To be used with functions like <ref refid="group__group__alloc_1gae9773fe0ef8582e23136d2d83c336ab9" kindref="member">vmaCreateBuffer()</ref>, <ref refid="group__group__alloc_1gaa76142ae43535c862ad9e194a6e38aaa" kindref="member">vmaCreateImage()</ref>, and many others. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>VmaAllocationCreateInfo</label>
        <link refid="struct_vma_allocation_create_info"/>
        <childnode refid="2" relation="usage">
          <edgelabel>pool</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>VmaPool</label>
        <link refid="struct_vma_pool"/>
      </node>
    </collaborationgraph>
    <location file="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" line="1221" column="1" bodyfile="shadow-engine/shadow-renderer/inc/vulkan/vk_mem_alloc.h" bodystart="1222" bodyend="1269"/>
    <listofallmembers>
      <member refid="struct_vma_allocation_create_info_1add09658ac14fe290ace25470ddd6d41b" prot="public" virt="non-virtual"><scope>VmaAllocationCreateInfo</scope><name>flags</name></member>
      <member refid="struct_vma_allocation_create_info_1a3bf940c0271d85d6ba32a4d820075055" prot="public" virt="non-virtual"><scope>VmaAllocationCreateInfo</scope><name>memoryTypeBits</name></member>
      <member refid="struct_vma_allocation_create_info_1ad5aa903b9be1fa934abf2dd6c650fca6" prot="public" virt="non-virtual"><scope>VmaAllocationCreateInfo</scope><name>pool</name></member>
      <member refid="struct_vma_allocation_create_info_1a7fe8d81a1ad10b2a2faacacee5b15d6d" prot="public" virt="non-virtual"><scope>VmaAllocationCreateInfo</scope><name>preferredFlags</name></member>
      <member refid="struct_vma_allocation_create_info_1a983d39e1a2e63649d78a960aa2fdd0f7" prot="public" virt="non-virtual"><scope>VmaAllocationCreateInfo</scope><name>priority</name></member>
      <member refid="struct_vma_allocation_create_info_1a74e2eb74b3772b657c59473ce605058a" prot="public" virt="non-virtual"><scope>VmaAllocationCreateInfo</scope><name>pUserData</name></member>
      <member refid="struct_vma_allocation_create_info_1a9166390303ff42d783305bc31c2b6b90" prot="public" virt="non-virtual"><scope>VmaAllocationCreateInfo</scope><name>requiredFlags</name></member>
      <member refid="struct_vma_allocation_create_info_1accb8b06b1f677d858cb9af20705fa910" prot="public" virt="non-virtual"><scope>VmaAllocationCreateInfo</scope><name>usage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
