<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classvlkx_1_1_image_staging_buffer" kind="class" language="C++" prot="public">
    <compoundname>vlkx::ImageStagingBuffer</compoundname>
    <basecompoundref refid="classvlkx_1_1_staging_buffer" prot="public" virt="non-virtual">vlkx::StagingBuffer</basecompoundref>
    <includes refid="_image_8h" local="no">Image.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvlkx_1_1_image_staging_buffer_1a3cd423118c62e29470c354dc236911e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vlkx::ImageStagingBuffer::ImageStagingBuffer</definition>
        <argsstring>(const ImageStagingBuffer &amp;)=delete</argsstring>
        <name>ImageStagingBuffer</name>
        <qualifiedname>vlkx::ImageStagingBuffer::ImageStagingBuffer</qualifiedname>
        <param>
          <type>const <ref refid="classvlkx_1_1_image_staging_buffer" kindref="compound">ImageStagingBuffer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Image.h" line="62" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_image_staging_buffer_1ad9b662adef19fab19dd5626b4f055eaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvlkx_1_1_image_staging_buffer" kindref="compound">ImageStagingBuffer</ref> &amp;</type>
        <definition>ImageStagingBuffer &amp; vlkx::ImageStagingBuffer::operator=</definition>
        <argsstring>(const ImageStagingBuffer &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>vlkx::ImageStagingBuffer::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classvlkx_1_1_image_staging_buffer" kindref="compound">ImageStagingBuffer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Image.h" line="63" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_image_staging_buffer_1a0c6f5888796d7817a6e21bd92e7290df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vlkx::ImageStagingBuffer::copy</definition>
        <argsstring>(const VkImage &amp;target, const VkExtent3D &amp;extent, uint32_t layers) const</argsstring>
        <name>copy</name>
        <qualifiedname>vlkx::ImageStagingBuffer::copy</qualifiedname>
        <param>
          <type>const VkImage &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const VkExtent3D &amp;</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>layers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Image.h" line="65" column="14" bodyfile="shadow-engine/shadow-renderer/src/vulkan/abstraction/Image.cpp" bodystart="274" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_image_staging_buffer_1a683dc1c732c3bf22ee4e0c25e3bb9877" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vlkx::StagingBuffer::StagingBuffer</definition>
        <argsstring>(const BulkCopyMeta &amp;copyMeta)</argsstring>
        <name>StagingBuffer</name>
        <qualifiedname>vlkx::ImageStagingBuffer::StagingBuffer</qualifiedname>
        <param>
          <type>const <ref refid="structvlkx_1_1_buffer_1_1_bulk_copy_meta" kindref="compound">BulkCopyMeta</ref> &amp;</type>
          <declname>copyMeta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Image.h" line="60" column="9" bodyfile="shadow-engine/shadow-renderer/src/vulkan/abstraction/Buffer.cpp" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_image_staging_buffer_1a20026e42c12d5fbb85d45f8e91e9ba3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vlkx::StagingBuffer::StagingBuffer</definition>
        <argsstring>(const StagingBuffer &amp;)=delete</argsstring>
        <name>StagingBuffer</name>
        <qualifiedname>vlkx::ImageStagingBuffer::StagingBuffer</qualifiedname>
        <param>
          <type>const <ref refid="classvlkx_1_1_staging_buffer" kindref="compound">StagingBuffer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Image.h" line="60" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>vlkx::Buffer</label>
        <link refid="classvlkx_1_1_buffer"/>
      </node>
      <node id="3">
        <label>vlkx::DataBuffer</label>
        <link refid="classvlkx_1_1_data_buffer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>vlkx::ImageStagingBuffer</label>
        <link refid="classvlkx_1_1_image_staging_buffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>vlkx::StagingBuffer</label>
        <link refid="classvlkx_1_1_staging_buffer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>vlkx::Buffer</label>
        <link refid="classvlkx_1_1_buffer"/>
      </node>
      <node id="3">
        <label>vlkx::DataBuffer</label>
        <link refid="classvlkx_1_1_data_buffer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>vlkx::ImageStagingBuffer</label>
        <link refid="classvlkx_1_1_image_staging_buffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>vlkx::StagingBuffer</label>
        <link refid="classvlkx_1_1_staging_buffer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Image.h" line="58" column="5" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Image.h" bodystart="58" bodyend="66"/>
    <listofallmembers>
      <member refid="classvlkx_1_1_data_buffer_1a8ad640258cbc9aa645ed68e3c320af99" prot="protected" virt="non-virtual"><scope>vlkx::ImageStagingBuffer</scope><name>Buffer</name></member>
      <member refid="classvlkx_1_1_data_buffer_1a055bf8f2da8b0c7084493579a2f27ccb" prot="protected" virt="non-virtual"><scope>vlkx::ImageStagingBuffer</scope><name>Buffer</name></member>
      <member refid="classvlkx_1_1_image_staging_buffer_1a0c6f5888796d7817a6e21bd92e7290df" prot="public" virt="non-virtual"><scope>vlkx::ImageStagingBuffer</scope><name>copy</name></member>
      <member refid="classvlkx_1_1_staging_buffer_1a75488a173a2aec4715172f51ab4bc472" prot="public" virt="non-virtual" ambiguityscope="vlkx::StagingBuffer::"><scope>vlkx::ImageStagingBuffer</scope><name>copy</name></member>
      <member refid="classvlkx_1_1_data_buffer_1ad6b6ba2e5dd942b42f66a3f5c04e87a3" prot="public" virt="non-virtual"><scope>vlkx::ImageStagingBuffer</scope><name>DataBuffer</name></member>
      <member refid="classvlkx_1_1_data_buffer_1a3abb23c2d7be5c18b266478202796c9b" prot="public" virt="non-virtual"><scope>vlkx::ImageStagingBuffer</scope><name>DataBuffer</name></member>
      <member refid="classvlkx_1_1_data_buffer_1a0b3ac1c5f2d714165c994f65e18b6604" prot="protected" virt="non-virtual"><scope>vlkx::ImageStagingBuffer</scope><name>get</name></member>
      <member refid="classvlkx_1_1_data_buffer_1a9e10436c90954e0f4e213af704e10707" prot="protected" virt="non-virtual"><scope>vlkx::ImageStagingBuffer</scope><name>getBuffer</name></member>
      <member refid="classvlkx_1_1_image_staging_buffer_1a3cd423118c62e29470c354dc236911e6" prot="public" virt="non-virtual"><scope>vlkx::ImageStagingBuffer</scope><name>ImageStagingBuffer</name></member>
      <member refid="classvlkx_1_1_image_staging_buffer_1ad9b662adef19fab19dd5626b4f055eaa" prot="public" virt="non-virtual"><scope>vlkx::ImageStagingBuffer</scope><name>operator=</name></member>
      <member refid="classvlkx_1_1_staging_buffer_1add31b32562c544033de76ea7f67459c4" prot="public" virt="non-virtual" ambiguityscope="vlkx::StagingBuffer::"><scope>vlkx::ImageStagingBuffer</scope><name>operator=</name></member>
      <member refid="classvlkx_1_1_data_buffer_1a0caf832cd047de702e77433a3e97dc8d" prot="public" virt="non-virtual" ambiguityscope="vlkx::DataBuffer::"><scope>vlkx::ImageStagingBuffer</scope><name>operator=</name></member>
      <member refid="classvlkx_1_1_buffer_1a9971cfc28a88cebf00d2642baa5cd72e" prot="public" virt="non-virtual" ambiguityscope="vlkx::Buffer::"><scope>vlkx::ImageStagingBuffer</scope><name>operator=</name></member>
      <member refid="classvlkx_1_1_data_buffer_1ab4e03d32dd898176c66e13d19d7d2fa8" prot="protected" virt="non-virtual"><scope>vlkx::ImageStagingBuffer</scope><name>setBuffer</name></member>
      <member refid="classvlkx_1_1_image_staging_buffer_1a683dc1c732c3bf22ee4e0c25e3bb9877" prot="public" virt="non-virtual"><scope>vlkx::ImageStagingBuffer</scope><name>StagingBuffer</name></member>
      <member refid="classvlkx_1_1_image_staging_buffer_1a20026e42c12d5fbb85d45f8e91e9ba3d" prot="public" virt="non-virtual"><scope>vlkx::ImageStagingBuffer</scope><name>StagingBuffer</name></member>
      <member refid="classvlkx_1_1_buffer_1a5ad6564545b79d1ce612ebf2b6fc44f7" prot="public" virt="virtual"><scope>vlkx::ImageStagingBuffer</scope><name>~Buffer</name></member>
      <member refid="classvlkx_1_1_data_buffer_1abe2a28ce8e68a76cda222d51bfca0ac0" prot="public" virt="non-virtual"><scope>vlkx::ImageStagingBuffer</scope><name>~DataBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
