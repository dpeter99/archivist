<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base" kind="struct" language="C++" prot="public">
    <compoundname>Catch::Matchers::Impl::MatcherBase</compoundname>
    <basecompoundref refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base" prot="public" virt="non-virtual">Catch::Matchers::Impl::MatcherUntypedBase</basecompoundref>
    <basecompoundref refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_method" prot="public" virt="non-virtual">Catch::Matchers::Impl::MatcherMethod&lt; T &gt;</basecompoundref>
    <derivedcompoundref refid="class_catch_1_1_matchers_1_1_exception_1_1_exception_message_matcher" prot="public" virt="non-virtual">Catch::Matchers::Exception::ExceptionMessageMatcher</derivedcompoundref>
    <derivedcompoundref refid="struct_catch_1_1_matchers_1_1_floating_1_1_within_abs_matcher" prot="public" virt="non-virtual">Catch::Matchers::Floating::WithinAbsMatcher</derivedcompoundref>
    <derivedcompoundref refid="struct_catch_1_1_matchers_1_1_floating_1_1_within_rel_matcher" prot="public" virt="non-virtual">Catch::Matchers::Floating::WithinRelMatcher</derivedcompoundref>
    <derivedcompoundref refid="struct_catch_1_1_matchers_1_1_floating_1_1_within_ulps_matcher" prot="public" virt="non-virtual">Catch::Matchers::Floating::WithinUlpsMatcher</derivedcompoundref>
    <derivedcompoundref refid="class_catch_1_1_matchers_1_1_generic_1_1_predicate_matcher" prot="public" virt="non-virtual">Catch::Matchers::Generic::PredicateMatcher&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="struct_catch_1_1_matchers_1_1_std_string_1_1_regex_matcher" prot="public" virt="non-virtual">Catch::Matchers::StdString::RegexMatcher</derivedcompoundref>
    <derivedcompoundref refid="struct_catch_1_1_matchers_1_1_std_string_1_1_string_matcher_base" prot="public" virt="non-virtual">Catch::Matchers::StdString::StringMatcherBase</derivedcompoundref>
    <derivedcompoundref refid="struct_catch_1_1_matchers_1_1_vector_1_1_approx_matcher" prot="public" virt="non-virtual">Catch::Matchers::Vector::ApproxMatcher&lt; T, AllocComp, AllocMatch &gt;</derivedcompoundref>
    <derivedcompoundref refid="struct_catch_1_1_matchers_1_1_vector_1_1_contains_element_matcher" prot="public" virt="non-virtual">Catch::Matchers::Vector::ContainsElementMatcher&lt; T, Alloc &gt;</derivedcompoundref>
    <derivedcompoundref refid="struct_catch_1_1_matchers_1_1_vector_1_1_contains_matcher" prot="public" virt="non-virtual">Catch::Matchers::Vector::ContainsMatcher&lt; T, AllocComp, AllocMatch &gt;</derivedcompoundref>
    <derivedcompoundref refid="struct_catch_1_1_matchers_1_1_vector_1_1_equals_matcher" prot="public" virt="non-virtual">Catch::Matchers::Vector::EqualsMatcher&lt; T, AllocComp, AllocMatch &gt;</derivedcompoundref>
    <derivedcompoundref refid="struct_catch_1_1_matchers_1_1_vector_1_1_unordered_equals_matcher" prot="public" virt="non-virtual">Catch::Matchers::Vector::UnorderedEqualsMatcher&lt; T, AllocComp, AllocMatch &gt;</derivedcompoundref>
    <includes refid="catch_8hpp" local="no">catch.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base_1aae4a9827601f6f26a52126e193d012de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_catch_1_1_matchers_1_1_impl_1_1_match_all_of" kindref="compound">MatchAllOf</ref>&lt; T &gt;</type>
        <definition>MatchAllOf&lt; T &gt; Catch::Matchers::Impl::MatcherBase&lt; T &gt;::operator&amp;&amp;</definition>
        <argsstring>(MatcherBase const &amp;other) const</argsstring>
        <name>operator&amp;&amp;</name>
        <qualifiedname>Catch::Matchers::Impl::MatcherBase::operator&amp;&amp;</qualifiedname>
        <param>
          <type><ref refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base" kindref="compound">MatcherBase</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="3282" column="24" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="3371" bodyend="3373"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base_1a5f8542b8f1567a6f9c65d0a6da7b679b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_catch_1_1_matchers_1_1_impl_1_1_match_any_of" kindref="compound">MatchAnyOf</ref>&lt; T &gt;</type>
        <definition>MatchAnyOf&lt; T &gt; Catch::Matchers::Impl::MatcherBase&lt; T &gt;::operator||</definition>
        <argsstring>(MatcherBase const &amp;other) const</argsstring>
        <name>operator||</name>
        <qualifiedname>Catch::Matchers::Impl::MatcherBase::operator||</qualifiedname>
        <param>
          <type><ref refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base" kindref="compound">MatcherBase</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="3283" column="24" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="3375" bodyend="3377"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base_1a5bb94bf2ff5c7ef73b7c11eb173bdf3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_catch_1_1_matchers_1_1_impl_1_1_match_not_of" kindref="compound">MatchNotOf</ref>&lt; T &gt;</type>
        <definition>MatchNotOf&lt; T &gt; Catch::Matchers::Impl::MatcherBase&lt; T &gt;::operator!</definition>
        <argsstring>() const</argsstring>
        <name>operator!</name>
        <qualifiedname>Catch::Matchers::Impl::MatcherBase::operator!</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="3284" column="24" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="3379" bodyend="3381"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>Catch::Matchers::Exception::ExceptionMessageMatcher&lt; std::exception &gt;</label>
        <link refid="class_catch_1_1_matchers_1_1_exception_1_1_exception_message_matcher"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Catch::Matchers::Floating::WithinAbsMatcher&lt; double &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_floating_1_1_within_abs_matcher"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Catch::Matchers::Floating::WithinRelMatcher&lt; double &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_floating_1_1_within_rel_matcher"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Catch::Matchers::Floating::WithinUlpsMatcher&lt; double &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_floating_1_1_within_ulps_matcher"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>Catch::Matchers::Generic::PredicateMatcher&lt; T &gt;</label>
        <link refid="class_catch_1_1_matchers_1_1_generic_1_1_predicate_matcher"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Catch::Matchers::Impl::MatcherBase&lt; T &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Catch::Matchers::Impl::MatcherUntypedBase</label>
        <link refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base"/>
      </node>
      <node id="11">
        <label>Catch::Matchers::StdString::ContainsMatcher</label>
        <link refid="struct_catch_1_1_matchers_1_1_std_string_1_1_contains_matcher"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>Catch::Matchers::StdString::EndsWithMatcher</label>
        <link refid="struct_catch_1_1_matchers_1_1_std_string_1_1_ends_with_matcher"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>Catch::Matchers::StdString::EqualsMatcher</label>
        <link refid="struct_catch_1_1_matchers_1_1_std_string_1_1_equals_matcher"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>Catch::Matchers::StdString::RegexMatcher&lt; std::string &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_std_string_1_1_regex_matcher"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>Catch::Matchers::StdString::StartsWithMatcher</label>
        <link refid="struct_catch_1_1_matchers_1_1_std_string_1_1_starts_with_matcher"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>Catch::Matchers::StdString::StringMatcherBase&lt; std::string &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_std_string_1_1_string_matcher_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>Catch::Matchers::Vector::ApproxMatcher&lt; T, AllocComp, AllocMatch &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_vector_1_1_approx_matcher"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>Catch::Matchers::Vector::ContainsElementMatcher&lt; T, Alloc &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_vector_1_1_contains_element_matcher"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>Catch::Matchers::Vector::ContainsMatcher&lt; T, AllocComp, AllocMatch &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_vector_1_1_contains_matcher"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>Catch::Matchers::Vector::EqualsMatcher&lt; T, AllocComp, AllocMatch &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_vector_1_1_equals_matcher"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>Catch::Matchers::Vector::UnorderedEqualsMatcher&lt; T, AllocComp, AllocMatch &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_vector_1_1_unordered_equals_matcher"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Catch::Matchers::Impl::MatcherMethod&lt; T &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_method"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Catch::Matchers::Impl::MatcherBase&lt; T &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Catch::Matchers::Impl::MatcherUntypedBase</label>
        <link refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base"/>
      </node>
      <node id="3">
        <label>Catch::Matchers::Impl::MatcherMethod&lt; T &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_method"/>
      </node>
    </collaborationgraph>
    <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="3280" column="9" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="3280" bodyend="3285"/>
    <listofallmembers>
      <member refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a91d3a907dbfcbb596077df24f6e11fe2" prot="protected" virt="pure-virtual"><scope>Catch::Matchers::Impl::MatcherBase</scope><name>describe</name></member>
      <member refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a951095c462657e7097a9a6dc4dde813f" prot="protected" virt="non-virtual"><scope>Catch::Matchers::Impl::MatcherBase</scope><name>m_cachedToString</name></member>
      <member refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_method_1ae0920ff9e817acf08e1bb0cbcb044e30" prot="public" virt="pure-virtual"><scope>Catch::Matchers::Impl::MatcherBase</scope><name>match</name></member>
      <member refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1ab65764dc245d85e2b268d3be870b650a" prot="public" virt="non-virtual"><scope>Catch::Matchers::Impl::MatcherBase</scope><name>MatcherUntypedBase</name></member>
      <member refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a985fd3c3ffcc9f2e8dc7a330130040b0" prot="public" virt="non-virtual"><scope>Catch::Matchers::Impl::MatcherBase</scope><name>MatcherUntypedBase</name></member>
      <member refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base_1a5bb94bf2ff5c7ef73b7c11eb173bdf3b" prot="public" virt="non-virtual"><scope>Catch::Matchers::Impl::MatcherBase</scope><name>operator!</name></member>
      <member refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base_1aae4a9827601f6f26a52126e193d012de" prot="public" virt="non-virtual"><scope>Catch::Matchers::Impl::MatcherBase</scope><name>operator&amp;&amp;</name></member>
      <member refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a1d446c018ecedb2ef633d9426d5f7914" prot="public" virt="non-virtual"><scope>Catch::Matchers::Impl::MatcherBase</scope><name>operator=</name></member>
      <member refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base_1a5f8542b8f1567a6f9c65d0a6da7b679b" prot="public" virt="non-virtual"><scope>Catch::Matchers::Impl::MatcherBase</scope><name>operator||</name></member>
      <member refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a5982c7c80ca71dfe2298babadad7a453" prot="public" virt="non-virtual"><scope>Catch::Matchers::Impl::MatcherBase</scope><name>toString</name></member>
      <member refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a853be93ce33f71b5abede38081c79e9d" prot="protected" virt="virtual"><scope>Catch::Matchers::Impl::MatcherBase</scope><name>~MatcherUntypedBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
