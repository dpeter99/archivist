<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="struct_catch_1_1_auto_reg" kind="struct" language="C++" prot="public">
    <compoundname>Catch::AutoReg</compoundname>
    <basecompoundref refid="class_catch_1_1_non_copyable" prot="public" virt="non-virtual">Catch::NonCopyable</basecompoundref>
    <includes refid="catch_8hpp" local="no">catch.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_catch_1_1_auto_reg_1a7eba02fb9d80b9896bf5a6517369af28" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Catch::AutoReg::AutoReg</definition>
        <argsstring>(ITestInvoker *invoker, SourceLineInfo const &amp;lineInfo, StringRef const &amp;classOrMethod, NameAndTags const &amp;nameAndTags) noexcept</argsstring>
        <name>AutoReg</name>
        <qualifiedname>Catch::AutoReg::AutoReg</qualifiedname>
        <param>
          <type><ref refid="struct_catch_1_1_i_test_invoker" kindref="compound">ITestInvoker</ref> *</type>
          <declname>invoker</declname>
        </param>
        <param>
          <type><ref refid="struct_catch_1_1_source_line_info" kindref="compound">SourceLineInfo</ref> const &amp;</type>
          <declname>lineInfo</declname>
        </param>
        <param>
          <type><ref refid="class_catch_1_1_string_ref" kindref="compound">StringRef</ref> const &amp;</type>
          <declname>classOrMethod</declname>
        </param>
        <param>
          <type><ref refid="struct_catch_1_1_name_and_tags" kindref="compound">NameAndTags</ref> const &amp;</type>
          <declname>nameAndTags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="987" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_auto_reg_1a3cdb53f1e5ff115310f3372bebe198f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Catch::AutoReg::~AutoReg</definition>
        <argsstring>()</argsstring>
        <name>~AutoReg</name>
        <qualifiedname>Catch::AutoReg::~AutoReg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="988" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Catch::AutoReg</label>
        <link refid="struct_catch_1_1_auto_reg"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Catch::NonCopyable</label>
        <link refid="class_catch_1_1_non_copyable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Catch::AutoReg</label>
        <link refid="struct_catch_1_1_auto_reg"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Catch::NonCopyable</label>
        <link refid="class_catch_1_1_non_copyable"/>
      </node>
    </collaborationgraph>
    <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="986" column="1" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="986" bodyend="989"/>
    <listofallmembers>
      <member refid="struct_catch_1_1_auto_reg_1a7eba02fb9d80b9896bf5a6517369af28" prot="public" virt="non-virtual"><scope>Catch::AutoReg</scope><name>AutoReg</name></member>
      <member refid="class_catch_1_1_non_copyable_1a4b492dd5753f9952350fb64dc6cb9fe2" prot="protected" virt="non-virtual"><scope>Catch::AutoReg</scope><name>NonCopyable</name></member>
      <member refid="struct_catch_1_1_auto_reg_1a3cdb53f1e5ff115310f3372bebe198f1" prot="public" virt="non-virtual"><scope>Catch::AutoReg</scope><name>~AutoReg</name></member>
      <member refid="class_catch_1_1_non_copyable_1a81254677280fef337eb4a676e91e3293" prot="protected" virt="virtual"><scope>Catch::AutoReg</scope><name>~NonCopyable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
