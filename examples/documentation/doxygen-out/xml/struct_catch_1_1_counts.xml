<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="struct_catch_1_1_counts" kind="struct" language="C++" prot="public">
    <compoundname>Catch::Counts</compoundname>
    <includes refid="catch_8hpp" local="no">catch.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_catch_1_1_counts_1ad28daaf3de28006400208b6dd0c631e6" prot="public" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t Catch::Counts::passed</definition>
        <argsstring></argsstring>
        <name>passed</name>
        <qualifiedname>Catch::Counts::passed</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2837" column="21" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2837" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_catch_1_1_counts_1a19982a3817a3bc2c07f0290e71f497a3" prot="public" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t Catch::Counts::failed</definition>
        <argsstring></argsstring>
        <name>failed</name>
        <qualifiedname>Catch::Counts::failed</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2838" column="21" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2838" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_catch_1_1_counts_1ac090973a2ff51394cd452718e75c073e" prot="public" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t Catch::Counts::failedButOk</definition>
        <argsstring></argsstring>
        <name>failedButOk</name>
        <qualifiedname>Catch::Counts::failedButOk</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2839" column="21" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2839" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_catch_1_1_counts_1aaa10666f559057e3e860d2a5a6fae4c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_catch_1_1_counts" kindref="compound">Counts</ref></type>
        <definition>Counts Catch::Counts::operator-</definition>
        <argsstring>(Counts const &amp;other) const</argsstring>
        <name>operator-</name>
        <qualifiedname>Catch::Counts::operator-</qualifiedname>
        <param>
          <type><ref refid="struct_catch_1_1_counts" kindref="compound">Counts</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2830" column="16"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_counts_1a0c4a2295b896e189cdf4663377e156df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_catch_1_1_counts" kindref="compound">Counts</ref> &amp;</type>
        <definition>Counts &amp; Catch::Counts::operator+=</definition>
        <argsstring>(Counts const &amp;other)</argsstring>
        <name>operator+=</name>
        <qualifiedname>Catch::Counts::operator+=</qualifiedname>
        <param>
          <type><ref refid="struct_catch_1_1_counts" kindref="compound">Counts</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2831" column="16"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_counts_1a94f969c09cf52d1339c085c9603cd1d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t Catch::Counts::total</definition>
        <argsstring>() const</argsstring>
        <name>total</name>
        <qualifiedname>Catch::Counts::total</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2833" column="21"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_counts_1a84999490e0ecaa3de5e121bf48eda1b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Catch::Counts::allPassed</definition>
        <argsstring>() const</argsstring>
        <name>allPassed</name>
        <qualifiedname>Catch::Counts::allPassed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2834" column="14"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_counts_1a33bd996e016030155b99fe1c51c08991" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Catch::Counts::allOk</definition>
        <argsstring>() const</argsstring>
        <name>allOk</name>
        <qualifiedname>Catch::Counts::allOk</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2835" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2829" column="5" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2829" bodyend="2840"/>
    <listofallmembers>
      <member refid="struct_catch_1_1_counts_1a33bd996e016030155b99fe1c51c08991" prot="public" virt="non-virtual"><scope>Catch::Counts</scope><name>allOk</name></member>
      <member refid="struct_catch_1_1_counts_1a84999490e0ecaa3de5e121bf48eda1b3" prot="public" virt="non-virtual"><scope>Catch::Counts</scope><name>allPassed</name></member>
      <member refid="struct_catch_1_1_counts_1a19982a3817a3bc2c07f0290e71f497a3" prot="public" virt="non-virtual"><scope>Catch::Counts</scope><name>failed</name></member>
      <member refid="struct_catch_1_1_counts_1ac090973a2ff51394cd452718e75c073e" prot="public" virt="non-virtual"><scope>Catch::Counts</scope><name>failedButOk</name></member>
      <member refid="struct_catch_1_1_counts_1a0c4a2295b896e189cdf4663377e156df" prot="public" virt="non-virtual"><scope>Catch::Counts</scope><name>operator+=</name></member>
      <member refid="struct_catch_1_1_counts_1aaa10666f559057e3e860d2a5a6fae4c4" prot="public" virt="non-virtual"><scope>Catch::Counts</scope><name>operator-</name></member>
      <member refid="struct_catch_1_1_counts_1ad28daaf3de28006400208b6dd0c631e6" prot="public" virt="non-virtual"><scope>Catch::Counts</scope><name>passed</name></member>
      <member refid="struct_catch_1_1_counts_1a94f969c09cf52d1339c085c9603cd1d3" prot="public" virt="non-virtual"><scope>Catch::Counts</scope><name>total</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
