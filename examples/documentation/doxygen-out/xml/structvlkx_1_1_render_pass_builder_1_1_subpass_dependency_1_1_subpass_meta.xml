<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="structvlkx_1_1_render_pass_builder_1_1_subpass_dependency_1_1_subpass_meta" kind="struct" language="C++" prot="public">
    <compoundname>vlkx::RenderPassBuilder::SubpassDependency::SubpassMeta</compoundname>
    <includes refid="_generic_render_pass_8h" local="no">GenericRenderPass.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvlkx_1_1_render_pass_builder_1_1_subpass_dependency_1_1_subpass_meta_1aa44ef61cba9adabcc126eccb70c753f5" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t vlkx::RenderPassBuilder::SubpassDependency::SubpassMeta::index</definition>
        <argsstring></argsstring>
        <name>index</name>
        <qualifiedname>vlkx::RenderPassBuilder::SubpassDependency::SubpassMeta::index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Index of the subpass. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="131" column="26" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvlkx_1_1_render_pass_builder_1_1_subpass_dependency_1_1_subpass_meta_1af4943ff5f708674a5bfd4d96b44976ac" prot="public" static="no" mutable="no">
        <type>VkPipelineStageFlags</type>
        <definition>VkPipelineStageFlags vlkx::RenderPassBuilder::SubpassDependency::SubpassMeta::stage</definition>
        <argsstring></argsstring>
        <name>stage</name>
        <qualifiedname>vlkx::RenderPassBuilder::SubpassDependency::SubpassMeta::stage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Describes how we want to modify the data passed to us from the last subpass. Will change how the next subpass will wait for the completion of this subpass, if at all.</para>
<para>VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT: read/write to the color attachment</para>
<para>VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT: VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT: read/write to the depth or stencil attachment</para>
<para>VK_PIPELINE_STAGE_VERTEX_SHADER_BIT: VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT: read all attachments </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="149" column="38" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvlkx_1_1_render_pass_builder_1_1_subpass_dependency_1_1_subpass_meta_1a65e641cab42afd4e6eb7e114a1edb82c" prot="public" static="no" mutable="no">
        <type>VkAccessFlags</type>
        <definition>VkAccessFlags vlkx::RenderPassBuilder::SubpassDependency::SubpassMeta::access</definition>
        <argsstring></argsstring>
        <name>access</name>
        <qualifiedname>vlkx::RenderPassBuilder::SubpassDependency::SubpassMeta::access</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Describes how we want to synchronize with the subpass after this one.</para>
<para>VK_ACCESS_SHADER_READ_BIT: VK_ACCESS_SHADER_WRITE_BIT: read a texture or write to a color buffer</para>
<para>VK_ACCESS_COLOR_ATTACHMENT_READ_BIT: VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT: VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT: VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT: read/write to an attachment.</para>
<para>VK_ACCESS_INPUT_ATTACHMENT_READ_BIT: for accessing the inputAttachment of a subpass.</para>
<para>0: do not write, but the next subpass will. Will automatically barrier the render pass. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="171" column="31" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Defines some metadata about the subpass. Contains the index of the subpass, how it will use data from the last pass, and what exactly it will do. </para>
    </detaileddescription>
    <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="127" column="13" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="127" bodyend="172"/>
    <listofallmembers>
      <member refid="structvlkx_1_1_render_pass_builder_1_1_subpass_dependency_1_1_subpass_meta_1a65e641cab42afd4e6eb7e114a1edb82c" prot="public" virt="non-virtual"><scope>vlkx::RenderPassBuilder::SubpassDependency::SubpassMeta</scope><name>access</name></member>
      <member refid="structvlkx_1_1_render_pass_builder_1_1_subpass_dependency_1_1_subpass_meta_1aa44ef61cba9adabcc126eccb70c753f5" prot="public" virt="non-virtual"><scope>vlkx::RenderPassBuilder::SubpassDependency::SubpassMeta</scope><name>index</name></member>
      <member refid="structvlkx_1_1_render_pass_builder_1_1_subpass_dependency_1_1_subpass_meta_1af4943ff5f708674a5bfd4d96b44976ac" prot="public" virt="non-virtual"><scope>vlkx::RenderPassBuilder::SubpassDependency::SubpassMeta</scope><name>stage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
