<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classvlkx_1_1_render_pass_builder" kind="class" language="C++" prot="public">
    <compoundname>vlkx::RenderPassBuilder</compoundname>
    <includes refid="_generic_render_pass_8h" local="no">GenericRenderPass.h</includes>
    <innerclass refid="structvlkx_1_1_render_pass_builder_1_1_attachment" prot="public">vlkx::RenderPassBuilder::Attachment</innerclass>
    <innerclass refid="structvlkx_1_1_render_pass_builder_1_1_color_attachment_meta" prot="public">vlkx::RenderPassBuilder::ColorAttachmentMeta</innerclass>
    <innerclass refid="structvlkx_1_1_render_pass_builder_1_1_subpass_attachments" prot="public">vlkx::RenderPassBuilder::SubpassAttachments</innerclass>
    <innerclass refid="structvlkx_1_1_render_pass_builder_1_1_subpass_dependency" prot="public">vlkx::RenderPassBuilder::SubpassDependency</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvlkx_1_1_render_pass_builder_1a4a165b3ec3d7c5bb6ee9809973cc01d5" prot="private" static="no" mutable="no">
        <type>std::optional&lt; int &gt;</type>
        <definition>std::optional&lt;int&gt; vlkx::RenderPassBuilder::framebufferCount</definition>
        <argsstring></argsstring>
        <name>framebufferCount</name>
        <qualifiedname>vlkx::RenderPassBuilder::framebufferCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="226" column="23" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_render_pass_builder_1a7675e893ad13fae89242ec6c2099710c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; VkAttachmentDescription &gt;</type>
        <definition>std::vector&lt;VkAttachmentDescription&gt; vlkx::RenderPassBuilder::attachmentDescriptors</definition>
        <argsstring></argsstring>
        <name>attachmentDescriptors</name>
        <qualifiedname>vlkx::RenderPassBuilder::attachmentDescriptors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="228" column="21" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_render_pass_builder_1a44045039deab2771654a32e7cac5102a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::function&lt; const <ref refid="classvlkx_1_1_image" kindref="compound">Image</ref> &amp;(int idx)&gt; &gt;</type>
        <definition>std::vector&lt;std::function&lt;const Image&amp;(int idx)&gt; &gt; vlkx::RenderPassBuilder::attachmentGetters</definition>
        <argsstring></argsstring>
        <name>attachmentGetters</name>
        <qualifiedname>vlkx::RenderPassBuilder::attachmentGetters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="230" column="21" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_render_pass_builder_1a2e8facbf1bd79b905bc6e98091fe2531" prot="private" static="no" mutable="no">
        <type>std::vector&lt; VkClearValue &gt;</type>
        <definition>std::vector&lt;VkClearValue&gt; vlkx::RenderPassBuilder::clearValues</definition>
        <argsstring></argsstring>
        <name>clearValues</name>
        <qualifiedname>vlkx::RenderPassBuilder::clearValues</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="232" column="21" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_render_pass_builder_1a77406bad3d22b38bba46fc658024ce9e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structvlkx_1_1_render_pass_builder_1_1_subpass_attachments" kindref="compound">SubpassAttachments</ref> &gt;</type>
        <definition>std::vector&lt;SubpassAttachments&gt; vlkx::RenderPassBuilder::subpassAttachments</definition>
        <argsstring></argsstring>
        <name>subpassAttachments</name>
        <qualifiedname>vlkx::RenderPassBuilder::subpassAttachments</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="234" column="21" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_render_pass_builder_1a682873d0b29155e5347c155ac815afab" prot="private" static="no" mutable="no">
        <type>std::vector&lt; VkSubpassDependency &gt;</type>
        <definition>std::vector&lt;VkSubpassDependency&gt; vlkx::RenderPassBuilder::subpassDependencies</definition>
        <argsstring></argsstring>
        <name>subpassDependencies</name>
        <qualifiedname>vlkx::RenderPassBuilder::subpassDependencies</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="236" column="21" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classvlkx_1_1_render_pass_builder_1ae41b9e71f5e769e12bfe76876b6c9007" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; VkAttachmentReference &gt;</type>
        <definition>std::vector&lt; VkAttachmentReference &gt; vlkx::RenderPassBuilder::parseColorReferences</definition>
        <argsstring>(std::vector&lt; ColorAttachmentMeta &gt; meta)</argsstring>
        <name>parseColorReferences</name>
        <qualifiedname>vlkx::RenderPassBuilder::parseColorReferences</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="structvlkx_1_1_render_pass_builder_1_1_color_attachment_meta" kindref="compound">ColorAttachmentMeta</ref> &gt;</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a list of VkAttachmentReference that describes the attachments used per subpass. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="194" column="28" bodyfile="shadow-engine/shadow-renderer/src/render/render_pass/GenericRenderPass.cpp" bodystart="128" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_render_pass_builder_1a3f0a64b9a4868accc1a473850fb98fa2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; VkAttachmentReference &gt;</type>
        <definition>std::vector&lt; VkAttachmentReference &gt; vlkx::RenderPassBuilder::parseMutisampling</definition>
        <argsstring>(int colorReferencesCount, std::vector&lt; ColorAttachmentMeta &gt; meta)</argsstring>
        <name>parseMutisampling</name>
        <qualifiedname>vlkx::RenderPassBuilder::parseMutisampling</qualifiedname>
        <param>
          <type>int</type>
          <declname>colorReferencesCount</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="structvlkx_1_1_render_pass_builder_1_1_color_attachment_meta" kindref="compound">ColorAttachmentMeta</ref> &gt;</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a list of VkAttachmentReference that describes the multisampling setup. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="199" column="28" bodyfile="shadow-engine/shadow-renderer/src/render/render_pass/GenericRenderPass.cpp" bodystart="147" bodyend="153"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvlkx_1_1_render_pass_builder_1a81f78bd807664b2f3cef2349198f48c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vlkx::RenderPassBuilder::RenderPassBuilder</definition>
        <argsstring>(const RenderPassBuilder &amp;)=delete</argsstring>
        <name>RenderPassBuilder</name>
        <qualifiedname>vlkx::RenderPassBuilder::RenderPassBuilder</qualifiedname>
        <param>
          <type>const <ref refid="classvlkx_1_1_render_pass_builder" kindref="compound">RenderPassBuilder</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="201" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_render_pass_builder_1a98b2bbb3e27c8061aab816fdb43ce888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvlkx_1_1_render_pass_builder" kindref="compound">RenderPassBuilder</ref> &amp;</type>
        <definition>RenderPassBuilder &amp; vlkx::RenderPassBuilder::operator=</definition>
        <argsstring>(const RenderPassBuilder &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>vlkx::RenderPassBuilder::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classvlkx_1_1_render_pass_builder" kindref="compound">RenderPassBuilder</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="202" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_render_pass_builder_1a7a35ea16eb93c848d05b965d0cfb3b0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vlkx::RenderPassBuilder::~RenderPassBuilder</definition>
        <argsstring>()=default</argsstring>
        <name>~RenderPassBuilder</name>
        <qualifiedname>vlkx::RenderPassBuilder::~RenderPassBuilder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="203" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_render_pass_builder_1a83c5bf76abeb50caeae8b3454bde8145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vlkx::RenderPassBuilder::RenderPassBuilder</definition>
        <argsstring>()=default</argsstring>
        <name>RenderPassBuilder</name>
        <qualifiedname>vlkx::RenderPassBuilder::RenderPassBuilder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="204" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_render_pass_builder_1a7fed138282032b34097abc92fbbcc3f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_generic_render_pass_8h_1a68b39832e0bbd552c45aae02054bbe79" kindref="member">fluent</ref></type>
        <definition>fluent vlkx::RenderPassBuilder::setFramebufferCount</definition>
        <argsstring>(int count)</argsstring>
        <name>setFramebufferCount</name>
        <qualifiedname>vlkx::RenderPassBuilder::setFramebufferCount</qualifiedname>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="210" column="16" bodyfile="shadow-engine/shadow-renderer/src/render/render_pass/GenericRenderPass.cpp" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_render_pass_builder_1a866a9ede38c67cf8efea5b4bac976f3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_generic_render_pass_8h_1a68b39832e0bbd552c45aae02054bbe79" kindref="member">fluent</ref></type>
        <definition>fluent vlkx::RenderPassBuilder::setAttachment</definition>
        <argsstring>(int idx, const Attachment &amp;attachment)</argsstring>
        <name>setAttachment</name>
        <qualifiedname>vlkx::RenderPassBuilder::setAttachment</qualifiedname>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>const <ref refid="structvlkx_1_1_render_pass_builder_1_1_attachment" kindref="compound">Attachment</ref> &amp;</type>
          <declname>attachment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="212" column="16" bodyfile="shadow-engine/shadow-renderer/src/render/render_pass/GenericRenderPass.cpp" bodystart="160" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_render_pass_builder_1adceffa91ec46c04e6e26cc987aa1c883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_generic_render_pass_8h_1a68b39832e0bbd552c45aae02054bbe79" kindref="member">fluent</ref></type>
        <definition>fluent vlkx::RenderPassBuilder::updateAttachmentBacking</definition>
        <argsstring>(int idx, std::function&lt; const Image &amp;(int idx)&gt; &amp;&amp;getBacking)</argsstring>
        <name>updateAttachmentBacking</name>
        <qualifiedname>vlkx::RenderPassBuilder::updateAttachmentBacking</qualifiedname>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>std::function&lt; const <ref refid="classvlkx_1_1_image" kindref="compound">Image</ref> &amp;(int idx)&gt; &amp;&amp;</type>
          <declname>getBacking</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="214" column="16" bodyfile="shadow-engine/shadow-renderer/src/render/render_pass/GenericRenderPass.cpp" bodystart="175" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_render_pass_builder_1a222d0bb88b3877f613e55cc8718bb0e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_generic_render_pass_8h_1a68b39832e0bbd552c45aae02054bbe79" kindref="member">fluent</ref></type>
        <definition>fluent vlkx::RenderPassBuilder::setSubpass</definition>
        <argsstring>(int idx, std::vector&lt; VkAttachmentReference &gt; &amp;&amp;color, std::vector&lt; VkAttachmentReference &gt; &amp;&amp;multisample, VkAttachmentReference &amp;depthStencil)</argsstring>
        <name>setSubpass</name>
        <qualifiedname>vlkx::RenderPassBuilder::setSubpass</qualifiedname>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>std::vector&lt; VkAttachmentReference &gt; &amp;&amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>std::vector&lt; VkAttachmentReference &gt; &amp;&amp;</type>
          <declname>multisample</declname>
        </param>
        <param>
          <type>VkAttachmentReference &amp;</type>
          <declname>depthStencil</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="216" column="16" bodyfile="shadow-engine/shadow-renderer/src/render/render_pass/GenericRenderPass.cpp" bodystart="184" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_render_pass_builder_1a8532c71be2c6c6177c726bb37849409c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_generic_render_pass_8h_1a68b39832e0bbd552c45aae02054bbe79" kindref="member">fluent</ref></type>
        <definition>fluent vlkx::RenderPassBuilder::addDependency</definition>
        <argsstring>(const SubpassDependency &amp;dep)</argsstring>
        <name>addDependency</name>
        <qualifiedname>vlkx::RenderPassBuilder::addDependency</qualifiedname>
        <param>
          <type>const <ref refid="structvlkx_1_1_render_pass_builder_1_1_subpass_dependency" kindref="compound">SubpassDependency</ref> &amp;</type>
          <declname>dep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="218" column="16" bodyfile="shadow-engine/shadow-renderer/src/render/render_pass/GenericRenderPass.cpp" bodystart="199" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_render_pass_builder_1aceadb00171315c3e3f29d41d5acea81e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classvlkx_1_1_render_pass" kindref="compound">vlkx::RenderPass</ref> &gt;</type>
        <definition>std::unique_ptr&lt; RenderPass &gt; vlkx::RenderPassBuilder::build</definition>
        <argsstring>() const</argsstring>
        <name>build</name>
        <qualifiedname>vlkx::RenderPassBuilder::build</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="222" column="26" bodyfile="shadow-engine/shadow-renderer/src/render/render_pass/GenericRenderPass.cpp" bodystart="204" bodyend="234"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A stateful, fluent way to create Render Passes. This object can be stored and reused; when the window size changes, simply set the extent and export a new <ref refid="classvlkx_1_1_render_pass" kindref="compound">RenderPass</ref> to be used in the pipeline.</para>
<para>Allows setting sub-passes, sub-pass dependencies, operations to read and write them, etc. </para>
    </detaileddescription>
    <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="68" column="5" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="68" bodyend="237"/>
    <listofallmembers>
      <member refid="classvlkx_1_1_render_pass_builder_1a8532c71be2c6c6177c726bb37849409c" prot="public" virt="non-virtual"><scope>vlkx::RenderPassBuilder</scope><name>addDependency</name></member>
      <member refid="classvlkx_1_1_render_pass_builder_1a7675e893ad13fae89242ec6c2099710c" prot="private" virt="non-virtual"><scope>vlkx::RenderPassBuilder</scope><name>attachmentDescriptors</name></member>
      <member refid="classvlkx_1_1_render_pass_builder_1a44045039deab2771654a32e7cac5102a" prot="private" virt="non-virtual"><scope>vlkx::RenderPassBuilder</scope><name>attachmentGetters</name></member>
      <member refid="classvlkx_1_1_render_pass_builder_1aceadb00171315c3e3f29d41d5acea81e" prot="public" virt="non-virtual"><scope>vlkx::RenderPassBuilder</scope><name>build</name></member>
      <member refid="classvlkx_1_1_render_pass_builder_1a2e8facbf1bd79b905bc6e98091fe2531" prot="private" virt="non-virtual"><scope>vlkx::RenderPassBuilder</scope><name>clearValues</name></member>
      <member refid="classvlkx_1_1_render_pass_builder_1a4a165b3ec3d7c5bb6ee9809973cc01d5" prot="private" virt="non-virtual"><scope>vlkx::RenderPassBuilder</scope><name>framebufferCount</name></member>
      <member refid="classvlkx_1_1_render_pass_builder_1a98b2bbb3e27c8061aab816fdb43ce888" prot="public" virt="non-virtual"><scope>vlkx::RenderPassBuilder</scope><name>operator=</name></member>
      <member refid="classvlkx_1_1_render_pass_builder_1ae41b9e71f5e769e12bfe76876b6c9007" prot="public" virt="non-virtual"><scope>vlkx::RenderPassBuilder</scope><name>parseColorReferences</name></member>
      <member refid="classvlkx_1_1_render_pass_builder_1a3f0a64b9a4868accc1a473850fb98fa2" prot="public" virt="non-virtual"><scope>vlkx::RenderPassBuilder</scope><name>parseMutisampling</name></member>
      <member refid="classvlkx_1_1_render_pass_builder_1a81f78bd807664b2f3cef2349198f48c1" prot="public" virt="non-virtual"><scope>vlkx::RenderPassBuilder</scope><name>RenderPassBuilder</name></member>
      <member refid="classvlkx_1_1_render_pass_builder_1a83c5bf76abeb50caeae8b3454bde8145" prot="public" virt="non-virtual"><scope>vlkx::RenderPassBuilder</scope><name>RenderPassBuilder</name></member>
      <member refid="classvlkx_1_1_render_pass_builder_1a866a9ede38c67cf8efea5b4bac976f3a" prot="public" virt="non-virtual"><scope>vlkx::RenderPassBuilder</scope><name>setAttachment</name></member>
      <member refid="classvlkx_1_1_render_pass_builder_1a7fed138282032b34097abc92fbbcc3f1" prot="public" virt="non-virtual"><scope>vlkx::RenderPassBuilder</scope><name>setFramebufferCount</name></member>
      <member refid="classvlkx_1_1_render_pass_builder_1a222d0bb88b3877f613e55cc8718bb0e6" prot="public" virt="non-virtual"><scope>vlkx::RenderPassBuilder</scope><name>setSubpass</name></member>
      <member refid="classvlkx_1_1_render_pass_builder_1a77406bad3d22b38bba46fc658024ce9e" prot="private" virt="non-virtual"><scope>vlkx::RenderPassBuilder</scope><name>subpassAttachments</name></member>
      <member refid="classvlkx_1_1_render_pass_builder_1a682873d0b29155e5347c155ac815afab" prot="private" virt="non-virtual"><scope>vlkx::RenderPassBuilder</scope><name>subpassDependencies</name></member>
      <member refid="classvlkx_1_1_render_pass_builder_1adceffa91ec46c04e6e26cc987aa1c883" prot="public" virt="non-virtual"><scope>vlkx::RenderPassBuilder</scope><name>updateAttachmentBacking</name></member>
      <member refid="classvlkx_1_1_render_pass_builder_1a7a35ea16eb93c848d05b965d0cfb3b0a" prot="public" virt="non-virtual"><scope>vlkx::RenderPassBuilder</scope><name>~RenderPassBuilder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
