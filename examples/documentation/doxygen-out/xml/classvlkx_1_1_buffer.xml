<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classvlkx_1_1_buffer" kind="class" language="C++" prot="public">
    <compoundname>vlkx::Buffer</compoundname>
    <derivedcompoundref refid="classvlkx_1_1_data_buffer" prot="public" virt="non-virtual">vlkx::DataBuffer</derivedcompoundref>
    <derivedcompoundref refid="classvlkx_1_1_image_buffer" prot="public" virt="non-virtual">vlkx::ImageBuffer</derivedcompoundref>
    <includes refid="_buffer_8h" local="no">Buffer.h</includes>
    <innerclass refid="structvlkx_1_1_buffer_1_1_bulk_copy_meta" prot="public">vlkx::Buffer::BulkCopyMeta</innerclass>
    <innerclass refid="structvlkx_1_1_buffer_1_1_copy_meta" prot="public">vlkx::Buffer::CopyMeta</innerclass>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvlkx_1_1_buffer_1a8ad640258cbc9aa645ed68e3c320af99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vlkx::Buffer::Buffer</definition>
        <argsstring>(const Buffer &amp;)=delete</argsstring>
        <name>Buffer</name>
        <qualifiedname>vlkx::Buffer::Buffer</qualifiedname>
        <param>
          <type>const <ref refid="classvlkx_1_1_buffer" kindref="compound">Buffer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Buffer.h" line="29" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_buffer_1a9971cfc28a88cebf00d2642baa5cd72e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvlkx_1_1_buffer" kindref="compound">Buffer</ref> &amp;</type>
        <definition>Buffer &amp; vlkx::Buffer::operator=</definition>
        <argsstring>(const Buffer &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>vlkx::Buffer::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classvlkx_1_1_buffer" kindref="compound">Buffer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Buffer.h" line="30" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_buffer_1a055bf8f2da8b0c7084493579a2f27ccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vlkx::Buffer::Buffer</definition>
        <argsstring>()</argsstring>
        <name>Buffer</name>
        <qualifiedname>vlkx::Buffer::Buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Buffer.h" line="32" column="9" bodyfile="shadow-engine/shadow-renderer/src/vulkan/abstraction/Image.cpp" bodystart="115" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_buffer_1a5ad6564545b79d1ce612ebf2b6fc44f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual vlkx::Buffer::~Buffer</definition>
        <argsstring>()</argsstring>
        <name>~Buffer</name>
        <qualifiedname>vlkx::Buffer::~Buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Buffer.h" line="34" column="17" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Buffer.h" bodystart="34" bodyend="35"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>vlkx::Buffer</label>
        <link refid="classvlkx_1_1_buffer"/>
      </node>
      <node id="2">
        <label>vlkx::DataBuffer</label>
        <link refid="classvlkx_1_1_data_buffer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>vlkx::DynamicPerInstanceBuffer</label>
        <link refid="classvlkx_1_1_dynamic_per_instance_buffer"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>vlkx::DynamicPerVertexBuffer</label>
        <link refid="classvlkx_1_1_dynamic_per_vertex_buffer"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>vlkx::ImageBuffer</label>
        <link refid="classvlkx_1_1_image_buffer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>vlkx::ImageStagingBuffer</label>
        <link refid="classvlkx_1_1_image_staging_buffer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>vlkx::PerInstanceVertexBuffer</label>
        <link refid="classvlkx_1_1_per_instance_vertex_buffer"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>vlkx::PerVertexBuffer</label>
        <link refid="classvlkx_1_1_per_vertex_buffer"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>vlkx::StagingBuffer</label>
        <link refid="classvlkx_1_1_staging_buffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>vlkx::StaticPerInstanceBuffer</label>
        <link refid="classvlkx_1_1_static_per_instance_buffer"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>vlkx::StaticPerVertexBuffer</label>
        <link refid="classvlkx_1_1_static_per_vertex_buffer"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>vlkx::UniformBuffer</label>
        <link refid="classvlkx_1_1_uniform_buffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>vlkx::VertexBuffer</label>
        <link refid="classvlkx_1_1_vertex_buffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Buffer.h" line="14" column="5" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Buffer.h" bodystart="14" bodyend="38"/>
    <listofallmembers>
      <member refid="classvlkx_1_1_buffer_1a8ad640258cbc9aa645ed68e3c320af99" prot="public" virt="non-virtual"><scope>vlkx::Buffer</scope><name>Buffer</name></member>
      <member refid="classvlkx_1_1_buffer_1a055bf8f2da8b0c7084493579a2f27ccb" prot="public" virt="non-virtual"><scope>vlkx::Buffer</scope><name>Buffer</name></member>
      <member refid="classvlkx_1_1_buffer_1a9971cfc28a88cebf00d2642baa5cd72e" prot="public" virt="non-virtual"><scope>vlkx::Buffer</scope><name>operator=</name></member>
      <member refid="classvlkx_1_1_buffer_1a5ad6564545b79d1ce612ebf2b6fc44f7" prot="public" virt="virtual"><scope>vlkx::Buffer</scope><name>~Buffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
