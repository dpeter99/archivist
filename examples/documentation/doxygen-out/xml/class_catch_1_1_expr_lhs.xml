<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_catch_1_1_expr_lhs" kind="class" language="C++" prot="public">
    <compoundname>Catch::ExprLhs</compoundname>
    <includes refid="catch_8hpp" local="no">catch.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename LhsT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_catch_1_1_expr_lhs_1af290873a8427ccbdae6acb915fb7366a" prot="private" static="no" mutable="no">
        <type>LhsT</type>
        <definition>LhsT Catch::ExprLhs&lt; LhsT &gt;::m_lhs</definition>
        <argsstring></argsstring>
        <name>m_lhs</name>
        <qualifiedname>Catch::ExprLhs::m_lhs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2339" column="14" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2339" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_catch_1_1_expr_lhs_1ad22c6af1a7d6993240624d299714a479" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Catch::ExprLhs&lt; LhsT &gt;::ExprLhs</definition>
        <argsstring>(LhsT lhs)</argsstring>
        <name>ExprLhs</name>
        <qualifiedname>Catch::ExprLhs::ExprLhs</qualifiedname>
        <param>
          <type>LhsT</type>
          <declname>lhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2341" column="18" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2341" bodyend="2341"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_expr_lhs_1af218aaf7b5b0a0ebb6b3697f2c89893d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RhsT</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Catch::ExprLhs&lt; LhsT &gt;::operator==</definition>
        <argsstring>(RhsT const &amp;rhs) -&gt; BinaryExpr&lt; LhsT, RhsT const &amp; &gt; const</argsstring>
        <name>operator==</name>
        <qualifiedname>Catch::ExprLhs::operator==</qualifiedname>
        <param>
          <type>RhsT const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2344" column="14" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2344" bodyend="2346"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_expr_lhs_1ab707a84abdffbdc35962a495e238d393" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Catch::ExprLhs&lt; LhsT &gt;::operator==</definition>
        <argsstring>(bool rhs) -&gt; BinaryExpr&lt; LhsT, bool &gt; const</argsstring>
        <name>operator==</name>
        <qualifiedname>Catch::ExprLhs::operator==</qualifiedname>
        <param>
          <type>bool</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2347" column="14" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2347" bodyend="2349"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_expr_lhs_1a2d660580c0a8e6bb24b65a4b5364b5b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RhsT</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Catch::ExprLhs&lt; LhsT &gt;::operator!=</definition>
        <argsstring>(RhsT const &amp;rhs) -&gt; BinaryExpr&lt; LhsT, RhsT const &amp; &gt; const</argsstring>
        <name>operator!=</name>
        <qualifiedname>Catch::ExprLhs::operator!=</qualifiedname>
        <param>
          <type>RhsT const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2352" column="14" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2352" bodyend="2354"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_expr_lhs_1a60eca847201d057d8a8b7222c69b619c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Catch::ExprLhs&lt; LhsT &gt;::operator!=</definition>
        <argsstring>(bool rhs) -&gt; BinaryExpr&lt; LhsT, bool &gt; const</argsstring>
        <name>operator!=</name>
        <qualifiedname>Catch::ExprLhs::operator!=</qualifiedname>
        <param>
          <type>bool</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2355" column="14" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2355" bodyend="2357"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_expr_lhs_1a7f9d22b7ef87375af7a2583c9643a0f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RhsT</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Catch::ExprLhs&lt; LhsT &gt;::operator&gt;</definition>
        <argsstring>(RhsT const &amp;rhs) -&gt; BinaryExpr&lt; LhsT, RhsT const &amp; &gt; const</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>Catch::ExprLhs::operator&gt;</qualifiedname>
        <param>
          <type>RhsT const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2360" column="14" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2360" bodyend="2362"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_expr_lhs_1afd1ce21cb0be233a63cbdd7724adffea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RhsT</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Catch::ExprLhs&lt; LhsT &gt;::operator&lt;</definition>
        <argsstring>(RhsT const &amp;rhs) -&gt; BinaryExpr&lt; LhsT, RhsT const &amp; &gt; const</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>Catch::ExprLhs::operator&lt;</qualifiedname>
        <param>
          <type>RhsT const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2364" column="9" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2364" bodyend="2366"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_expr_lhs_1a5ab1a2e91533a8b66a5d2e70774f6793" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RhsT</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Catch::ExprLhs&lt; LhsT &gt;::operator&gt;=</definition>
        <argsstring>(RhsT const &amp;rhs) -&gt; BinaryExpr&lt; LhsT, RhsT const &amp; &gt; const</argsstring>
        <name>operator&gt;=</name>
        <qualifiedname>Catch::ExprLhs::operator&gt;=</qualifiedname>
        <param>
          <type>RhsT const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2368" column="14" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2368" bodyend="2370"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_expr_lhs_1a918090c28bee54222730159b56240af1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RhsT</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Catch::ExprLhs&lt; LhsT &gt;::operator&lt;=</definition>
        <argsstring>(RhsT const &amp;rhs) -&gt; BinaryExpr&lt; LhsT, RhsT const &amp; &gt; const</argsstring>
        <name>operator&lt;=</name>
        <qualifiedname>Catch::ExprLhs::operator&lt;=</qualifiedname>
        <param>
          <type>RhsT const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2372" column="9" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2372" bodyend="2374"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_expr_lhs_1a52358a7cbaf47578ff436a378ac818c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RhsT</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Catch::ExprLhs&lt; LhsT &gt;::operator|</definition>
        <argsstring>(RhsT const &amp;rhs) -&gt; BinaryExpr&lt; LhsT, RhsT const &amp; &gt; const</argsstring>
        <name>operator|</name>
        <qualifiedname>Catch::ExprLhs::operator|</qualifiedname>
        <param>
          <type>RhsT const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2376" column="14" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2376" bodyend="2378"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_expr_lhs_1a39bc6a4687580e5fef174cae9b573283" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RhsT</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Catch::ExprLhs&lt; LhsT &gt;::operator&amp;</definition>
        <argsstring>(RhsT const &amp;rhs) -&gt; BinaryExpr&lt; LhsT, RhsT const &amp; &gt; const</argsstring>
        <name>operator&amp;</name>
        <qualifiedname>Catch::ExprLhs::operator&amp;</qualifiedname>
        <param>
          <type>RhsT const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2380" column="14" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2380" bodyend="2382"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_expr_lhs_1a904664f51bf478b41b12ac6cb3e1ec23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RhsT</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Catch::ExprLhs&lt; LhsT &gt;::operator^</definition>
        <argsstring>(RhsT const &amp;rhs) -&gt; BinaryExpr&lt; LhsT, RhsT const &amp; &gt; const</argsstring>
        <name>operator^</name>
        <qualifiedname>Catch::ExprLhs::operator^</qualifiedname>
        <param>
          <type>RhsT const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2384" column="14" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2384" bodyend="2386"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_expr_lhs_1ad85684f7b02a98eb1b5d03d4cbd8284b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RhsT</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Catch::ExprLhs&lt; LhsT &gt;::operator&amp;&amp;</definition>
        <argsstring>(RhsT const &amp;) -&gt; BinaryExpr&lt; LhsT, RhsT const &amp; &gt; const</argsstring>
        <name>operator&amp;&amp;</name>
        <qualifiedname>Catch::ExprLhs::operator&amp;&amp;</qualifiedname>
        <param>
          <type>RhsT const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2389" column="14" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2389" bodyend="2393"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_expr_lhs_1ae9b4ee923b90af22c9e39261c2f03cd3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RhsT</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Catch::ExprLhs&lt; LhsT &gt;::operator||</definition>
        <argsstring>(RhsT const &amp;) -&gt; BinaryExpr&lt; LhsT, RhsT const &amp; &gt; const</argsstring>
        <name>operator||</name>
        <qualifiedname>Catch::ExprLhs::operator||</qualifiedname>
        <param>
          <type>RhsT const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2396" column="14" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2396" bodyend="2400"/>
      </memberdef>
      <memberdef kind="function" id="class_catch_1_1_expr_lhs_1ab68bd6d5d3ae21b7fba9010150fba95d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Catch::ExprLhs&lt; LhsT &gt;::makeUnaryExpr</definition>
        <argsstring>() const -&gt; UnaryExpr&lt; LhsT &gt;</argsstring>
        <name>makeUnaryExpr</name>
        <qualifiedname>Catch::ExprLhs::makeUnaryExpr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2402" column="14" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2402" bodyend="2404"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2338" column="5" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2338" bodyend="2405"/>
    <listofallmembers>
      <member refid="class_catch_1_1_expr_lhs_1ad22c6af1a7d6993240624d299714a479" prot="public" virt="non-virtual"><scope>Catch::ExprLhs</scope><name>ExprLhs</name></member>
      <member refid="class_catch_1_1_expr_lhs_1af290873a8427ccbdae6acb915fb7366a" prot="private" virt="non-virtual"><scope>Catch::ExprLhs</scope><name>m_lhs</name></member>
      <member refid="class_catch_1_1_expr_lhs_1ab68bd6d5d3ae21b7fba9010150fba95d" prot="public" virt="non-virtual"><scope>Catch::ExprLhs</scope><name>makeUnaryExpr</name></member>
      <member refid="class_catch_1_1_expr_lhs_1a2d660580c0a8e6bb24b65a4b5364b5b1" prot="public" virt="non-virtual"><scope>Catch::ExprLhs</scope><name>operator!=</name></member>
      <member refid="class_catch_1_1_expr_lhs_1a60eca847201d057d8a8b7222c69b619c" prot="public" virt="non-virtual"><scope>Catch::ExprLhs</scope><name>operator!=</name></member>
      <member refid="class_catch_1_1_expr_lhs_1a39bc6a4687580e5fef174cae9b573283" prot="public" virt="non-virtual"><scope>Catch::ExprLhs</scope><name>operator&amp;</name></member>
      <member refid="class_catch_1_1_expr_lhs_1ad85684f7b02a98eb1b5d03d4cbd8284b" prot="public" virt="non-virtual"><scope>Catch::ExprLhs</scope><name>operator&amp;&amp;</name></member>
      <member refid="class_catch_1_1_expr_lhs_1afd1ce21cb0be233a63cbdd7724adffea" prot="public" virt="non-virtual"><scope>Catch::ExprLhs</scope><name>operator&lt;</name></member>
      <member refid="class_catch_1_1_expr_lhs_1a918090c28bee54222730159b56240af1" prot="public" virt="non-virtual"><scope>Catch::ExprLhs</scope><name>operator&lt;=</name></member>
      <member refid="class_catch_1_1_expr_lhs_1af218aaf7b5b0a0ebb6b3697f2c89893d" prot="public" virt="non-virtual"><scope>Catch::ExprLhs</scope><name>operator==</name></member>
      <member refid="class_catch_1_1_expr_lhs_1ab707a84abdffbdc35962a495e238d393" prot="public" virt="non-virtual"><scope>Catch::ExprLhs</scope><name>operator==</name></member>
      <member refid="class_catch_1_1_expr_lhs_1a7f9d22b7ef87375af7a2583c9643a0f4" prot="public" virt="non-virtual"><scope>Catch::ExprLhs</scope><name>operator&gt;</name></member>
      <member refid="class_catch_1_1_expr_lhs_1a5ab1a2e91533a8b66a5d2e70774f6793" prot="public" virt="non-virtual"><scope>Catch::ExprLhs</scope><name>operator&gt;=</name></member>
      <member refid="class_catch_1_1_expr_lhs_1a904664f51bf478b41b12ac6cb3e1ec23" prot="public" virt="non-virtual"><scope>Catch::ExprLhs</scope><name>operator^</name></member>
      <member refid="class_catch_1_1_expr_lhs_1a52358a7cbaf47578ff436a378ac818c6" prot="public" virt="non-virtual"><scope>Catch::ExprLhs</scope><name>operator|</name></member>
      <member refid="class_catch_1_1_expr_lhs_1ae9b4ee923b90af22c9e39261c2f03cd3" prot="public" virt="non-virtual"><scope>Catch::ExprLhs</scope><name>operator||</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
