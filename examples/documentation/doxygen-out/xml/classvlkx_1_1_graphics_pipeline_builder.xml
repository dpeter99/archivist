<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classvlkx_1_1_graphics_pipeline_builder" kind="class" language="C++" prot="public">
    <compoundname>vlkx::GraphicsPipelineBuilder</compoundname>
    <basecompoundref refid="classvlkx_1_1_pipeline_builder" prot="public" virt="non-virtual">vlkx::PipelineBuilder</basecompoundref>
    <includes refid="_pipeline_8h" local="no">Pipeline.h</includes>
    <innerclass refid="structvlkx_1_1_graphics_pipeline_builder_1_1_pass_info" prot="private">vlkx::GraphicsPipelineBuilder::PassInfo</innerclass>
    <innerclass refid="structvlkx_1_1_graphics_pipeline_builder_1_1_viewport" prot="public">vlkx::GraphicsPipelineBuilder::Viewport</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvlkx_1_1_graphics_pipeline_builder_1a6db8fa29c4b3ac0e5be70db3190b37b1" prot="private" static="no" mutable="no">
        <type>VkPipelineInputAssemblyStateCreateInfo</type>
        <definition>VkPipelineInputAssemblyStateCreateInfo vlkx::GraphicsPipelineBuilder::assemblyInfo</definition>
        <argsstring></argsstring>
        <name>assemblyInfo</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::assemblyInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="108" column="48" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_graphics_pipeline_builder_1a4fbb4bad9409d6eafd1c4021e4a6f9a8" prot="private" static="no" mutable="no">
        <type>VkPipelineRasterizationStateCreateInfo</type>
        <definition>VkPipelineRasterizationStateCreateInfo vlkx::GraphicsPipelineBuilder::rasterizationInfo</definition>
        <argsstring></argsstring>
        <name>rasterizationInfo</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::rasterizationInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="109" column="48" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_graphics_pipeline_builder_1add72eac6abede94420027606f9aed044" prot="private" static="no" mutable="no">
        <type>VkPipelineMultisampleStateCreateInfo</type>
        <definition>VkPipelineMultisampleStateCreateInfo vlkx::GraphicsPipelineBuilder::multisampleInfo</definition>
        <argsstring></argsstring>
        <name>multisampleInfo</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::multisampleInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="110" column="46" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_graphics_pipeline_builder_1a78305e8235d75b296578c5789e9729b8" prot="private" static="no" mutable="no">
        <type>VkPipelineDepthStencilStateCreateInfo</type>
        <definition>VkPipelineDepthStencilStateCreateInfo vlkx::GraphicsPipelineBuilder::depthStencilInfo</definition>
        <argsstring></argsstring>
        <name>depthStencilInfo</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::depthStencilInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="111" column="47" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_graphics_pipeline_builder_1ab00f9e09c0df55ee84a7442256445eef" prot="private" static="no" mutable="no">
        <type>VkPipelineDynamicStateCreateInfo</type>
        <definition>VkPipelineDynamicStateCreateInfo vlkx::GraphicsPipelineBuilder::dynamicStateInfo</definition>
        <argsstring></argsstring>
        <name>dynamicStateInfo</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::dynamicStateInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="112" column="42" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_graphics_pipeline_builder_1a4f484a61738306952315327a8f85a663" prot="private" static="no" mutable="no">
        <type>std::vector&lt; VkVertexInputBindingDescription &gt;</type>
        <definition>std::vector&lt;VkVertexInputBindingDescription&gt; vlkx::GraphicsPipelineBuilder::bindingDescs</definition>
        <argsstring></argsstring>
        <name>bindingDescs</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::bindingDescs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="114" column="21" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_graphics_pipeline_builder_1a2269979d03e3f332a31b96b7c8d54350" prot="private" static="no" mutable="no">
        <type>std::vector&lt; VkVertexInputAttributeDescription &gt;</type>
        <definition>std::vector&lt;VkVertexInputAttributeDescription&gt; vlkx::GraphicsPipelineBuilder::attrDescs</definition>
        <argsstring></argsstring>
        <name>attrDescs</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::attrDescs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="115" column="21" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_graphics_pipeline_builder_1af578cdf4c7823fe1cce8eca7d19123b4" prot="private" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="structvlkx_1_1_graphics_pipeline_builder_1_1_viewport" kindref="compound">Viewport</ref> &gt;</type>
        <definition>std::optional&lt;Viewport&gt; vlkx::GraphicsPipelineBuilder::viewportMeta</definition>
        <argsstring></argsstring>
        <name>viewportMeta</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::viewportMeta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="117" column="23" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_graphics_pipeline_builder_1a0b6a69e947a80a9f8dbb8a539c815c72" prot="private" static="no" mutable="no">
        <type>std::optional&lt; PassInfo &gt;</type>
        <definition>std::optional&lt;PassInfo&gt; vlkx::GraphicsPipelineBuilder::passMeta</definition>
        <argsstring></argsstring>
        <name>passMeta</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::passMeta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="118" column="23" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_graphics_pipeline_builder_1a6fc30b20b82a0fb8a08790167dcc60d3" prot="private" static="no" mutable="no">
        <type>std::vector&lt; VkPipelineColorBlendAttachmentState &gt;</type>
        <definition>std::vector&lt;VkPipelineColorBlendAttachmentState&gt; vlkx::GraphicsPipelineBuilder::blendStates</definition>
        <argsstring></argsstring>
        <name>blendStates</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::blendStates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="119" column="21" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_graphics_pipeline_builder_1a932f7b24d9a01e249dcaa062e281247e" prot="private" static="no" mutable="no">
        <type>std::map&lt; VkShaderStageFlagBits, std::string &gt;</type>
        <definition>std::map&lt;VkShaderStageFlagBits, std::string&gt; vlkx::GraphicsPipelineBuilder::shaders</definition>
        <argsstring></argsstring>
        <name>shaders</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::shaders</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="120" column="18" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvlkx_1_1_graphics_pipeline_builder_1a1ccb5982f6db9a46cd4aeea8c1213904" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>vlkx::GraphicsPipelineBuilder::GraphicsPipelineBuilder</definition>
        <argsstring>(std::optional&lt; int &gt; maxCache=std::nullopt)</argsstring>
        <name>GraphicsPipelineBuilder</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::GraphicsPipelineBuilder</qualifiedname>
        <param>
          <type>std::optional&lt; int &gt;</type>
          <declname>maxCache</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="78" column="18" bodyfile="shadow-engine/shadow-renderer/src/render/pipeline/Pipeline.cpp" bodystart="102" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_graphics_pipeline_builder_1a82f2546a3932c28fbdcb0fc3555df508" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vlkx::GraphicsPipelineBuilder::GraphicsPipelineBuilder</definition>
        <argsstring>(const GraphicsPipelineBuilder &amp;)=delete</argsstring>
        <name>GraphicsPipelineBuilder</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::GraphicsPipelineBuilder</qualifiedname>
        <param>
          <type>const <ref refid="classvlkx_1_1_graphics_pipeline_builder" kindref="compound">GraphicsPipelineBuilder</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="80" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_graphics_pipeline_builder_1a64b69aa6ed1da47bfa25b78dcdf02241" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvlkx_1_1_graphics_pipeline_builder" kindref="compound">GraphicsPipelineBuilder</ref> &amp;</type>
        <definition>GraphicsPipelineBuilder &amp; vlkx::GraphicsPipelineBuilder::operator=</definition>
        <argsstring>(const GraphicsPipelineBuilder &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classvlkx_1_1_graphics_pipeline_builder" kindref="compound">GraphicsPipelineBuilder</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="81" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_graphics_pipeline_builder_1a6b6ced68f6f9248863ee9a5f9ab5eb1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_generic_render_pass_8h_1a68b39832e0bbd552c45aae02054bbe79" kindref="member">fluent</ref></type>
        <definition>GraphicsPipelineBuilder &amp; vlkx::GraphicsPipelineBuilder::name</definition>
        <argsstring>(std::string &amp;&amp;name)</argsstring>
        <name>name</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::name</qualifiedname>
        <param>
          <type>std::string &amp;&amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="85" column="16" bodyfile="shadow-engine/shadow-renderer/src/render/pipeline/Pipeline.cpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_graphics_pipeline_builder_1aa87c9e47ada1b334f76e6231a38fbe9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_generic_render_pass_8h_1a68b39832e0bbd552c45aae02054bbe79" kindref="member">fluent</ref></type>
        <definition>GraphicsPipelineBuilder &amp; vlkx::GraphicsPipelineBuilder::depthTest</definition>
        <argsstring>(bool enable, bool write)</argsstring>
        <name>depthTest</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::depthTest</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>write</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="86" column="16" bodyfile="shadow-engine/shadow-renderer/src/render/pipeline/Pipeline.cpp" bodystart="137" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_graphics_pipeline_builder_1a8c036fdad112473684f992df23a49d6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_generic_render_pass_8h_1a68b39832e0bbd552c45aae02054bbe79" kindref="member">fluent</ref></type>
        <definition>GraphicsPipelineBuilder &amp; vlkx::GraphicsPipelineBuilder::stencilTest</definition>
        <argsstring>(bool enable)</argsstring>
        <name>stencilTest</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::stencilTest</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="87" column="16" bodyfile="shadow-engine/shadow-renderer/src/render/pipeline/Pipeline.cpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_graphics_pipeline_builder_1abe1147fa2cc5f0233bb6b580ff8dff05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_generic_render_pass_8h_1a68b39832e0bbd552c45aae02054bbe79" kindref="member">fluent</ref></type>
        <definition>GraphicsPipelineBuilder &amp; vlkx::GraphicsPipelineBuilder::multiSample</definition>
        <argsstring>(VkSampleCountFlagBits samples)</argsstring>
        <name>multiSample</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::multiSample</qualifiedname>
        <param>
          <type>VkSampleCountFlagBits</type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="88" column="16" bodyfile="shadow-engine/shadow-renderer/src/render/pipeline/Pipeline.cpp" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_graphics_pipeline_builder_1a4cebae040cbbcc2a3a968741376f5aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_generic_render_pass_8h_1a68b39832e0bbd552c45aae02054bbe79" kindref="member">fluent</ref></type>
        <definition>GraphicsPipelineBuilder &amp; vlkx::GraphicsPipelineBuilder::topology</definition>
        <argsstring>(VkPrimitiveTopology topology)</argsstring>
        <name>topology</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::topology</qualifiedname>
        <param>
          <type>VkPrimitiveTopology</type>
          <declname>topology</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="89" column="16" bodyfile="shadow-engine/shadow-renderer/src/render/pipeline/Pipeline.cpp" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_graphics_pipeline_builder_1acf55e4e9974cd89102f1290e4f327939" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_generic_render_pass_8h_1a68b39832e0bbd552c45aae02054bbe79" kindref="member">fluent</ref></type>
        <definition>GraphicsPipelineBuilder &amp; vlkx::GraphicsPipelineBuilder::stencilOp</definition>
        <argsstring>(const VkStencilOpState &amp;state, VkStencilFaceFlags flags)</argsstring>
        <name>stencilOp</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::stencilOp</qualifiedname>
        <param>
          <type>const VkStencilOpState &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>VkStencilFaceFlags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="90" column="16" bodyfile="shadow-engine/shadow-renderer/src/render/pipeline/Pipeline.cpp" bodystart="158" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_graphics_pipeline_builder_1a31091c2c00cb01f2c31fdc97d20d3187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_generic_render_pass_8h_1a68b39832e0bbd552c45aae02054bbe79" kindref="member">fluent</ref></type>
        <definition>GraphicsPipelineBuilder &amp; vlkx::GraphicsPipelineBuilder::addVertex</definition>
        <argsstring>(uint32_t bindPoint, VkVertexInputBindingDescription &amp;&amp;desc, std::vector&lt; VkVertexInputAttributeDescription &gt; &amp;&amp;attrs)</argsstring>
        <name>addVertex</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::addVertex</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>bindPoint</declname>
        </param>
        <param>
          <type>VkVertexInputBindingDescription &amp;&amp;</type>
          <declname>desc</declname>
        </param>
        <param>
          <type>std::vector&lt; VkVertexInputAttributeDescription &gt; &amp;&amp;</type>
          <declname>attrs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="92" column="16" bodyfile="shadow-engine/shadow-renderer/src/render/pipeline/Pipeline.cpp" bodystart="167" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_graphics_pipeline_builder_1a4ea338c32bb94860b2e0bae70115e465" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_generic_render_pass_8h_1a68b39832e0bbd552c45aae02054bbe79" kindref="member">fluent</ref></type>
        <definition>GraphicsPipelineBuilder &amp; vlkx::GraphicsPipelineBuilder::layout</definition>
        <argsstring>(std::vector&lt; VkDescriptorSetLayout &gt; &amp;&amp;descLayouts, std::vector&lt; VkPushConstantRange &gt; &amp;&amp;constants)</argsstring>
        <name>layout</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::layout</qualifiedname>
        <param>
          <type>std::vector&lt; VkDescriptorSetLayout &gt; &amp;&amp;</type>
          <declname>descLayouts</declname>
        </param>
        <param>
          <type>std::vector&lt; VkPushConstantRange &gt; &amp;&amp;</type>
          <declname>constants</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="93" column="16" bodyfile="shadow-engine/shadow-renderer/src/render/pipeline/Pipeline.cpp" bodystart="181" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_graphics_pipeline_builder_1a6e469a3ebc193d05a56efa059f5b34ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_generic_render_pass_8h_1a68b39832e0bbd552c45aae02054bbe79" kindref="member">fluent</ref></type>
        <definition>GraphicsPipelineBuilder &amp; vlkx::GraphicsPipelineBuilder::viewport</definition>
        <argsstring>(const Viewport &amp;port, bool flipY=true)</argsstring>
        <name>viewport</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::viewport</qualifiedname>
        <param>
          <type>const <ref refid="structvlkx_1_1_graphics_pipeline_builder_1_1_viewport" kindref="compound">Viewport</ref> &amp;</type>
          <declname>port</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>flipY</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="94" column="16" bodyfile="shadow-engine/shadow-renderer/src/render/pipeline/Pipeline.cpp" bodystart="187" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_graphics_pipeline_builder_1a7b085a9a2f5430a31a49721eeac78f71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_generic_render_pass_8h_1a68b39832e0bbd552c45aae02054bbe79" kindref="member">fluent</ref></type>
        <definition>GraphicsPipelineBuilder &amp; vlkx::GraphicsPipelineBuilder::renderPass</definition>
        <argsstring>(const VkRenderPass &amp;pass, uint32_t subpass)</argsstring>
        <name>renderPass</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::renderPass</qualifiedname>
        <param>
          <type>const VkRenderPass &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>subpass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="95" column="16" bodyfile="shadow-engine/shadow-renderer/src/render/pipeline/Pipeline.cpp" bodystart="201" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_graphics_pipeline_builder_1a553615ef782154875bcadb265139a415" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_generic_render_pass_8h_1a68b39832e0bbd552c45aae02054bbe79" kindref="member">fluent</ref></type>
        <definition>GraphicsPipelineBuilder &amp; vlkx::GraphicsPipelineBuilder::colorBlend</definition>
        <argsstring>(std::vector&lt; VkPipelineColorBlendAttachmentState &gt; &amp;&amp;states)</argsstring>
        <name>colorBlend</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::colorBlend</qualifiedname>
        <param>
          <type>std::vector&lt; VkPipelineColorBlendAttachmentState &gt; &amp;&amp;</type>
          <declname>states</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="97" column="16" bodyfile="shadow-engine/shadow-renderer/src/render/pipeline/Pipeline.cpp" bodystart="206" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_graphics_pipeline_builder_1a6750623442d14b0a53481e6278d662c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_generic_render_pass_8h_1a68b39832e0bbd552c45aae02054bbe79" kindref="member">fluent</ref></type>
        <definition>GraphicsPipelineBuilder &amp; vlkx::GraphicsPipelineBuilder::shader</definition>
        <argsstring>(VkShaderStageFlagBits stage, std::string &amp;&amp;file)</argsstring>
        <name>shader</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::shader</qualifiedname>
        <param>
          <type>VkShaderStageFlagBits</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>std::string &amp;&amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="98" column="16" bodyfile="shadow-engine/shadow-renderer/src/render/pipeline/Pipeline.cpp" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_graphics_pipeline_builder_1ae7bb74db7f81a53ff825d4a3788955ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::unique_ptr&lt; <ref refid="classvlkx_1_1_pipeline" kindref="compound">Pipeline</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Pipeline &gt; vlkx::GraphicsPipelineBuilder::build</definition>
        <argsstring>() const override</argsstring>
        <name>build</name>
        <qualifiedname>vlkx::GraphicsPipelineBuilder::build</qualifiedname>
        <reimplements refid="classvlkx_1_1_pipeline_builder_1ad3942e094ce70b2ba93b574768302bea">build</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="100" column="25" bodyfile="shadow-engine/shadow-renderer/src/render/pipeline/Pipeline.cpp" bodystart="217" bodyend="254"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Use when creating Graphics pipelines. Internal state is preserved so that multiple pipelines can be created with one builder. However, shaders are single-usage. Bind a new shader before claling build again. See <ref refid="classvlkx_1_1_shader_module" kindref="compound">ShaderModule</ref> for more information, and how to change this. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>vlkx::GraphicsPipelineBuilder</label>
        <link refid="classvlkx_1_1_graphics_pipeline_builder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>vlkx::PipelineBuilder</label>
        <link refid="classvlkx_1_1_pipeline_builder"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>vlkx::GraphicsPipelineBuilder</label>
        <link refid="classvlkx_1_1_graphics_pipeline_builder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>vlkx::PipelineBuilder</label>
        <link refid="classvlkx_1_1_pipeline_builder"/>
      </node>
    </collaborationgraph>
    <location file="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" line="71" column="5" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h" bodystart="71" bodyend="121"/>
    <listofallmembers>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1a31091c2c00cb01f2c31fdc97d20d3187" prot="public" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>addVertex</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1a6db8fa29c4b3ac0e5be70db3190b37b1" prot="private" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>assemblyInfo</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1a2269979d03e3f332a31b96b7c8d54350" prot="private" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>attrDescs</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1a4f484a61738306952315327a8f85a663" prot="private" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>bindingDescs</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1a6fc30b20b82a0fb8a08790167dcc60d3" prot="private" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>blendStates</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1ae7bb74db7f81a53ff825d4a3788955ee" prot="public" virt="virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>build</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1a553615ef782154875bcadb265139a415" prot="public" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>colorBlend</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1a78305e8235d75b296578c5789e9729b8" prot="private" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>depthStencilInfo</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1aa87c9e47ada1b334f76e6231a38fbe9c" prot="public" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>depthTest</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1ab00f9e09c0df55ee84a7442256445eef" prot="private" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>dynamicStateInfo</name></member>
      <member refid="classvlkx_1_1_pipeline_builder_1a65fd212125818c0f96c064b8b13cf069" prot="protected" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>getLayout</name></member>
      <member refid="classvlkx_1_1_pipeline_builder_1a75fd7368111f0304716e4d93df0addfe" prot="protected" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>getName</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1a1ccb5982f6db9a46cd4aeea8c1213904" prot="public" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>GraphicsPipelineBuilder</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1a82f2546a3932c28fbdcb0fc3555df508" prot="public" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>GraphicsPipelineBuilder</name></member>
      <member refid="classvlkx_1_1_pipeline_builder_1af56031e253ed578425b016c9ec007c7b" prot="protected" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>hasLayout</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1a4ea338c32bb94860b2e0bae70115e465" prot="public" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>layout</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1abe1147fa2cc5f0233bb6b580ff8dff05" prot="public" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>multiSample</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1add72eac6abede94420027606f9aed044" prot="private" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>multisampleInfo</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1a6b6ced68f6f9248863ee9a5f9ab5eb1c" prot="public" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>name</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1a64b69aa6ed1da47bfa25b78dcdf02241" prot="public" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>operator=</name></member>
      <member refid="classvlkx_1_1_pipeline_builder_1a81582cacf02c2f3d9a4cb8870acc7d8e" prot="public" virt="non-virtual" ambiguityscope="vlkx::PipelineBuilder::"><scope>vlkx::GraphicsPipelineBuilder</scope><name>operator=</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1a0b6a69e947a80a9f8dbb8a539c815c72" prot="private" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>passMeta</name></member>
      <member refid="classvlkx_1_1_pipeline_builder_1a68fd2d6f6f7ffc45a9a4021577c191e5" prot="public" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>PipelineBuilder</name></member>
      <member refid="classvlkx_1_1_pipeline_builder_1a4a40f7781e10cd8024ad370ba1c4049b" prot="protected" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>PipelineBuilder</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1a4fbb4bad9409d6eafd1c4021e4a6f9a8" prot="private" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>rasterizationInfo</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1a7b085a9a2f5430a31a49721eeac78f71" prot="public" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>renderPass</name></member>
      <member refid="classvlkx_1_1_pipeline_builder_1ab2d07a03863810149b799d0c091711b0" prot="protected" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>setLayout</name></member>
      <member refid="classvlkx_1_1_pipeline_builder_1a608297e8fd73ce118c96f3e1488df455" prot="protected" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>setName</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1a6750623442d14b0a53481e6278d662c8" prot="public" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>shader</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1a932f7b24d9a01e249dcaa062e281247e" prot="private" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>shaders</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1acf55e4e9974cd89102f1290e4f327939" prot="public" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>stencilOp</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1a8c036fdad112473684f992df23a49d6a" prot="public" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>stencilTest</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1a4cebae040cbbcc2a3a968741376f5aaf" prot="public" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>topology</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1a6e469a3ebc193d05a56efa059f5b34ad" prot="public" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>viewport</name></member>
      <member refid="classvlkx_1_1_graphics_pipeline_builder_1af578cdf4c7823fe1cce8eca7d19123b4" prot="private" virt="non-virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>viewportMeta</name></member>
      <member refid="classvlkx_1_1_pipeline_builder_1a4ec90bc8f54b7c2df3020fdcb832e627" prot="public" virt="virtual"><scope>vlkx::GraphicsPipelineBuilder</scope><name>~PipelineBuilder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
