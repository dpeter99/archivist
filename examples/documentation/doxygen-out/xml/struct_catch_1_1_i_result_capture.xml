<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="struct_catch_1_1_i_result_capture" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>Catch::IResultCapture</compoundname>
    <includes refid="catch_8hpp" local="no">catch.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_catch_1_1_i_result_capture_1a3bd16719d6772b7470887fc36c6d0808" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Catch::IResultCapture::~IResultCapture</definition>
        <argsstring>()</argsstring>
        <name>~IResultCapture</name>
        <qualifiedname>Catch::IResultCapture::~IResultCapture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2460" column="17"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_i_result_capture_1a5b76ed52badcb64cf374202e12b81a03" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Catch::IResultCapture::sectionStarted</definition>
        <argsstring>(SectionInfo const &amp;sectionInfo, Counts &amp;assertions)=0</argsstring>
        <name>sectionStarted</name>
        <qualifiedname>Catch::IResultCapture::sectionStarted</qualifiedname>
        <param>
          <type><ref refid="struct_catch_1_1_section_info" kindref="compound">SectionInfo</ref> const &amp;</type>
          <declname>sectionInfo</declname>
        </param>
        <param>
          <type><ref refid="struct_catch_1_1_counts" kindref="compound">Counts</ref> &amp;</type>
          <declname>assertions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2462" column="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_i_result_capture_1a4e152bc43dc0933684e31fa67a58195d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Catch::IResultCapture::sectionEnded</definition>
        <argsstring>(SectionEndInfo const &amp;endInfo)=0</argsstring>
        <name>sectionEnded</name>
        <qualifiedname>Catch::IResultCapture::sectionEnded</qualifiedname>
        <param>
          <type><ref refid="struct_catch_1_1_section_end_info" kindref="compound">SectionEndInfo</ref> const &amp;</type>
          <declname>endInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2464" column="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_i_result_capture_1afcc71eef8ca821ae132cced4a2be6988" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Catch::IResultCapture::sectionEndedEarly</definition>
        <argsstring>(SectionEndInfo const &amp;endInfo)=0</argsstring>
        <name>sectionEndedEarly</name>
        <qualifiedname>Catch::IResultCapture::sectionEndedEarly</qualifiedname>
        <param>
          <type><ref refid="struct_catch_1_1_section_end_info" kindref="compound">SectionEndInfo</ref> const &amp;</type>
          <declname>endInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2465" column="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_i_result_capture_1a8f93a848e0a48b630ca9ecbf225e4817" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>auto</type>
        <definition>virtual auto Catch::IResultCapture::acquireGeneratorTracker</definition>
        <argsstring>(StringRef generatorName, SourceLineInfo const &amp;lineInfo) -&gt; IGeneratorTracker &amp;=0</argsstring>
        <name>acquireGeneratorTracker</name>
        <qualifiedname>Catch::IResultCapture::acquireGeneratorTracker</qualifiedname>
        <param>
          <type><ref refid="class_catch_1_1_string_ref" kindref="compound">StringRef</ref></type>
          <declname>generatorName</declname>
        </param>
        <param>
          <type><ref refid="struct_catch_1_1_source_line_info" kindref="compound">SourceLineInfo</ref> const &amp;</type>
          <declname>lineInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2467" column="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_i_result_capture_1a91d154c1e087e383dcde5aad95cb6a05" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Catch::IResultCapture::pushScopedMessage</definition>
        <argsstring>(MessageInfo const &amp;message)=0</argsstring>
        <name>pushScopedMessage</name>
        <qualifiedname>Catch::IResultCapture::pushScopedMessage</qualifiedname>
        <param>
          <type><ref refid="struct_catch_1_1_message_info" kindref="compound">MessageInfo</ref> const &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2476" column="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_i_result_capture_1a42bcb13276706bf8c3ce081ce16d37fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Catch::IResultCapture::popScopedMessage</definition>
        <argsstring>(MessageInfo const &amp;message)=0</argsstring>
        <name>popScopedMessage</name>
        <qualifiedname>Catch::IResultCapture::popScopedMessage</qualifiedname>
        <param>
          <type><ref refid="struct_catch_1_1_message_info" kindref="compound">MessageInfo</ref> const &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2477" column="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_i_result_capture_1a49f74f1323ef8be71b8f9b8e8b2c0fc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Catch::IResultCapture::emplaceUnscopedMessage</definition>
        <argsstring>(MessageBuilder const &amp;builder)=0</argsstring>
        <name>emplaceUnscopedMessage</name>
        <qualifiedname>Catch::IResultCapture::emplaceUnscopedMessage</qualifiedname>
        <param>
          <type><ref refid="struct_catch_1_1_message_builder" kindref="compound">MessageBuilder</ref> const &amp;</type>
          <declname>builder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2479" column="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_i_result_capture_1a48559e6598ba9474b903697b69c769b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Catch::IResultCapture::handleFatalErrorCondition</definition>
        <argsstring>(StringRef message)=0</argsstring>
        <name>handleFatalErrorCondition</name>
        <qualifiedname>Catch::IResultCapture::handleFatalErrorCondition</qualifiedname>
        <param>
          <type><ref refid="class_catch_1_1_string_ref" kindref="compound">StringRef</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2481" column="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_i_result_capture_1a59a2b05391e464954575d2afb6d5d607" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Catch::IResultCapture::handleExpr</definition>
        <argsstring>(AssertionInfo const &amp;info, ITransientExpression const &amp;expr, AssertionReaction &amp;reaction)=0</argsstring>
        <name>handleExpr</name>
        <qualifiedname>Catch::IResultCapture::handleExpr</qualifiedname>
        <param>
          <type><ref refid="struct_catch_1_1_assertion_info" kindref="compound">AssertionInfo</ref> const &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type><ref refid="struct_catch_1_1_i_transient_expression" kindref="compound">ITransientExpression</ref> const &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type><ref refid="struct_catch_1_1_assertion_reaction" kindref="compound">AssertionReaction</ref> &amp;</type>
          <declname>reaction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2483" column="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_i_result_capture_1a21788ebc64571abf322b80c8cc51794d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Catch::IResultCapture::handleMessage</definition>
        <argsstring>(AssertionInfo const &amp;info, ResultWas::OfType resultType, StringRef const &amp;message, AssertionReaction &amp;reaction)=0</argsstring>
        <name>handleMessage</name>
        <qualifiedname>Catch::IResultCapture::handleMessage</qualifiedname>
        <param>
          <type><ref refid="struct_catch_1_1_assertion_info" kindref="compound">AssertionInfo</ref> const &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type><ref refid="struct_catch_1_1_result_was_1a624e1ee3661fcf6094ceef1f654601ef" kindref="member">ResultWas::OfType</ref></type>
          <declname>resultType</declname>
        </param>
        <param>
          <type><ref refid="class_catch_1_1_string_ref" kindref="compound">StringRef</ref> const &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="struct_catch_1_1_assertion_reaction" kindref="compound">AssertionReaction</ref> &amp;</type>
          <declname>reaction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2487" column="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_i_result_capture_1a6382ed20486e2d9a020da971c6d5c53d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Catch::IResultCapture::handleUnexpectedExceptionNotThrown</definition>
        <argsstring>(AssertionInfo const &amp;info, AssertionReaction &amp;reaction)=0</argsstring>
        <name>handleUnexpectedExceptionNotThrown</name>
        <qualifiedname>Catch::IResultCapture::handleUnexpectedExceptionNotThrown</qualifiedname>
        <param>
          <type><ref refid="struct_catch_1_1_assertion_info" kindref="compound">AssertionInfo</ref> const &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type><ref refid="struct_catch_1_1_assertion_reaction" kindref="compound">AssertionReaction</ref> &amp;</type>
          <declname>reaction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2492" column="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_i_result_capture_1afc97bc69829185222f955ebeef97adfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Catch::IResultCapture::handleUnexpectedInflightException</definition>
        <argsstring>(AssertionInfo const &amp;info, std::string const &amp;message, AssertionReaction &amp;reaction)=0</argsstring>
        <name>handleUnexpectedInflightException</name>
        <qualifiedname>Catch::IResultCapture::handleUnexpectedInflightException</qualifiedname>
        <param>
          <type><ref refid="struct_catch_1_1_assertion_info" kindref="compound">AssertionInfo</ref> const &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="struct_catch_1_1_assertion_reaction" kindref="compound">AssertionReaction</ref> &amp;</type>
          <declname>reaction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2495" column="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_i_result_capture_1a89b89372eb09cc44f8dcad363de6157d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Catch::IResultCapture::handleIncomplete</definition>
        <argsstring>(AssertionInfo const &amp;info)=0</argsstring>
        <name>handleIncomplete</name>
        <qualifiedname>Catch::IResultCapture::handleIncomplete</qualifiedname>
        <param>
          <type><ref refid="struct_catch_1_1_assertion_info" kindref="compound">AssertionInfo</ref> const &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2499" column="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_i_result_capture_1ab7dbdf8aa28427119583e24dbb302c63" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Catch::IResultCapture::handleNonExpr</definition>
        <argsstring>(AssertionInfo const &amp;info, ResultWas::OfType resultType, AssertionReaction &amp;reaction)=0</argsstring>
        <name>handleNonExpr</name>
        <qualifiedname>Catch::IResultCapture::handleNonExpr</qualifiedname>
        <param>
          <type><ref refid="struct_catch_1_1_assertion_info" kindref="compound">AssertionInfo</ref> const &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type><ref refid="struct_catch_1_1_result_was_1a624e1ee3661fcf6094ceef1f654601ef" kindref="member">ResultWas::OfType</ref></type>
          <declname>resultType</declname>
        </param>
        <param>
          <type><ref refid="struct_catch_1_1_assertion_reaction" kindref="compound">AssertionReaction</ref> &amp;</type>
          <declname>reaction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2501" column="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_i_result_capture_1a973435fbdcb2f6f07a0ec5719a01e956" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Catch::IResultCapture::lastAssertionPassed</definition>
        <argsstring>()=0</argsstring>
        <name>lastAssertionPassed</name>
        <qualifiedname>Catch::IResultCapture::lastAssertionPassed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2506" column="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_i_result_capture_1a9b0ef2cb071e9a9dc6ec1b533026aea7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Catch::IResultCapture::assertionPassed</definition>
        <argsstring>()=0</argsstring>
        <name>assertionPassed</name>
        <qualifiedname>Catch::IResultCapture::assertionPassed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2507" column="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_i_result_capture_1aea1617f4a84cc648246aa3ed6918b5bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string Catch::IResultCapture::getCurrentTestName</definition>
        <argsstring>() const =0</argsstring>
        <name>getCurrentTestName</name>
        <qualifiedname>Catch::IResultCapture::getCurrentTestName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2510" column="29"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_i_result_capture_1a2f44f3fa0bb898ce1aef650c1e063cc9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const AssertionResult *</type>
        <definition>virtual const AssertionResult * Catch::IResultCapture::getLastResult</definition>
        <argsstring>() const =0</argsstring>
        <name>getLastResult</name>
        <qualifiedname>Catch::IResultCapture::getLastResult</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2511" column="39"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_i_result_capture_1ae63ecec95db4c236c63ecf616f483810" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Catch::IResultCapture::exceptionEarlyReported</definition>
        <argsstring>()=0</argsstring>
        <name>exceptionEarlyReported</name>
        <qualifiedname>Catch::IResultCapture::exceptionEarlyReported</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2512" column="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="2458" column="5" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="2458" bodyend="2513"/>
    <listofallmembers>
      <member refid="struct_catch_1_1_i_result_capture_1a8f93a848e0a48b630ca9ecbf225e4817" prot="public" virt="pure-virtual"><scope>Catch::IResultCapture</scope><name>acquireGeneratorTracker</name></member>
      <member refid="struct_catch_1_1_i_result_capture_1a9b0ef2cb071e9a9dc6ec1b533026aea7" prot="public" virt="pure-virtual"><scope>Catch::IResultCapture</scope><name>assertionPassed</name></member>
      <member refid="struct_catch_1_1_i_result_capture_1a49f74f1323ef8be71b8f9b8e8b2c0fc2" prot="public" virt="pure-virtual"><scope>Catch::IResultCapture</scope><name>emplaceUnscopedMessage</name></member>
      <member refid="struct_catch_1_1_i_result_capture_1ae63ecec95db4c236c63ecf616f483810" prot="public" virt="pure-virtual"><scope>Catch::IResultCapture</scope><name>exceptionEarlyReported</name></member>
      <member refid="struct_catch_1_1_i_result_capture_1aea1617f4a84cc648246aa3ed6918b5bf" prot="public" virt="pure-virtual"><scope>Catch::IResultCapture</scope><name>getCurrentTestName</name></member>
      <member refid="struct_catch_1_1_i_result_capture_1a2f44f3fa0bb898ce1aef650c1e063cc9" prot="public" virt="pure-virtual"><scope>Catch::IResultCapture</scope><name>getLastResult</name></member>
      <member refid="struct_catch_1_1_i_result_capture_1a59a2b05391e464954575d2afb6d5d607" prot="public" virt="pure-virtual"><scope>Catch::IResultCapture</scope><name>handleExpr</name></member>
      <member refid="struct_catch_1_1_i_result_capture_1a48559e6598ba9474b903697b69c769b2" prot="public" virt="pure-virtual"><scope>Catch::IResultCapture</scope><name>handleFatalErrorCondition</name></member>
      <member refid="struct_catch_1_1_i_result_capture_1a89b89372eb09cc44f8dcad363de6157d" prot="public" virt="pure-virtual"><scope>Catch::IResultCapture</scope><name>handleIncomplete</name></member>
      <member refid="struct_catch_1_1_i_result_capture_1a21788ebc64571abf322b80c8cc51794d" prot="public" virt="pure-virtual"><scope>Catch::IResultCapture</scope><name>handleMessage</name></member>
      <member refid="struct_catch_1_1_i_result_capture_1ab7dbdf8aa28427119583e24dbb302c63" prot="public" virt="pure-virtual"><scope>Catch::IResultCapture</scope><name>handleNonExpr</name></member>
      <member refid="struct_catch_1_1_i_result_capture_1a6382ed20486e2d9a020da971c6d5c53d" prot="public" virt="pure-virtual"><scope>Catch::IResultCapture</scope><name>handleUnexpectedExceptionNotThrown</name></member>
      <member refid="struct_catch_1_1_i_result_capture_1afc97bc69829185222f955ebeef97adfe" prot="public" virt="pure-virtual"><scope>Catch::IResultCapture</scope><name>handleUnexpectedInflightException</name></member>
      <member refid="struct_catch_1_1_i_result_capture_1a973435fbdcb2f6f07a0ec5719a01e956" prot="public" virt="pure-virtual"><scope>Catch::IResultCapture</scope><name>lastAssertionPassed</name></member>
      <member refid="struct_catch_1_1_i_result_capture_1a42bcb13276706bf8c3ce081ce16d37fd" prot="public" virt="pure-virtual"><scope>Catch::IResultCapture</scope><name>popScopedMessage</name></member>
      <member refid="struct_catch_1_1_i_result_capture_1a91d154c1e087e383dcde5aad95cb6a05" prot="public" virt="pure-virtual"><scope>Catch::IResultCapture</scope><name>pushScopedMessage</name></member>
      <member refid="struct_catch_1_1_i_result_capture_1a4e152bc43dc0933684e31fa67a58195d" prot="public" virt="pure-virtual"><scope>Catch::IResultCapture</scope><name>sectionEnded</name></member>
      <member refid="struct_catch_1_1_i_result_capture_1afcc71eef8ca821ae132cced4a2be6988" prot="public" virt="pure-virtual"><scope>Catch::IResultCapture</scope><name>sectionEndedEarly</name></member>
      <member refid="struct_catch_1_1_i_result_capture_1a5b76ed52badcb64cf374202e12b81a03" prot="public" virt="pure-virtual"><scope>Catch::IResultCapture</scope><name>sectionStarted</name></member>
      <member refid="struct_catch_1_1_i_result_capture_1a3bd16719d6772b7470887fc36c6d0808" prot="public" virt="virtual"><scope>Catch::IResultCapture</scope><name>~IResultCapture</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
