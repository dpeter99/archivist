<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classvlkx_1_1_render_pass" kind="class" language="C++" prot="public">
    <compoundname>vlkx::RenderPass</compoundname>
    <includes refid="_generic_render_pass_8h" local="no">GenericRenderPass.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classvlkx_1_1_render_pass_1addfea4b39d1bcadab6a6d8df5dc85957" prot="public" static="no">
        <type>std::function&lt; void(const VkCommandBuffer &amp;buffer)&gt;</type>
        <definition>using vlkx::RenderPass::RenderFunc =  std::function&lt;void(const VkCommandBuffer&amp; buffer)&gt;</definition>
        <argsstring></argsstring>
        <name>RenderFunc</name>
        <qualifiedname>vlkx::RenderPass::RenderFunc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="21" column="9" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvlkx_1_1_render_pass_1a4eb5514cd88d1b5faba6c4edb335415b" prot="private" static="no" mutable="no">
        <type>const int</type>
        <definition>const int vlkx::RenderPass::subpassCount</definition>
        <argsstring></argsstring>
        <name>subpassCount</name>
        <qualifiedname>vlkx::RenderPass::subpassCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="48" column="19" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_render_pass_1a7948b5ebd80953183038dc9dd6be5431" prot="private" static="no" mutable="no">
        <type>VkRenderPass</type>
        <definition>VkRenderPass vlkx::RenderPass::renderPass</definition>
        <argsstring></argsstring>
        <name>renderPass</name>
        <qualifiedname>vlkx::RenderPass::renderPass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="50" column="22" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_render_pass_1a7b6776a40c7b427a8b44535ac5718d80" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; VkClearValue &gt;</type>
        <definition>const std::vector&lt;VkClearValue&gt; vlkx::RenderPass::clearValues</definition>
        <argsstring></argsstring>
        <name>clearValues</name>
        <qualifiedname>vlkx::RenderPass::clearValues</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="52" column="27" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_render_pass_1a7817e1fa76d12087660218c5c75e0c40" prot="private" static="no" mutable="no">
        <type>const VkExtent2D</type>
        <definition>const VkExtent2D vlkx::RenderPass::extent</definition>
        <argsstring></argsstring>
        <name>extent</name>
        <qualifiedname>vlkx::RenderPass::extent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="54" column="26" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_render_pass_1a908b338fe7fcac8ec0f9a88d965694ac" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; VkFramebuffer &gt;</type>
        <definition>const std::vector&lt;VkFramebuffer&gt; vlkx::RenderPass::framebuffers</definition>
        <argsstring></argsstring>
        <name>framebuffers</name>
        <qualifiedname>vlkx::RenderPass::framebuffers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="56" column="27" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvlkx_1_1_render_pass_1a6c2c81f360b385f7612281d271386f02" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; int &gt;</type>
        <definition>const std::vector&lt;int&gt; vlkx::RenderPass::attachments</definition>
        <argsstring></argsstring>
        <name>attachments</name>
        <qualifiedname>vlkx::RenderPass::attachments</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="58" column="27" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvlkx_1_1_render_pass_1a756bfdf0ea9bcac053fff81ada2ff53e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vlkx::RenderPass::RenderPass</definition>
        <argsstring>(const RenderPass &amp;)=delete</argsstring>
        <name>RenderPass</name>
        <qualifiedname>vlkx::RenderPass::RenderPass</qualifiedname>
        <param>
          <type>const <ref refid="classvlkx_1_1_render_pass" kindref="compound">RenderPass</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="24" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_render_pass_1a4019d3d9c90a11ba2190b188c1663208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvlkx_1_1_render_pass" kindref="compound">RenderPass</ref> &amp;</type>
        <definition>RenderPass &amp; vlkx::RenderPass::operator=</definition>
        <argsstring>(const RenderPass &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>vlkx::RenderPass::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classvlkx_1_1_render_pass" kindref="compound">RenderPass</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="25" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_render_pass_1a2f0579b2c071510061467512248f0918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vlkx::RenderPass::~RenderPass</definition>
        <argsstring>()</argsstring>
        <name>~RenderPass</name>
        <qualifiedname>vlkx::RenderPass::~RenderPass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="26" column="9" bodyfile="shadow-engine/shadow-renderer/src/render/render_pass/GenericRenderPass.cpp" bodystart="262" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_render_pass_1acbb254aef1f24e48880e4dd082f042c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vlkx::RenderPass::RenderPass</definition>
        <argsstring>(int subpasses, VkRenderPass pass, std::vector&lt; VkClearValue &gt; clear, VkExtent2D ext, std::vector&lt; VkFramebuffer &gt; fbs, std::vector&lt; int &gt; attachs)</argsstring>
        <name>RenderPass</name>
        <qualifiedname>vlkx::RenderPass::RenderPass</qualifiedname>
        <param>
          <type>int</type>
          <declname>subpasses</declname>
        </param>
        <param>
          <type>VkRenderPass</type>
          <declname>pass</declname>
        </param>
        <param>
          <type>std::vector&lt; VkClearValue &gt;</type>
          <declname>clear</declname>
        </param>
        <param>
          <type>VkExtent2D</type>
          <declname>ext</declname>
        </param>
        <param>
          <type>std::vector&lt; VkFramebuffer &gt;</type>
          <declname>fbs</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>attachs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="28" column="9" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="28" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_render_pass_1afb9b0367734044a224bdcb28fd335d4c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const VkRenderPass &amp;</type>
        <definition>const VkRenderPass &amp; vlkx::RenderPass::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <qualifiedname>vlkx::RenderPass::operator*</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="31" column="28" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_render_pass_1aa0536cd727e000f21285e9a086d52607" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vlkx::RenderPass::getAttachsInSubpass</definition>
        <argsstring>(int subpass) const</argsstring>
        <name>getAttachsInSubpass</name>
        <qualifiedname>vlkx::RenderPass::getAttachsInSubpass</qualifiedname>
        <param>
          <type>int</type>
          <declname>subpass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="33" column="13" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_render_pass_1a1c6d2924c6f59a3a58ea160d12a1c553" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vlkx::RenderPass::execute</definition>
        <argsstring>(const VkCommandBuffer &amp;commands, int imageIndex, std::vector&lt; RenderFunc &gt; ops) const</argsstring>
        <name>execute</name>
        <qualifiedname>vlkx::RenderPass::execute</qualifiedname>
        <param>
          <type>const VkCommandBuffer &amp;</type>
          <declname>commands</declname>
        </param>
        <param>
          <type>int</type>
          <declname>imageIndex</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classvlkx_1_1_render_pass_1addfea4b39d1bcadab6a6d8df5dc85957" kindref="member">RenderFunc</ref> &gt;</type>
          <declname>ops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Upload all of the subpass render commands to the command buffer. The size of ops must be equal to the number of subpasses in this render pass. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>commands</parametername>
</parameternamelist>
<parameterdescription>
<para>the command buffer to execute on; must be recording </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>imageIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the image on the swapchain that we&apos;re rendering to; the target framebuffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ops</parametername>
</parameternamelist>
<parameterdescription>
<para>the render operations to add onto the command buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="44" column="14" bodyfile="shadow-engine/shadow-renderer/src/render/render_pass/GenericRenderPass.cpp" bodystart="236" bodyend="260"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Gathers the operations that the GPU should perform when rendering to a framebuffer. Subpasses and dependencies are to be configured automatically using the builder below. <ref refid="classvlkx_1_1_render_pass" kindref="compound">RenderPass</ref> objects are disposable, and should be discarded when the framebuffer changes. </para>
    </detaileddescription>
    <location file="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" line="19" column="5" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h" bodystart="19" bodyend="59"/>
    <listofallmembers>
      <member refid="classvlkx_1_1_render_pass_1a6c2c81f360b385f7612281d271386f02" prot="private" virt="non-virtual"><scope>vlkx::RenderPass</scope><name>attachments</name></member>
      <member refid="classvlkx_1_1_render_pass_1a7b6776a40c7b427a8b44535ac5718d80" prot="private" virt="non-virtual"><scope>vlkx::RenderPass</scope><name>clearValues</name></member>
      <member refid="classvlkx_1_1_render_pass_1a1c6d2924c6f59a3a58ea160d12a1c553" prot="public" virt="non-virtual"><scope>vlkx::RenderPass</scope><name>execute</name></member>
      <member refid="classvlkx_1_1_render_pass_1a7817e1fa76d12087660218c5c75e0c40" prot="private" virt="non-virtual"><scope>vlkx::RenderPass</scope><name>extent</name></member>
      <member refid="classvlkx_1_1_render_pass_1a908b338fe7fcac8ec0f9a88d965694ac" prot="private" virt="non-virtual"><scope>vlkx::RenderPass</scope><name>framebuffers</name></member>
      <member refid="classvlkx_1_1_render_pass_1aa0536cd727e000f21285e9a086d52607" prot="public" virt="non-virtual"><scope>vlkx::RenderPass</scope><name>getAttachsInSubpass</name></member>
      <member refid="classvlkx_1_1_render_pass_1afb9b0367734044a224bdcb28fd335d4c" prot="public" virt="non-virtual"><scope>vlkx::RenderPass</scope><name>operator*</name></member>
      <member refid="classvlkx_1_1_render_pass_1a4019d3d9c90a11ba2190b188c1663208" prot="public" virt="non-virtual"><scope>vlkx::RenderPass</scope><name>operator=</name></member>
      <member refid="classvlkx_1_1_render_pass_1addfea4b39d1bcadab6a6d8df5dc85957" prot="public" virt="non-virtual"><scope>vlkx::RenderPass</scope><name>RenderFunc</name></member>
      <member refid="classvlkx_1_1_render_pass_1a7948b5ebd80953183038dc9dd6be5431" prot="private" virt="non-virtual"><scope>vlkx::RenderPass</scope><name>renderPass</name></member>
      <member refid="classvlkx_1_1_render_pass_1a756bfdf0ea9bcac053fff81ada2ff53e" prot="public" virt="non-virtual"><scope>vlkx::RenderPass</scope><name>RenderPass</name></member>
      <member refid="classvlkx_1_1_render_pass_1acbb254aef1f24e48880e4dd082f042c8" prot="public" virt="non-virtual"><scope>vlkx::RenderPass</scope><name>RenderPass</name></member>
      <member refid="classvlkx_1_1_render_pass_1a4eb5514cd88d1b5faba6c4edb335415b" prot="private" virt="non-virtual"><scope>vlkx::RenderPass</scope><name>subpassCount</name></member>
      <member refid="classvlkx_1_1_render_pass_1a2f0579b2c071510061467512248f0918" prot="public" virt="non-virtual"><scope>vlkx::RenderPass</scope><name>~RenderPass</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
