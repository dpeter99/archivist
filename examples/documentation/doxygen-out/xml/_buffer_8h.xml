<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="_buffer_8h" kind="file" language="C++">
    <compoundname>Buffer.h</compoundname>
    <includes local="no">vulkan/vulkan.h</includes>
    <includes refid="_vulkan_device_8h" local="no">vlkx/vulkan/VulkanDevice.h</includes>
    <includes local="no">variant</includes>
    <includes local="no">vector</includes>
    <includes refid="_tools_8h" local="yes">vlkx/vulkan/Tools.h</includes>
    <includedby refid="_image_8h" local="yes">shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Image.h</includedby>
    <includedby refid="_buffer_8cpp" local="yes">shadow-engine/shadow-renderer/src/vulkan/abstraction/Buffer.cpp</includedby>
    <incdepgraph>
      <node id="14">
        <label>exports.h</label>
        <link refid="exports_8h"/>
      </node>
      <node id="11">
        <label>vlkx/vulkan/Tools.h</label>
        <link refid="_tools_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>vlkx/vulkan/ValidationAndExtension.h</label>
        <link refid="_validation_and_extension_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>vlkx/vulkan/VulkanDevice.h</label>
        <link refid="_vulkan_device_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Buffer.h</label>
        <link refid="_buffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>vulkan/vk_mem_alloc.h</label>
        <link refid="vk__mem__alloc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>SDL.h</label>
      </node>
      <node id="12">
        <label>functional</label>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="7">
        <label>set</label>
      </node>
      <node id="4">
        <label>stdexcept</label>
      </node>
      <node id="10">
        <label>variant</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
      <node id="2">
        <label>vulkan/vulkan.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="14">
        <label>shadow-engine/core/src/core/ShadowApplication.cpp</label>
        <link refid="_shadow_application_8cpp"/>
      </node>
      <node id="4">
        <label>shadow-engine/shadow-renderer/inc/temp/model/Builder.h</label>
        <link refid="_builder_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GPUPass.h</label>
        <link refid="_g_p_u_pass_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/GenericRenderPass.h</label>
        <link refid="_generic_render_pass_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>shadow-engine/shadow-renderer/inc/vlkx/render/render_pass/ScreenRenderPass.h</label>
        <link refid="_screen_render_pass_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>shadow-engine/shadow-renderer/inc/vlkx/render/shader/Pipeline.h</label>
        <link refid="_pipeline_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>shadow-engine/shadow-renderer/inc/vlkx/vulkan/SwapChain.h</label>
        <link refid="_swap_chain_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>shadow-engine/shadow-renderer/inc/vlkx/vulkan/VulkanModule.h</label>
        <link refid="_vulkan_module_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Buffer.h</label>
        <link refid="_buffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Descriptor.h</label>
        <link refid="_descriptor_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Image.h</label>
        <link refid="_image_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>shadow-engine/shadow-renderer/src/render/pipeline/Pipeline.cpp</label>
        <link refid="_pipeline_8cpp"/>
      </node>
      <node id="7">
        <label>shadow-engine/shadow-renderer/src/render/render_pass/GPUPass.cpp</label>
        <link refid="_g_p_u_pass_8cpp"/>
      </node>
      <node id="11">
        <label>shadow-engine/shadow-renderer/src/render/render_pass/GenericRenderPass.cpp</label>
        <link refid="_generic_render_pass_8cpp"/>
      </node>
      <node id="8">
        <label>shadow-engine/shadow-renderer/src/render/render_pass/ScreenRenderPass.cpp</label>
        <link refid="_screen_render_pass_8cpp"/>
      </node>
      <node id="5">
        <label>shadow-engine/shadow-renderer/src/temp/model/Builder.cpp</label>
        <link refid="_builder_8cpp"/>
      </node>
      <node id="19">
        <label>shadow-engine/shadow-renderer/src/vulkan/SwapChain.cpp</label>
        <link refid="_swap_chain_8cpp"/>
      </node>
      <node id="10">
        <label>shadow-engine/shadow-renderer/src/vulkan/VulkanModule.cpp</label>
        <link refid="_vulkan_module_8cpp"/>
      </node>
      <node id="20">
        <label>shadow-engine/shadow-renderer/src/vulkan/abstraction/Buffer.cpp</label>
        <link refid="_buffer_8cpp"/>
      </node>
      <node id="21">
        <label>shadow-engine/shadow-renderer/src/vulkan/abstraction/Commands.cpp</label>
        <link refid="_commands_8cpp"/>
      </node>
      <node id="18">
        <label>shadow-engine/shadow-renderer/src/vulkan/abstraction/Descriptor.cpp</label>
        <link refid="_descriptor_8cpp"/>
      </node>
      <node id="22">
        <label>shadow-engine/shadow-renderer/src/vulkan/abstraction/Image.cpp</label>
        <link refid="_image_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classvlkx_1_1_buffer" prot="public">vlkx::Buffer</innerclass>
    <innerclass refid="structvlkx_1_1_buffer_1_1_copy_meta" prot="public">vlkx::Buffer::CopyMeta</innerclass>
    <innerclass refid="structvlkx_1_1_buffer_1_1_bulk_copy_meta" prot="public">vlkx::Buffer::BulkCopyMeta</innerclass>
    <innerclass refid="classvlkx_1_1_data_buffer" prot="public">vlkx::DataBuffer</innerclass>
    <innerclass refid="classvlkx_1_1_staging_buffer" prot="public">vlkx::StagingBuffer</innerclass>
    <innerclass refid="classvlkx_1_1_vertex_buffer" prot="public">vlkx::VertexBuffer</innerclass>
    <innerclass refid="classvlkx_1_1_dynamic_buffer" prot="public">vlkx::DynamicBuffer</innerclass>
    <innerclass refid="classvlkx_1_1_per_vertex_buffer" prot="public">vlkx::PerVertexBuffer</innerclass>
    <innerclass refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta" prot="public">vlkx::PerVertexBuffer::VertexDataMeta</innerclass>
    <innerclass refid="classvlkx_1_1_per_vertex_buffer_1_1_buffer_data_meta" prot="public">vlkx::PerVertexBuffer::BufferDataMeta</innerclass>
    <innerclass refid="classvlkx_1_1_per_vertex_buffer_1_1_no_index_buffer_meta" prot="public">vlkx::PerVertexBuffer::NoIndexBufferMeta</innerclass>
    <innerclass refid="classvlkx_1_1_per_vertex_buffer_1_1_shared_index_meta" prot="public">vlkx::PerVertexBuffer::SharedIndexMeta</innerclass>
    <innerclass refid="classvlkx_1_1_per_vertex_buffer_1_1_no_share_meta" prot="public">vlkx::PerVertexBuffer::NoShareMeta</innerclass>
    <innerclass refid="structvlkx_1_1_per_vertex_buffer_1_1_no_share_meta_1_1_per_mesh" prot="public">vlkx::PerVertexBuffer::NoShareMeta::PerMesh</innerclass>
    <innerclass refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_no_index" prot="protected">vlkx::PerVertexBuffer::MeshDataNoIndex</innerclass>
    <innerclass refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_no_index_1_1_info" prot="public">vlkx::PerVertexBuffer::MeshDataNoIndex::Info</innerclass>
    <innerclass refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_index" prot="protected">vlkx::PerVertexBuffer::MeshDataIndex</innerclass>
    <innerclass refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_index_1_1_info" prot="public">vlkx::PerVertexBuffer::MeshDataIndex::Info</innerclass>
    <innerclass refid="classvlkx_1_1_static_per_vertex_buffer" prot="public">vlkx::StaticPerVertexBuffer</innerclass>
    <innerclass refid="classvlkx_1_1_dynamic_per_vertex_buffer" prot="public">vlkx::DynamicPerVertexBuffer</innerclass>
    <innerclass refid="classvlkx_1_1_per_instance_vertex_buffer" prot="public">vlkx::PerInstanceVertexBuffer</innerclass>
    <innerclass refid="classvlkx_1_1_static_per_instance_buffer" prot="public">vlkx::StaticPerInstanceBuffer</innerclass>
    <innerclass refid="classvlkx_1_1_dynamic_per_instance_buffer" prot="public">vlkx::DynamicPerInstanceBuffer</innerclass>
    <innerclass refid="classvlkx_1_1_uniform_buffer" prot="public">vlkx::UniformBuffer</innerclass>
    <innerclass refid="classvlkx_1_1_push_constant" prot="public">vlkx::PushConstant</innerclass>
    <innernamespace refid="namespacevlkx">vlkx</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vulkan/vulkan.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_vulkan_device_8h" kindref="compound">vlkx/vulkan/VulkanDevice.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;variant&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_tools_8h" kindref="compound">vlkx/vulkan/Tools.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevlkx" kindref="compound">vlkx</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Root<sp/>buffer<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>store<sp/>&amp;<sp/>move<sp/>data<sp/>between<sp/>the<sp/>CPU<sp/>and<sp/>GPU.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Basically;<sp/>hotspot!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Utilities<sp/>and<sp/>subclasses<sp/>exist<sp/>to<sp/>optimise<sp/>and<sp/>speed<sp/>up<sp/>transfer<sp/>and<sp/>management<sp/>of<sp/>data<sp/>in<sp/>bulk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="classvlkx_1_1_buffer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_buffer" kindref="compound">Buffer</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Metadata<sp/>of<sp/>CPU-&gt;GPU<sp/>data<sp/>copying.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="structvlkx_1_1_buffer_1_1_copy_meta" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvlkx_1_1_buffer_1_1_copy_meta" kindref="compound">CopyMeta</ref><sp/>{</highlight></codeline>
<codeline lineno="18" refid="structvlkx_1_1_buffer_1_1_copy_meta_1a73a083b5ff75be2a9b6715317ab06a8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structvlkx_1_1_buffer_1_1_copy_meta_1a73a083b5ff75be2a9b6715317ab06a8d" kindref="member">data</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>start<sp/>of<sp/>data<sp/>in<sp/>RAM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="structvlkx_1_1_buffer_1_1_copy_meta_1a2e0c8f5906e114ab568593448f709092" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDeviceSize<sp/><ref refid="structvlkx_1_1_buffer_1_1_copy_meta_1a2e0c8f5906e114ab568593448f709092" kindref="member">length</ref>;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>amount<sp/>of<sp/>data<sp/>to<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="structvlkx_1_1_buffer_1_1_copy_meta_1ac12a0cb06c0503fa3fd678d684412e35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDeviceSize<sp/><ref refid="structvlkx_1_1_buffer_1_1_copy_meta_1ac12a0cb06c0503fa3fd678d684412e35" kindref="member">start</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>start<sp/>(destination)<sp/>in<sp/>GPU<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Metadata<sp/>of<sp/>bulk<sp/>CPU-&gt;GPU<sp/>data<sp/>copying.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structvlkx_1_1_buffer_1_1_bulk_copy_meta" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvlkx_1_1_buffer_1_1_bulk_copy_meta" kindref="compound">BulkCopyMeta</ref><sp/>{</highlight></codeline>
<codeline lineno="25" refid="structvlkx_1_1_buffer_1_1_bulk_copy_meta_1a4b3019d4c432197c62427bbabe3c0d85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDeviceSize<sp/><ref refid="structvlkx_1_1_buffer_1_1_bulk_copy_meta_1a4b3019d4c432197c62427bbabe3c0d85" kindref="member">length</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>total<sp/>data<sp/>size<sp/>of<sp/>all<sp/>transfers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="structvlkx_1_1_buffer_1_1_bulk_copy_meta_1a5b166be6fdfc74aa27d2dab83eaf119f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;CopyMeta&gt;<sp/><ref refid="structvlkx_1_1_buffer_1_1_bulk_copy_meta_1a5b166be6fdfc74aa27d2dab83eaf119f" kindref="member">metas</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classvlkx_1_1_buffer_1a8ad640258cbc9aa645ed68e3c320af99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_buffer_1a8ad640258cbc9aa645ed68e3c320af99" kindref="member">Buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_buffer" kindref="compound">Buffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30" refid="classvlkx_1_1_buffer_1a9971cfc28a88cebf00d2642baa5cd72e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_buffer" kindref="compound">Buffer</ref>&amp;<sp/><ref refid="classvlkx_1_1_buffer_1a9971cfc28a88cebf00d2642baa5cd72e" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_buffer" kindref="compound">Buffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_buffer_1a055bf8f2da8b0c7084493579a2f27ccb" kindref="member">Buffer</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classvlkx_1_1_buffer_1a5ad6564545b79d1ce612ebf2b6fc44f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_buffer_1a5ad6564545b79d1ce612ebf2b6fc44f7" kindref="member">~Buffer</ref>()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/*******************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/*******************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>buffer<sp/>that<sp/>stores<sp/>data<sp/>on<sp/>GPU.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Usage<sp/>of<sp/>the<sp/>data<sp/>is<sp/>determined<sp/>by<sp/>child<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classvlkx_1_1_data_buffer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_data_buffer" kindref="compound">DataBuffer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_buffer" kindref="compound">Buffer</ref><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50" refid="classvlkx_1_1_data_buffer_1ad6b6ba2e5dd942b42f66a3f5c04e87a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_data_buffer_1ad6b6ba2e5dd942b42f66a3f5c04e87a3" kindref="member">DataBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_data_buffer" kindref="compound">DataBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51" refid="classvlkx_1_1_data_buffer_1a0caf832cd047de702e77433a3e97dc8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_data_buffer" kindref="compound">DataBuffer</ref>&amp;<sp/><ref refid="classvlkx_1_1_data_buffer_1a0caf832cd047de702e77433a3e97dc8d" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_data_buffer" kindref="compound">DataBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classvlkx_1_1_data_buffer_1a3abb23c2d7be5c18b266478202796c9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_data_buffer_1a3abb23c2d7be5c18b266478202796c9b" kindref="member">DataBuffer</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classvlkx_1_1_data_buffer_1abe2a28ce8e68a76cda222d51bfca0ac0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_data_buffer_1abe2a28ce8e68a76cda222d51bfca0ac0" kindref="member">~DataBuffer</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__alloc_1gafcc45e5a6388ab35daa9a46688baee20" kindref="member">vmaDestroyBuffer</ref>(<ref refid="namespace_vk_tools_1a7195f698aad36f4aa2a4a9e977991486" kindref="member">VkTools::allocator</ref>,<sp/>managed.<ref refid="struct_vk_tools_1_1_managed_buffer_1a4a63e43746b5713e791a312c9589c45b" kindref="member">buffer</ref>,<sp/>managed.<ref refid="struct_vk_tools_1_1_managed_buffer_1a2d7664529ca0f860a68dbb00d0b57236" kindref="member">allocation</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_buffer_1a055bf8f2da8b0c7084493579a2f27ccb" kindref="member">Buffer::Buffer</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classvlkx_1_1_data_buffer_1ab4e03d32dd898176c66e13d19d7d2fa8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_data_buffer_1ab4e03d32dd898176c66e13d19d7d2fa8" kindref="member">setBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vk_tools_1_1_managed_buffer" kindref="compound">VkTools::ManagedBuffer</ref>&amp;<sp/>buffer)<sp/>{<sp/>managed<sp/>=<sp/>buffer;<sp/>}</highlight></codeline>
<codeline lineno="63" refid="classvlkx_1_1_data_buffer_1a0b3ac1c5f2d714165c994f65e18b6604" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vk_tools_1_1_managed_buffer" kindref="compound">VkTools::ManagedBuffer</ref><sp/><ref refid="classvlkx_1_1_data_buffer_1a0b3ac1c5f2d714165c994f65e18b6604" kindref="member">get</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>managed;<sp/>}</highlight></codeline>
<codeline lineno="64" refid="classvlkx_1_1_data_buffer_1a9e10436c90954e0f4e213af704e10707" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkBuffer&amp;<sp/><ref refid="classvlkx_1_1_data_buffer_1a9e10436c90954e0f4e213af704e10707" kindref="member">getBuffer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>managed.<ref refid="struct_vk_tools_1_1_managed_buffer_1a4a63e43746b5713e791a312c9589c45b" kindref="member">buffer</ref>;<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vk_tools_1_1_managed_buffer" kindref="compound">VkTools::ManagedBuffer</ref><sp/>managed;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>buffer<sp/>visible<sp/>to<sp/>both<sp/>GPU<sp/>and<sp/>CPU.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Useful<sp/>for<sp/>uploading<sp/>data<sp/>to<sp/>GPU<sp/>for<sp/>format<sp/>conversions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classvlkx_1_1_staging_buffer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_staging_buffer" kindref="compound">StagingBuffer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_data_buffer" kindref="compound">DataBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_staging_buffer" kindref="compound">StagingBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structvlkx_1_1_buffer_1_1_bulk_copy_meta" kindref="compound">BulkCopyMeta</ref>&amp;<sp/>copyMeta);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classvlkx_1_1_staging_buffer_1a20026e42c12d5fbb85d45f8e91e9ba3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_staging_buffer_1a20026e42c12d5fbb85d45f8e91e9ba3d" kindref="member">StagingBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_staging_buffer" kindref="compound">StagingBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77" refid="classvlkx_1_1_staging_buffer_1add31b32562c544033de76ea7f67459c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_staging_buffer" kindref="compound">StagingBuffer</ref>&amp;<sp/><ref refid="classvlkx_1_1_staging_buffer_1add31b32562c544033de76ea7f67459c4" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_staging_buffer" kindref="compound">StagingBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_staging_buffer_1a75488a173a2aec4715172f51ab4bc472" kindref="member">copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkBuffer&amp;<sp/>target)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkDeviceSize<sp/>dataSize;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Root<sp/>class<sp/>of<sp/>vertex<sp/>buffers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Provides<sp/>utilities<sp/>for<sp/>subclasses.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classvlkx_1_1_vertex_buffer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_vertex_buffer" kindref="compound">VertexBuffer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_data_buffer" kindref="compound">DataBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="89" refid="classvlkx_1_1_vertex_buffer_1a3a57f3575d6852d24b8df1307c90cd78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_vertex_buffer_1a3a57f3575d6852d24b8df1307c90cd78" kindref="member">VertexBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_vertex_buffer" kindref="compound">VertexBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90" refid="classvlkx_1_1_vertex_buffer_1aca19fea4a31e96e9dbea2e77e5a2ea1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_vertex_buffer" kindref="compound">VertexBuffer</ref>&amp;<sp/><ref refid="classvlkx_1_1_vertex_buffer_1aca19fea4a31e96e9dbea2e77e5a2ea1c" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_vertex_buffer" kindref="compound">VertexBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>attributes<sp/>of<sp/>vertexes<sp/>in<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Location<sp/>will<sp/>start<sp/>from<sp/>&quot;start&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Binding<sp/>will<sp/>not<sp/>be<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;VkVertexInputAttributeDescription&gt;<sp/><ref refid="classvlkx_1_1_vertex_buffer_1af7102131161f21cbf3a52653971324f8" kindref="member">getAttrs</ref>(uint32_t<sp/>start)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>these<sp/>vertexes<sp/>without<sp/>a<sp/>buffer<sp/>per<sp/>vertex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_vertex_buffer_1a84a1d2695206f30ab3eaf15a0d9f101b" kindref="member">draw</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkCommandBuffer&amp;<sp/>buffer,<sp/>uint32_t<sp/>verts,<sp/>uint32_t<sp/>instances);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="101" refid="classvlkx_1_1_vertex_buffer_1aa0d0f6c6be956c2f74a49ff5cd4bc540" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_dynamic_buffer" kindref="compound">DynamicBuffer</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classvlkx_1_1_vertex_buffer_1aceabde3791209d5801d823d020db7721" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_vertex_buffer_1aceabde3791209d5801d823d020db7721" kindref="member">VertexBuffer</ref>(std::vector&lt;VkVertexInputAttributeDescription&gt;&amp;&amp;<sp/>attrs)<sp/>:<sp/><ref refid="classvlkx_1_1_data_buffer" kindref="compound">DataBuffer</ref>(),<sp/><ref refid="classvlkx_1_1_vertex_buffer_1acac05ae64c87a431410d0537dd7bfb73" kindref="member">attributes</ref>(attrs)<sp/>{}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>device<sp/>memory<sp/>and<sp/>the<sp/>managed<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>indices<sp/>and<sp/>vertexes<sp/>are<sp/>put<sp/>in<sp/>the<sp/>same<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>dynamic,<sp/>the<sp/>buffer<sp/>will<sp/>be<sp/>host<sp/>visible,<sp/>this<sp/>allows<sp/>dynamic<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise,<sp/>the<sp/>buffer<sp/>is<sp/>device<sp/>local.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_vertex_buffer_1ad7d395f14fe512540318e0bb971ec712" kindref="member">create</ref>(VkDeviceSize<sp/>totalSize,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dynamic,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>indexes);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classvlkx_1_1_vertex_buffer_1acac05ae64c87a431410d0537dd7bfb73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;VkVertexInputAttributeDescription&gt;<sp/><ref refid="classvlkx_1_1_vertex_buffer_1acac05ae64c87a431410d0537dd7bfb73" kindref="member">attributes</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/*******************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/*******************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>simple<sp/>plugin<sp/>to<sp/>allow<sp/>the<sp/>vertex<sp/>buffer<sp/>to<sp/>be<sp/>widened<sp/>when<sp/>reserved<sp/>with<sp/>a<sp/>larger<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classvlkx_1_1_dynamic_buffer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_dynamic_buffer" kindref="compound">DynamicBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="123" refid="classvlkx_1_1_dynamic_buffer_1ae154564533d70ba373c1ea10a555c84b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_dynamic_buffer_1ae154564533d70ba373c1ea10a555c84b" kindref="member">DynamicBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_dynamic_buffer" kindref="compound">DynamicBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124" refid="classvlkx_1_1_dynamic_buffer_1a3464c563bd9bb7cde9c24ce445b8baeb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_dynamic_buffer" kindref="compound">DynamicBuffer</ref>&amp;<sp/><ref refid="classvlkx_1_1_dynamic_buffer_1a3464c563bd9bb7cde9c24ce445b8baeb" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_dynamic_buffer" kindref="compound">DynamicBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classvlkx_1_1_dynamic_buffer_1a36e307aced2e98f70a97f038e976362c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_dynamic_buffer_1a36e307aced2e98f70a97f038e976362c" kindref="member">~DynamicBuffer</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_dynamic_buffer" kindref="compound">DynamicBuffer</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasIndices,<sp/><ref refid="classvlkx_1_1_vertex_buffer" kindref="compound">VertexBuffer</ref>*<sp/>buffer);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reallocate<sp/>the<sp/>vertex<sp/>buffer<sp/>if<sp/>the<sp/>given<sp/>pSize<sp/>is<sp/>larger<sp/>than<sp/>the<sp/>available<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_dynamic_buffer_1a79af7656c5731942ab9c1dac6fac28d3" kindref="member">resize</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pSize);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classvlkx_1_1_dynamic_buffer_1a44ede5c75c9deee8f3b1b9326b172901" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDeviceSize<sp/><ref refid="classvlkx_1_1_dynamic_buffer_1a44ede5c75c9deee8f3b1b9326b172901" kindref="member">bufferSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size;<sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasIndices;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_vertex_buffer" kindref="compound">VertexBuffer</ref>*<sp/>vertexBuffer;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDeviceSize<sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/*******************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/*******************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Root<sp/>class<sp/>of<sp/>buffers<sp/>that<sp/>store<sp/>per-vertex<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eg.<sp/>shader<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classvlkx_1_1_per_vertex_buffer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_per_vertex_buffer" kindref="compound">PerVertexBuffer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_vertex_buffer" kindref="compound">VertexBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Interprets<sp/>the<sp/>layout<sp/>of<sp/>data<sp/>in<sp/>containers<sp/>(vector,<sp/>etc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta" kindref="compound">VertexDataMeta</ref><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="157" refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta_1a28968e85b1f74d59e9a3bd4387341dcd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta_1a28968e85b1f74d59e9a3bd4387341dcd" kindref="member">VertexDataMeta</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>C&amp;<sp/>cont,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta_1a5826fde82c59bebc5f770d4e46ced96b" kindref="member">unitsPerMesh</ref>)<sp/>:<sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta_1a9b63253ad14a5307a6642ee3ae1712d5" kindref="member">data</ref>(cont.<ref refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta_1a9b63253ad14a5307a6642ee3ae1712d5" kindref="member">data</ref>()),<sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta_1a5826fde82c59bebc5f770d4e46ced96b" kindref="member">unitsPerMesh</ref>(<ref refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta_1a5826fde82c59bebc5f770d4e46ced96b" kindref="member">unitsPerMesh</ref>),<sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta_1a439eb2a4eefb4498f9685e42f8298a99" kindref="member">sizePerMesh</ref>(sizeof(cont[0])<sp/>*<sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta_1a5826fde82c59bebc5f770d4e46ced96b" kindref="member">unitsPerMesh</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="160" refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta_1a38a43b8b9f241a48b6df9321e292d82b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta_1a38a43b8b9f241a48b6df9321e292d82b" kindref="member">VertexDataMeta</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>C&amp;<sp/>cont)<sp/>:<sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta" kindref="compound">VertexDataMeta</ref>(cont,<sp/>static_cast&lt;int&gt;(cont.size()))<sp/>{}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta_1a9b63253ad14a5307a6642ee3ae1712d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta_1a9b63253ad14a5307a6642ee3ae1712d5" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="163" refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta_1a5826fde82c59bebc5f770d4e46ced96b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta_1a5826fde82c59bebc5f770d4e46ced96b" kindref="member">unitsPerMesh</ref>;</highlight></codeline>
<codeline lineno="164" refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta_1a439eb2a4eefb4498f9685e42f8298a99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta_1a439eb2a4eefb4498f9685e42f8298a99" kindref="member">sizePerMesh</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Interface<sp/>for<sp/>buffer<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classvlkx_1_1_per_vertex_buffer_1_1_buffer_data_meta" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_per_vertex_buffer_1_1_buffer_data_meta" kindref="compound">BufferDataMeta</ref><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="170" refid="classvlkx_1_1_per_vertex_buffer_1_1_buffer_data_meta_1ab87f45d5f8c1e9e552b31affa690428d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_vertex_buffer_1_1_buffer_data_meta_1ab87f45d5f8c1e9e552b31affa690428d" kindref="member">~BufferDataMeta</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Populate<sp/>info<sp/>and<sp/>return<sp/>a<sp/>bulk<sp/>copy<sp/>meta<sp/>for<sp/>copying<sp/>the<sp/>data<sp/>to<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="classvlkx_1_1_per_vertex_buffer_1_1_buffer_data_meta_1a9bfe5d7b1374f46259825fc4786bd03a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structvlkx_1_1_buffer_1_1_bulk_copy_meta" kindref="compound">BulkCopyMeta</ref><sp/><ref refid="classvlkx_1_1_per_vertex_buffer_1_1_buffer_data_meta_1a9bfe5d7b1374f46259825fc4786bd03a" kindref="member">prepareCopy</ref>(<ref refid="classvlkx_1_1_per_vertex_buffer" kindref="compound">PerVertexBuffer</ref>*<sp/>buffer)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indicate<sp/>whether<sp/>the<sp/>buffer<sp/>contains<sp/>index<sp/>data<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="classvlkx_1_1_per_vertex_buffer_1_1_buffer_data_meta_1a069ecd344c42d854be14ed4b8112d4ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_vertex_buffer_1_1_buffer_data_meta_1a069ecd344c42d854be14ed4b8112d4ba" kindref="member">hasIndices</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Meshes<sp/>do<sp/>not<sp/>share<sp/>indices,<sp/>with<sp/>variable<sp/>vertices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="classvlkx_1_1_per_vertex_buffer_1_1_no_index_buffer_meta" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_per_vertex_buffer_1_1_no_index_buffer_meta" kindref="compound">NoIndexBufferMeta</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_vertex_buffer_1_1_buffer_data_meta" kindref="compound">BufferDataMeta</ref><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="180" refid="classvlkx_1_1_per_vertex_buffer_1_1_no_index_buffer_meta_1a7c5050827f5d595dcd50aeff20a0def6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_vertex_buffer_1_1_no_index_buffer_meta_1a7c5050827f5d595dcd50aeff20a0def6" kindref="member">NoIndexBufferMeta</ref>(std::vector&lt;VertexDataMeta&gt;&amp;&amp;<sp/>perVertex)<sp/>:<sp/>perMeshVertices(perVertex)<sp/>{}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvlkx_1_1_buffer_1_1_bulk_copy_meta" kindref="compound">BulkCopyMeta</ref><sp/><ref refid="classvlkx_1_1_per_vertex_buffer_1_1_no_index_buffer_meta_1a20043bf43b895493db4f1b28b01ae616" kindref="member">prepareCopy</ref>(<ref refid="classvlkx_1_1_per_vertex_buffer" kindref="compound">PerVertexBuffer</ref>*<sp/>buffer)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183" refid="classvlkx_1_1_per_vertex_buffer_1_1_no_index_buffer_meta_1a4e65239e8d6ac202c2176474174f106c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_vertex_buffer_1_1_no_index_buffer_meta_1a4e65239e8d6ac202c2176474174f106c" kindref="member">hasIndices</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;VertexDataMeta&gt;<sp/>perMeshVertices;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Meshes<sp/>share<sp/>indices,<sp/>with<sp/>static<sp/>vertices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="classvlkx_1_1_per_vertex_buffer_1_1_shared_index_meta" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_per_vertex_buffer_1_1_shared_index_meta" kindref="compound">SharedIndexMeta</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_vertex_buffer_1_1_buffer_data_meta" kindref="compound">BufferDataMeta</ref><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="191" refid="classvlkx_1_1_per_vertex_buffer_1_1_shared_index_meta_1a2a7d4c45e92dbc5dcc962835d17191df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_per_vertex_buffer_1_1_shared_index_meta_1a2a7d4c45e92dbc5dcc962835d17191df" kindref="member">SharedIndexMeta</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>meshes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta" kindref="compound">VertexDataMeta</ref>&amp;<sp/>perVertex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta" kindref="compound">VertexDataMeta</ref>&amp;<sp/>sharedIndices)<sp/>:<sp/>meshes(meshes),</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perMeshVertex(perVertex),</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedIndices(sharedIndices)<sp/>{}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvlkx_1_1_buffer_1_1_bulk_copy_meta" kindref="compound">BulkCopyMeta</ref><sp/><ref refid="classvlkx_1_1_per_vertex_buffer_1_1_shared_index_meta_1a78b66a1c0940298d8138c52fb9519e6f" kindref="member">prepareCopy</ref>(<ref refid="classvlkx_1_1_per_vertex_buffer" kindref="compound">PerVertexBuffer</ref>*<sp/>buffer)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195" refid="classvlkx_1_1_per_vertex_buffer_1_1_shared_index_meta_1a979aa4a533f36e862ee128f2ca3a85c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_vertex_buffer_1_1_shared_index_meta_1a979aa4a533f36e862ee128f2ca3a85c8" kindref="member">hasIndices</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>};</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>meshes;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta" kindref="compound">VertexDataMeta</ref><sp/>perMeshVertex;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta" kindref="compound">VertexDataMeta</ref><sp/>sharedIndices;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Meshes<sp/>do<sp/>not<sp/>share<sp/>indexes,<sp/>with<sp/>variable<sp/>indices<sp/>and<sp/>vertices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="classvlkx_1_1_per_vertex_buffer_1_1_no_share_meta" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_per_vertex_buffer_1_1_no_share_meta" kindref="compound">NoShareMeta</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_vertex_buffer_1_1_buffer_data_meta" kindref="compound">BufferDataMeta</ref><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="205" refid="structvlkx_1_1_per_vertex_buffer_1_1_no_share_meta_1_1_per_mesh" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_no_share_meta_1_1_per_mesh" kindref="compound">PerMesh</ref><sp/>{</highlight></codeline>
<codeline lineno="206" refid="structvlkx_1_1_per_vertex_buffer_1_1_no_share_meta_1_1_per_mesh_1a23b56c2d28e76f26db35a90598425629" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta" kindref="compound">VertexDataMeta</ref><sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_no_share_meta_1_1_per_mesh_1a23b56c2d28e76f26db35a90598425629" kindref="member">indices</ref>;</highlight></codeline>
<codeline lineno="207" refid="structvlkx_1_1_per_vertex_buffer_1_1_no_share_meta_1_1_per_mesh_1a1ce27e91025db3e43895726f91250ef3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_vertex_data_meta" kindref="compound">VertexDataMeta</ref><sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_no_share_meta_1_1_per_mesh_1a1ce27e91025db3e43895726f91250ef3" kindref="member">vertices</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="classvlkx_1_1_per_vertex_buffer_1_1_no_share_meta_1ac1bab92ce6e4cf6213d9bc42dfa0faab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_vertex_buffer_1_1_no_share_meta_1ac1bab92ce6e4cf6213d9bc42dfa0faab" kindref="member">NoShareMeta</ref>(std::vector&lt;PerMesh&gt;&amp;&amp;<sp/>perMesh)<sp/>:<sp/>perMeshMeta(std::move(perMesh))<sp/>{}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvlkx_1_1_buffer_1_1_bulk_copy_meta" kindref="compound">BulkCopyMeta</ref><sp/><ref refid="classvlkx_1_1_per_vertex_buffer_1_1_no_share_meta_1ab7125acf0bbbc2114b77fefde6cdfde1" kindref="member">prepareCopy</ref>(<ref refid="classvlkx_1_1_per_vertex_buffer" kindref="compound">PerVertexBuffer</ref>*<sp/>buffer)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213" refid="classvlkx_1_1_per_vertex_buffer_1_1_no_share_meta_1a406e48420305c6edc9f542246830ce4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_vertex_buffer_1_1_no_share_meta_1a406e48420305c6edc9f542246830ce4f" kindref="member">hasIndices</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>};</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;PerMesh&gt;<sp/>perMeshMeta;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="classvlkx_1_1_per_vertex_buffer_1a214a48b48c35de1cf5860c719cea2ad4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_per_vertex_buffer_1a214a48b48c35de1cf5860c719cea2ad4" kindref="member">PerVertexBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_vertex_buffer" kindref="compound">PerVertexBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219" refid="classvlkx_1_1_per_vertex_buffer_1ad49c5fc7f036a3b9ebf063226cbe91e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_per_vertex_buffer" kindref="compound">PerVertexBuffer</ref>&amp;<sp/><ref refid="classvlkx_1_1_per_vertex_buffer_1ad49c5fc7f036a3b9ebf063226cbe91e7" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_vertex_buffer" kindref="compound">PerVertexBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>mesh<sp/>a<sp/>given<sp/>number<sp/>of<sp/>times,<sp/>into<sp/>a<sp/>recording<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_vertex_buffer_1ac84ee2304eaa21919dedf2009aea7cd4" kindref="member">draw</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkCommandBuffer&amp;<sp/>buffer,<sp/>uint32_t<sp/>bind,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/>uint32_t<sp/>instances)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_vertex_buffer_1a3a57f3575d6852d24b8df1307c90cd78" kindref="member">VertexBuffer::VertexBuffer</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stores<sp/>vertex<sp/>data<sp/>for<sp/>buffers<sp/>without<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_no_index" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_no_index" kindref="compound">MeshDataNoIndex</ref><sp/>{</highlight></codeline>
<codeline lineno="229" refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_no_index_1_1_info" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_no_index_1_1_info" kindref="compound">Info</ref><sp/>{</highlight></codeline>
<codeline lineno="230" refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_no_index_1_1_info_1a07251027005f483e662f0b039110e882" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_no_index_1_1_info_1a07251027005f483e662f0b039110e882" kindref="member">vertexCount</ref>;</highlight></codeline>
<codeline lineno="231" refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_no_index_1_1_info_1a04691cbee2754169ea634d99db898ffc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDeviceSize<sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_no_index_1_1_info_1a04691cbee2754169ea634d99db898ffc" kindref="member">vertexStart</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_no_index_1a9cc004d44d34d2d4e3ad92eaea13cbe6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Info&gt;<sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_no_index_1a9cc004d44d34d2d4e3ad92eaea13cbe6" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stores<sp/>vertex<sp/>and<sp/>index<sp/>data<sp/>for<sp/>buffers<sp/>with<sp/>both</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_index" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_index" kindref="compound">MeshDataIndex</ref><sp/>{</highlight></codeline>
<codeline lineno="239" refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_index_1_1_info" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_index_1_1_info" kindref="compound">Info</ref><sp/>{</highlight></codeline>
<codeline lineno="240" refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_index_1_1_info_1afe0dcc5f5a5a42b9f335790521d49dd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_index_1_1_info_1afe0dcc5f5a5a42b9f335790521d49dd0" kindref="member">indexCount</ref>;</highlight></codeline>
<codeline lineno="241" refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_index_1_1_info_1aba062acb4393248d1fb13bd431856c08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDeviceSize<sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_index_1_1_info_1aba062acb4393248d1fb13bd431856c08" kindref="member">indexStart</ref>;</highlight></codeline>
<codeline lineno="242" refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_index_1_1_info_1a25ad1b33e8fc1f317721f0724c16f9a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDeviceSize<sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_index_1_1_info_1a25ad1b33e8fc1f317721f0724c16f9a0" kindref="member">vertexStart</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_index_1a9eceb0aacd33eb4d06a029522a205fe9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Info&gt;<sp/><ref refid="structvlkx_1_1_per_vertex_buffer_1_1_mesh_data_index_1a9eceb0aacd33eb4d06a029522a205fe9" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="classvlkx_1_1_per_vertex_buffer_1a769276fcf21937804f549e2a5395d01e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::variant&lt;MeshDataNoIndex,<sp/>MeshDataIndex&gt;*<sp/><ref refid="classvlkx_1_1_per_vertex_buffer_1a769276fcf21937804f549e2a5395d01e" kindref="member">getInfo</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;meshDataInfo;<sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::variant&lt;MeshDataNoIndex,<sp/>MeshDataIndex&gt;<sp/>meshDataInfo;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stores<sp/>static<sp/>data<sp/>for<sp/>one-time<sp/>upload.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="classvlkx_1_1_static_per_vertex_buffer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_static_per_vertex_buffer" kindref="compound">StaticPerVertexBuffer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_vertex_buffer" kindref="compound">PerVertexBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_static_per_vertex_buffer" kindref="compound">StaticPerVertexBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_vertex_buffer_1_1_buffer_data_meta" kindref="compound">BufferDataMeta</ref>&amp;<sp/>info,<sp/>std::vector&lt;VkVertexInputAttributeDescription&gt;&amp;&amp;<sp/>attrs);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="classvlkx_1_1_static_per_vertex_buffer_1ac9bc2a7a3a938df4b46317e2378f53ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_static_per_vertex_buffer_1ac9bc2a7a3a938df4b46317e2378f53ad" kindref="member">StaticPerVertexBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_static_per_vertex_buffer" kindref="compound">StaticPerVertexBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261" refid="classvlkx_1_1_static_per_vertex_buffer_1a66d82b79f1d28b571b691b6593ac8769" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_static_per_vertex_buffer" kindref="compound">StaticPerVertexBuffer</ref>&amp;<sp/><ref refid="classvlkx_1_1_static_per_vertex_buffer_1a66d82b79f1d28b571b691b6593ac8769" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_static_per_vertex_buffer" kindref="compound">StaticPerVertexBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stores<sp/>host-visible<sp/>data<sp/>that<sp/>can<sp/>be<sp/>reallocated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="classvlkx_1_1_dynamic_per_vertex_buffer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_dynamic_per_vertex_buffer" kindref="compound">DynamicPerVertexBuffer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_vertex_buffer" kindref="compound">PerVertexBuffer</ref>,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_dynamic_buffer" kindref="compound">DynamicBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="267" refid="classvlkx_1_1_dynamic_per_vertex_buffer_1a4f6be1d58dcad4611025489abf7de6e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_dynamic_per_vertex_buffer_1a4f6be1d58dcad4611025489abf7de6e7" kindref="member">DynamicPerVertexBuffer</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/>std::vector&lt;VkVertexInputAttributeDescription&gt;&amp;&amp;<sp/>attrs)<sp/>:<sp/><ref refid="classvlkx_1_1_per_vertex_buffer" kindref="compound">PerVertexBuffer</ref>(std::move(attrs)),<sp/><ref refid="classvlkx_1_1_dynamic_buffer" kindref="compound">DynamicBuffer</ref>(size,<sp/>true,<sp/>this)<sp/>{}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="classvlkx_1_1_dynamic_per_vertex_buffer_1ad1ffad039a08cba0763b21795188d158" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_dynamic_per_vertex_buffer_1ad1ffad039a08cba0763b21795188d158" kindref="member">DynamicPerVertexBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_dynamic_per_vertex_buffer" kindref="compound">DynamicPerVertexBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270" refid="classvlkx_1_1_dynamic_per_vertex_buffer_1af43f709da7342aad52631e923b16e760" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_dynamic_per_vertex_buffer" kindref="compound">DynamicPerVertexBuffer</ref>&amp;<sp/><ref refid="classvlkx_1_1_dynamic_per_vertex_buffer_1af43f709da7342aad52631e923b16e760" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_dynamic_per_vertex_buffer" kindref="compound">DynamicPerVertexBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_dynamic_per_vertex_buffer_1ab66029b15fb9b0ca5b2172d57c053a27" kindref="member">copyToDevice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_vertex_buffer_1_1_buffer_data_meta" kindref="compound">BufferDataMeta</ref>&amp;<sp/>meta);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/*******************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/*******************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Root<sp/>class<sp/>of<sp/>buffers<sp/>that<sp/>store<sp/>vertex<sp/>data<sp/>per<sp/>instance<sp/>of<sp/>a<sp/>mesh.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="classvlkx_1_1_per_instance_vertex_buffer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_per_instance_vertex_buffer" kindref="compound">PerInstanceVertexBuffer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_vertex_buffer" kindref="compound">VertexBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="284" refid="classvlkx_1_1_per_instance_vertex_buffer_1acc6425d534b0abe14c24c78a864532e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_per_instance_vertex_buffer_1acc6425d534b0abe14c24c78a864532e8" kindref="member">PerInstanceVertexBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_instance_vertex_buffer" kindref="compound">PerInstanceVertexBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285" refid="classvlkx_1_1_per_instance_vertex_buffer_1ae9345162e624bfff5922b57159336016" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_per_instance_vertex_buffer" kindref="compound">PerInstanceVertexBuffer</ref>&amp;<sp/><ref refid="classvlkx_1_1_per_instance_vertex_buffer_1ae9345162e624bfff5922b57159336016" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_instance_vertex_buffer" kindref="compound">PerInstanceVertexBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_instance_vertex_buffer_1a13f7de7c325adb97284000e9cbb6fe78" kindref="member">bind</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkCommandBuffer&amp;<sp/>commands,<sp/>uint32_t<sp/>bindPoint,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="classvlkx_1_1_per_instance_vertex_buffer_1a464fb2dc542029bb71c5af7afe32a47e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="classvlkx_1_1_per_instance_vertex_buffer_1a464fb2dc542029bb71c5af7afe32a47e" kindref="member">getSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sizePerInstance;<sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="292" refid="classvlkx_1_1_per_instance_vertex_buffer_1a18c790870716d8ec6cd7590d1e44175c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_per_instance_vertex_buffer_1a18c790870716d8ec6cd7590d1e44175c" kindref="member">PerInstanceVertexBuffer</ref>(uint32_t<sp/>size,<sp/>std::vector&lt;VkVertexInputAttributeDescription&gt;&amp;&amp;<sp/>attrs)<sp/>:<sp/><ref refid="classvlkx_1_1_vertex_buffer" kindref="compound">VertexBuffer</ref>(std::move(attrs)),<sp/>sizePerInstance(size)<sp/>{}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>sizePerInstance;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stores<sp/>vertices<sp/>that<sp/>are<sp/>static<sp/>per<sp/>instance<sp/>of<sp/>the<sp/>mesh.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="classvlkx_1_1_static_per_instance_buffer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_static_per_instance_buffer" kindref="compound">StaticPerInstanceBuffer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_instance_vertex_buffer" kindref="compound">PerInstanceVertexBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_static_per_instance_buffer" kindref="compound">StaticPerInstanceBuffer</ref>(uint32_t<sp/>size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/>uint32_t<sp/>instances,<sp/>std::vector&lt;VkVertexInputAttributeDescription&gt;&amp;&amp;<sp/>attrs);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="303" refid="classvlkx_1_1_static_per_instance_buffer_1ad637ea8539ab80f1d524630e5cfa7978" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_static_per_instance_buffer_1ad637ea8539ab80f1d524630e5cfa7978" kindref="member">StaticPerInstanceBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>C&amp;<sp/>cont,<sp/>std::vector&lt;VkVertexInputAttributeDescription&gt;&amp;&amp;<sp/>attrs)<sp/>:<sp/><ref refid="classvlkx_1_1_static_per_instance_buffer" kindref="compound">StaticPerInstanceBuffer</ref>(sizeof(cont[0]),<sp/>cont.data(),<sp/>CONTAINER_SIZE(cont),<sp/>std::move(attrs))<sp/>{}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="classvlkx_1_1_static_per_instance_buffer_1abdcabdc024f3a3dab4eeb4ebafc38a99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_static_per_instance_buffer_1abdcabdc024f3a3dab4eeb4ebafc38a99" kindref="member">StaticPerInstanceBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_static_per_instance_buffer" kindref="compound">StaticPerInstanceBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306" refid="classvlkx_1_1_static_per_instance_buffer_1a44097d3f0488ad50fd98d74c9f42a508" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_static_per_instance_buffer" kindref="compound">StaticPerInstanceBuffer</ref>&amp;<sp/><ref refid="classvlkx_1_1_static_per_instance_buffer_1a44097d3f0488ad50fd98d74c9f42a508" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_static_per_instance_buffer" kindref="compound">StaticPerInstanceBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stores<sp/>vertices<sp/>of<sp/>meshes<sp/>that<sp/>are<sp/>dynamic<sp/>(ie.<sp/>text,<sp/>shifting<sp/>meshes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="classvlkx_1_1_dynamic_per_instance_buffer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_dynamic_per_instance_buffer" kindref="compound">DynamicPerInstanceBuffer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_per_instance_vertex_buffer" kindref="compound">PerInstanceVertexBuffer</ref>,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_dynamic_buffer" kindref="compound">DynamicBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="312" refid="classvlkx_1_1_dynamic_per_instance_buffer_1af8ff3af419f7fda88fd60e078da990d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_dynamic_per_instance_buffer_1af8ff3af419f7fda88fd60e078da990d8" kindref="member">DynamicPerInstanceBuffer</ref>(uint32_t<sp/>size,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxInstances,<sp/>std::vector&lt;VkVertexInputAttributeDescription&gt;&amp;&amp;<sp/>attrs)<sp/>:<sp/><ref refid="classvlkx_1_1_per_instance_vertex_buffer" kindref="compound">PerInstanceVertexBuffer</ref>(size,<sp/>std::move(attrs)),<sp/><ref refid="classvlkx_1_1_dynamic_buffer" kindref="compound">DynamicBuffer</ref>(size<sp/>*<sp/>maxInstances,<sp/>false,<sp/>this)<sp/>{}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="classvlkx_1_1_dynamic_per_instance_buffer_1aac6363b031477cbffe777895d4b08645" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_dynamic_per_instance_buffer_1aac6363b031477cbffe777895d4b08645" kindref="member">DynamicPerInstanceBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_dynamic_per_instance_buffer" kindref="compound">DynamicPerInstanceBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315" refid="classvlkx_1_1_dynamic_per_instance_buffer_1add134f92741844ac5d58e17dc8d63fb4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_dynamic_per_instance_buffer" kindref="compound">DynamicPerInstanceBuffer</ref>&amp;<sp/><ref refid="classvlkx_1_1_dynamic_per_instance_buffer_1add134f92741844ac5d58e17dc8d63fb4" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_dynamic_per_instance_buffer" kindref="compound">DynamicPerInstanceBuffer</ref>*)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_dynamic_per_instance_buffer_1a236ec7ed6ac4bd38dc81aa4179ca4130" kindref="member">copyToDevice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/>uint32_t<sp/>instances);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="320" refid="classvlkx_1_1_dynamic_per_instance_buffer_1acca012e334fdd9043e7c7beded704210" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_dynamic_per_instance_buffer_1acca012e334fdd9043e7c7beded704210" kindref="member">copyToDevice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>C&amp;<sp/>cont)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_dynamic_per_instance_buffer_1a236ec7ed6ac4bd38dc81aa4179ca4130" kindref="member">copyToDevice</ref>(cont.data(),<sp/>CONTAINER_SIZE(cont));</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/*******************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/*******************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Holds<sp/>uniform<sp/>data<sp/>on<sp/>host<sp/>and<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Supports<sp/>superallocating<sp/>(allocating<sp/>more<sp/>than<sp/>one<sp/>&quot;set&quot;<sp/>of<sp/>uniforms<sp/>at<sp/>once)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>is<sp/>stored<sp/>on<sp/>host<sp/>and<sp/>device<sp/>simultaneously,<sp/>so<sp/>set<sp/>the<sp/>host<sp/>data<sp/>and<sp/>flush<sp/>it<sp/>to<sp/>the<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="classvlkx_1_1_uniform_buffer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_uniform_buffer" kindref="compound">UniformBuffer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_data_buffer" kindref="compound">DataBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_uniform_buffer" kindref="compound">UniformBuffer</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>chunkSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunks);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="classvlkx_1_1_uniform_buffer_1a648821dbea6b0ffbbd3f13a41053e3ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_uniform_buffer_1a648821dbea6b0ffbbd3f13a41053e3ab" kindref="member">UniformBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_uniform_buffer" kindref="compound">UniformBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339" refid="classvlkx_1_1_uniform_buffer_1a3e256cf500ccf981f215406ed33842a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_uniform_buffer" kindref="compound">UniformBuffer</ref>&amp;<sp/><ref refid="classvlkx_1_1_uniform_buffer_1a3e256cf500ccf981f215406ed33842a1" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_uniform_buffer" kindref="compound">UniformBuffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="classvlkx_1_1_uniform_buffer_1a44193bf3984a80445be46070ad5d8dc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_uniform_buffer_1a44193bf3984a80445be46070ad5d8dc7" kindref="member">~UniformBuffer</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>data;<sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Whether<sp/>this<sp/>buffer<sp/>holds<sp/>a<sp/>single<sp/>chunk<sp/>(is<sp/>not<sp/>superallocated).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simplifies<sp/>certain<sp/>algorithms<sp/>significantly<sp/>if<sp/>you<sp/>know<sp/>this<sp/>beforehand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="classvlkx_1_1_uniform_buffer_1ad773538c0bba60aabb36cda4c5c77953" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_uniform_buffer_1ad773538c0bba60aabb36cda4c5c77953" kindref="member">isSingle</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numChunks<sp/>==<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>data<sp/>in<sp/>the<sp/>buffer,<sp/>casted<sp/>to<sp/>the<sp/>given<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="349" refid="classvlkx_1_1_uniform_buffer_1a2f21434a116f6c471c2599043ef83e61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType*<sp/><ref refid="classvlkx_1_1_uniform_buffer_1a2f21434a116f6c471c2599043ef83e61" kindref="member">getData</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkIndex(index);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">DataType*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data<sp/>+<sp/>chunkSize<sp/>*<sp/>index);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upload<sp/>(flush)<sp/>the<sp/>uniform<sp/>to<sp/>the<sp/>GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_uniform_buffer_1a82e0cff12712a2d5bde1e43825b93a90" kindref="member">upload</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_uniform_buffer_1a82e0cff12712a2d5bde1e43825b93a90" kindref="member">upload</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/>VkDeviceSize<sp/>dataSize,<sp/>VkDeviceSize<sp/>start)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="classvlkx_1_1_uniform_buffer_1a3ceb7d90af28f4566f1f3ae70b6f9625" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>VkDescriptorType<sp/><ref refid="classvlkx_1_1_uniform_buffer_1a3ceb7d90af28f4566f1f3ae70b6f9625" kindref="member">getDescriptorType</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER;<sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDescriptorBufferInfo<sp/><ref refid="classvlkx_1_1_uniform_buffer_1a1bfe9ab3765d15b0def77d23c908bdc4" kindref="member">getDescriptorInfo</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkIndex(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>chunkSize;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numChunks;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>chunkLength;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>small,<sp/>highly<sp/>efficient<sp/>buffer<sp/>much<sp/>like<sp/>the<sp/>Uniform<sp/>Buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="classvlkx_1_1_push_constant" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvlkx_1_1_push_constant" kindref="compound">PushConstant</ref><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Size<sp/>must<sp/>be<sp/>&lt;<sp/>128.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_push_constant" kindref="compound">PushConstant</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="classvlkx_1_1_push_constant_1af4cd1dfd8ef6f8a6183a1466ccb0ef12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_push_constant_1af4cd1dfd8ef6f8a6183a1466ccb0ef12" kindref="member">PushConstant</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_push_constant" kindref="compound">PushConstant</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379" refid="classvlkx_1_1_push_constant_1af6916ce8875ebc90cdc5d69adc5240cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_push_constant" kindref="compound">PushConstant</ref>&amp;<sp/><ref refid="classvlkx_1_1_push_constant_1af6916ce8875ebc90cdc5d69adc5240cc" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_push_constant" kindref="compound">PushConstant</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="classvlkx_1_1_push_constant_1a884a67681a62c6021096affc7eecca42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvlkx_1_1_push_constant_1a884a67681a62c6021096affc7eecca42" kindref="member">~PushConstant</ref>()<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>data;<sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Whether<sp/>this<sp/>buffer<sp/>holds<sp/>a<sp/>single<sp/>chunk<sp/>(is<sp/>not<sp/>superallocated).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simplifies<sp/>certain<sp/>algorithms<sp/>significantly<sp/>if<sp/>you<sp/>know<sp/>this<sp/>beforehand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="classvlkx_1_1_push_constant_1aa810da26cb63be220e50ba886520a26a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_push_constant_1aa810da26cb63be220e50ba886520a26a" kindref="member">isSingle</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numFrames<sp/>==<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="classvlkx_1_1_push_constant_1ae4cd1276f8ddd6ca9d53cd8d45374505" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="classvlkx_1_1_push_constant_1ae4cd1276f8ddd6ca9d53cd8d45374505" kindref="member">getSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sizePerFrame;<sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>data<sp/>in<sp/>the<sp/>buffer,<sp/>casted<sp/>to<sp/>the<sp/>given<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="391" refid="classvlkx_1_1_push_constant_1abeb841753cb80add25ba5230895fccf2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType*<sp/><ref refid="classvlkx_1_1_push_constant_1abeb841753cb80add25ba5230895fccf2" kindref="member">getData</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkIndex(frame);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">DataType*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data<sp/>+<sp/>(sizePerFrame<sp/>*<sp/>frame));</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="classvlkx_1_1_push_constant_1a828c947cca273206776cb74e381a5c86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkPushConstantRange<sp/><ref refid="classvlkx_1_1_push_constant_1a828c947cca273206776cb74e381a5c86" kindref="member">makeRange</ref>(VkShaderStageFlags<sp/>stage)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VkPushConstantRange<sp/>{<sp/>stage,<sp/>0,<sp/>sizePerFrame<sp/>};</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upload<sp/>(flush)<sp/>the<sp/>uniform<sp/>to<sp/>the<sp/>GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvlkx_1_1_push_constant_1a840dfeb6401622a09ee40767bf496d52" kindref="member">upload</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkCommandBuffer&amp;<sp/>commands,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkPipelineLayout&amp;<sp/>pipelineLayout,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame,<sp/>uint32_t<sp/>offset,<sp/>VkShaderStageFlags<sp/>stage)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkIndex(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>sizePerFrame;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Buffer.h"/>
  </compounddef>
</doxygen>
