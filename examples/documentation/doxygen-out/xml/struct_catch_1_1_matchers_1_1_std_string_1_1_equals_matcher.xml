<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="struct_catch_1_1_matchers_1_1_std_string_1_1_equals_matcher" kind="struct" language="C++" prot="public">
    <compoundname>Catch::Matchers::StdString::EqualsMatcher</compoundname>
    <basecompoundref refid="struct_catch_1_1_matchers_1_1_std_string_1_1_string_matcher_base" prot="public" virt="non-virtual">Catch::Matchers::StdString::StringMatcherBase</basecompoundref>
    <includes refid="catch_8hpp" local="no">catch.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_catch_1_1_matchers_1_1_std_string_1_1_equals_matcher_1ab740f1fb2310e9fe3fed5134d4c7e4c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Catch::Matchers::StdString::EqualsMatcher::EqualsMatcher</definition>
        <argsstring>(CasedString const &amp;comparator)</argsstring>
        <name>EqualsMatcher</name>
        <qualifiedname>Catch::Matchers::StdString::EqualsMatcher::EqualsMatcher</qualifiedname>
        <param>
          <type><ref refid="struct_catch_1_1_matchers_1_1_std_string_1_1_cased_string" kindref="compound">CasedString</ref> const &amp;</type>
          <declname>comparator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="3557" column="13"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1_matchers_1_1_std_string_1_1_equals_matcher_1a0bb9d64693f7bb1ef7441062d219f21a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Catch::Matchers::StdString::EqualsMatcher::match</definition>
        <argsstring>(std::string const &amp;source) const override</argsstring>
        <name>match</name>
        <qualifiedname>Catch::Matchers::StdString::EqualsMatcher::match</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="3558" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Catch::Matchers::Impl::MatcherBase&lt; T &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Catch::Matchers::Impl::MatcherUntypedBase</label>
        <link refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base"/>
      </node>
      <node id="1">
        <label>Catch::Matchers::StdString::EqualsMatcher</label>
        <link refid="struct_catch_1_1_matchers_1_1_std_string_1_1_equals_matcher"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Catch::Matchers::StdString::StringMatcherBase</label>
        <link refid="struct_catch_1_1_matchers_1_1_std_string_1_1_string_matcher_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Catch::Matchers::Impl::MatcherMethod&lt; T &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_method"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>Catch::Matchers::Impl::MatcherBase&lt; T &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Catch::Matchers::Impl::MatcherUntypedBase</label>
        <link refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base"/>
      </node>
      <node id="6">
        <label>Catch::Matchers::StdString::CasedString</label>
        <link refid="struct_catch_1_1_matchers_1_1_std_string_1_1_cased_string"/>
      </node>
      <node id="1">
        <label>Catch::Matchers::StdString::EqualsMatcher</label>
        <link refid="struct_catch_1_1_matchers_1_1_std_string_1_1_equals_matcher"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Catch::Matchers::StdString::StringMatcherBase</label>
        <link refid="struct_catch_1_1_matchers_1_1_std_string_1_1_string_matcher_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_comparator</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>Catch::Matchers::Impl::MatcherMethod&lt; T &gt;</label>
        <link refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_method"/>
      </node>
    </collaborationgraph>
    <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="3556" column="9" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="3556" bodyend="3559"/>
    <listofallmembers>
      <member refid="struct_catch_1_1_matchers_1_1_std_string_1_1_string_matcher_base_1a47af030f8cea42a601ffb1000eea5cca" prot="public" virt="virtual"><scope>Catch::Matchers::StdString::EqualsMatcher</scope><name>describe</name></member>
      <member refid="struct_catch_1_1_matchers_1_1_std_string_1_1_equals_matcher_1ab740f1fb2310e9fe3fed5134d4c7e4c8" prot="public" virt="non-virtual"><scope>Catch::Matchers::StdString::EqualsMatcher</scope><name>EqualsMatcher</name></member>
      <member refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a951095c462657e7097a9a6dc4dde813f" prot="protected" virt="non-virtual"><scope>Catch::Matchers::StdString::EqualsMatcher</scope><name>m_cachedToString</name></member>
      <member refid="struct_catch_1_1_matchers_1_1_std_string_1_1_string_matcher_base_1a17c9f0fe40587070ffe998c193742831" prot="public" virt="non-virtual"><scope>Catch::Matchers::StdString::EqualsMatcher</scope><name>m_comparator</name></member>
      <member refid="struct_catch_1_1_matchers_1_1_std_string_1_1_string_matcher_base_1a7a25c4b7d863e9a1c406d81efd0f83ca" prot="public" virt="non-virtual"><scope>Catch::Matchers::StdString::EqualsMatcher</scope><name>m_operation</name></member>
      <member refid="struct_catch_1_1_matchers_1_1_std_string_1_1_equals_matcher_1a0bb9d64693f7bb1ef7441062d219f21a" prot="public" virt="non-virtual"><scope>Catch::Matchers::StdString::EqualsMatcher</scope><name>match</name></member>
      <member refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_method_1ae0920ff9e817acf08e1bb0cbcb044e30" prot="public" virt="pure-virtual" ambiguityscope="Catch::Matchers::StdString::StringMatcherBase::"><scope>Catch::Matchers::StdString::EqualsMatcher</scope><name>match</name></member>
      <member refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1ab65764dc245d85e2b268d3be870b650a" prot="public" virt="non-virtual"><scope>Catch::Matchers::StdString::EqualsMatcher</scope><name>MatcherUntypedBase</name></member>
      <member refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a985fd3c3ffcc9f2e8dc7a330130040b0" prot="public" virt="non-virtual"><scope>Catch::Matchers::StdString::EqualsMatcher</scope><name>MatcherUntypedBase</name></member>
      <member refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base_1a5bb94bf2ff5c7ef73b7c11eb173bdf3b" prot="public" virt="non-virtual"><scope>Catch::Matchers::StdString::EqualsMatcher</scope><name>operator!</name></member>
      <member refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base_1aae4a9827601f6f26a52126e193d012de" prot="public" virt="non-virtual"><scope>Catch::Matchers::StdString::EqualsMatcher</scope><name>operator&amp;&amp;</name></member>
      <member refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a1d446c018ecedb2ef633d9426d5f7914" prot="public" virt="non-virtual"><scope>Catch::Matchers::StdString::EqualsMatcher</scope><name>operator=</name></member>
      <member refid="struct_catch_1_1_matchers_1_1_impl_1_1_matcher_base_1a5f8542b8f1567a6f9c65d0a6da7b679b" prot="public" virt="non-virtual"><scope>Catch::Matchers::StdString::EqualsMatcher</scope><name>operator||</name></member>
      <member refid="struct_catch_1_1_matchers_1_1_std_string_1_1_string_matcher_base_1a3a9b66bae298ae27058478529b4bb39d" prot="public" virt="non-virtual"><scope>Catch::Matchers::StdString::EqualsMatcher</scope><name>StringMatcherBase</name></member>
      <member refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a5982c7c80ca71dfe2298babadad7a453" prot="public" virt="non-virtual"><scope>Catch::Matchers::StdString::EqualsMatcher</scope><name>toString</name></member>
      <member refid="class_catch_1_1_matchers_1_1_impl_1_1_matcher_untyped_base_1a853be93ce33f71b5abede38081c79e9d" prot="protected" virt="virtual"><scope>Catch::Matchers::StdString::EqualsMatcher</scope><name>~MatcherUntypedBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
