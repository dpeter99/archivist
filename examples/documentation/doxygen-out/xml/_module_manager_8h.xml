<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="_module_manager_8h" kind="file" language="C++">
    <compoundname>ModuleManager.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">list</includes>
    <includes refid="_module_8h" local="yes">Module.h</includes>
    <includedby refid="_shadow_application_8h" local="yes">shadow-engine/core/inc/core/ShadowApplication.h</includedby>
    <includedby refid="_module_manager_8cpp" local="yes">shadow-engine/core/src/core/ModuleManager.cpp</includedby>
    <includedby refid="_debug_module_8cpp" local="yes">shadow-engine/core/src/debug/DebugModule.cpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>Module.h</label>
        <link refid="_module_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>shadow-engine/core/inc/core/ModuleManager.h</label>
        <link refid="_module_manager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>exports.h</label>
        <link refid="exports_8h"/>
      </node>
      <node id="5">
        <label>SHObject.h</label>
        <link refid="_s_h_object_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>vlkx/vulkan/ValidationAndExtension.h</label>
        <link refid="_validation_and_extension_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>vlkx/vulkan/VulkanDevice.h</label>
        <link refid="_vulkan_device_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>vlkx/vulkan/abstraction/Commands.h</label>
        <link refid="_commands_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Queue.h</label>
        <link refid="_queue_8h"/>
      </node>
      <node id="19">
        <label>SDL.h</label>
      </node>
      <node id="9">
        <label>SDL_events.h</label>
      </node>
      <node id="20">
        <label>functional</label>
      </node>
      <node id="15">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>list</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
      <node id="21">
        <label>optional</label>
      </node>
      <node id="17">
        <label>set</label>
      </node>
      <node id="14">
        <label>stdexcept</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="7">
        <label>typeinfo</label>
      </node>
      <node id="16">
        <label>vector</label>
      </node>
      <node id="11">
        <label>vulkan/vulkan.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>shadow-engine/core/inc/core/ModuleManager.h</label>
        <link refid="_module_manager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>shadow-engine/core/inc/core/ShadowApplication.h</label>
        <link refid="_shadow_application_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>shadow-engine/core/src/core/ModuleManager.cpp</label>
        <link refid="_module_manager_8cpp"/>
      </node>
      <node id="3">
        <label>shadow-engine/core/src/core/ShadowApplication.cpp</label>
        <link refid="_shadow_application_8cpp"/>
      </node>
      <node id="8">
        <label>shadow-engine/core/src/debug/DebugModule.cpp</label>
        <link refid="_debug_module_8cpp"/>
      </node>
      <node id="4">
        <label>shadow-engine/shadow-entity/Entities/Camera.cpp</label>
        <link refid="shadow-entity_2_entities_2_camera_8cpp"/>
      </node>
      <node id="5">
        <label>shadow-engine/shadow-renderer/src/vulkan/VulkanModule.cpp</label>
        <link refid="_vulkan_module_8cpp"/>
      </node>
      <node id="6">
        <label>shadow-runtime/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_shadow_engine_1_1_module_ref" prot="public">ShadowEngine::ModuleRef</innerclass>
    <innerclass refid="class_shadow_engine_1_1_module_manager" prot="public">ShadowEngine::ModuleManager</innerclass>
    <innernamespace refid="namespace_shadow_engine">ShadowEngine</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>UMBRA_MODULEMANAGER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UMBRA_MODULEMANAGER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_module_8h" kindref="compound">Module.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_shadow_engine" kindref="compound">ShadowEngine</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="struct_shadow_engine_1_1_module_ref" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_shadow_engine_1_1_module_ref" kindref="compound">ModuleRef</ref>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="12" refid="struct_shadow_engine_1_1_module_ref_1a4c57d8b50050dc329ff9ca62323bf4e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Module&gt;<sp/><ref refid="struct_shadow_engine_1_1_module_ref_1a4c57d8b50050dc329ff9ca62323bf4e5" kindref="member">module</ref>;</highlight></codeline>
<codeline lineno="13" refid="struct_shadow_engine_1_1_module_ref_1ac3648c7349602877355cc61f675975b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="struct_shadow_engine_1_1_module_ref_1ac3648c7349602877355cc61f675975b9" kindref="member">domain</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reinterpret<sp/>this<sp/>module<sp/>as<sp/>if<sp/>it<sp/>were<sp/>a<sp/>Renderer<sp/>Module.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>shortcut<sp/>for<sp/>`std::static_pointer_cast&lt;std::shared_ptr&lt;RendererModule&gt;&gt;(ShadowEngine::ModuleManager::instance-&gt;GetModule(&quot;renderer&quot;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="struct_shadow_engine_1_1_module_ref_1ad7341404a5da92f556edb2e63ade2a32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;RendererModule&gt;<sp/><ref refid="struct_shadow_engine_1_1_module_ref_1ad7341404a5da92f556edb2e63ade2a32" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::static_pointer_cast&lt;RendererModule&gt;(<ref refid="struct_shadow_engine_1_1_module_ref_1a4c57d8b50050dc329ff9ca62323bf4e5" kindref="member">module</ref>);<sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_shadow_engine_1_1_module_manager" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_shadow_engine_1_1_module_manager" kindref="compound">ModuleManager</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22" refid="class_shadow_engine_1_1_module_manager_1a691a4e9a4c1765f94582e08e3b5664d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>API<sp/><ref refid="class_shadow_engine_1_1_module_manager" kindref="compound">ModuleManager</ref><sp/>*<ref refid="class_shadow_engine_1_1_module_manager_1a691a4e9a4c1765f94582e08e3b5664d2" kindref="member">instance</ref>;</highlight></codeline>
<codeline lineno="23" refid="class_shadow_engine_1_1_module_manager_1a245c3eb71623700631edbeca788f8595" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_shadow_engine_1_1_module_manager" kindref="compound">ModuleManager</ref>*<sp/><ref refid="class_shadow_engine_1_1_module_manager_1a245c3eb71623700631edbeca788f8595" kindref="member">getInstance</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_shadow_engine_1_1_module_manager_1a691a4e9a4c1765f94582e08e3b5664d2" kindref="member">instance</ref>;<sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_shadow_engine_1_1_module_manager_1a8d881b5909eef6738a150eb49f1b7450" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::list&lt;ModuleRef&gt;<sp/><ref refid="class_shadow_engine_1_1_module_manager_1a8d881b5909eef6738a150eb49f1b7450" kindref="member">modules</ref>;</highlight></codeline>
<codeline lineno="26" refid="class_shadow_engine_1_1_module_manager_1a7534711c540bf4f3b98b2bc9d7a51e32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_shadow_engine_1_1_module_ref" kindref="compound">ModuleRef</ref><sp/><ref refid="class_shadow_engine_1_1_module_manager_1a7534711c540bf4f3b98b2bc9d7a51e32" kindref="member">renderer</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_shadow_engine_1_1_module_manager_1a6b3b298f17563e70ff82f79f2d031e14" kindref="member">ModuleManager</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_shadow_engine_1_1_module_manager_1ace441d41057e814e68213be7c618b9ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_shadow_engine_1_1_module_manager_1ace441d41057e814e68213be7c618b9ec" kindref="member">~ModuleManager</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_shadow_engine_1_1_module_manager_1a04ea1e10f45811ec0601841f7a460067" kindref="member">PushModule</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Module&gt;&amp;<sp/>module,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>domain);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_shadow_engine_1_1_module" kindref="compound">Module</ref><sp/>&amp;<ref refid="class_shadow_engine_1_1_module_manager_1a0c61a583d1abbcc3e6df90edd6aca7bf" kindref="member">GetModule</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="37" refid="class_shadow_engine_1_1_module_manager_1a87929c62313db7ee8b7a15830623189f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>*<ref refid="class_shadow_engine_1_1_module_manager_1a87929c62313db7ee8b7a15830623189f" kindref="member">GetModuleByType</ref>()<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;module:<sp/><ref refid="class_shadow_engine_1_1_module_manager_1a8d881b5909eef6738a150eb49f1b7450" kindref="member">modules</ref>)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(module.module-&gt;GetTypeId()<sp/>==<sp/>T::TypeId())</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">T<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(module.module.get());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//SH_CORE_ERROR(&quot;Can&apos;t<sp/>find<sp/>the<sp/>module<sp/>{0}&quot;,<sp/>T::Type());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_shadow_engine_1_1_module_manager_1a8c3806b1ee6584e65e97078388b7d8ab" kindref="member">Init</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_shadow_engine_1_1_module_manager_1a8ba6387331cc5b577a46e2e54d2bf40b" kindref="member">Update</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_shadow_engine_1_1_module_manager_1ad7ebac80aa58792360552d5ccb673897" kindref="member">LateRender</ref>(VkCommandBuffer&amp;<sp/>commands,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_shadow_engine_1_1_module_manager_1aceb079e97edadeb2aace98b644f6996d" kindref="member">OverlayRender</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_shadow_engine_1_1_module_manager_1a7bd59afd6aa1641371f1ca23605e2487" kindref="member">Recreate</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_shadow_engine_1_1_module_manager_1add5f72f04d637c3593d53241a42af1d2" kindref="member">Render</ref>(VkCommandBuffer&amp;<sp/>commands,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_shadow_engine_1_1_module_manager_1aef4445b3338958b022ebf672d9e7d3ca" kindref="member">PreRender</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_shadow_engine_1_1_module_manager_1a9009c7b1182aca8d47c3cb7bf5f3ecd7" kindref="member">AfterFrameEnd</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_shadow_engine_1_1_module_manager_1addf33063f213eb14abf0d16c272efe24" kindref="member">Destroy</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_shadow_engine_1_1_module_manager_1a4c4ebe0991128e0f2bf7044be0eb9802" kindref="member">Event</ref>(SDL_Event*<sp/>evt);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//UMBRA_MODULEMANAGER_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="shadow-engine/core/inc/core/ModuleManager.h"/>
  </compounddef>
</doxygen>
