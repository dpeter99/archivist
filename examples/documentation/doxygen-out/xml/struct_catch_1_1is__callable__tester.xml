<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="struct_catch_1_1is__callable__tester" kind="struct" language="C++" prot="public">
    <compoundname>Catch::is_callable_tester</compoundname>
    <includes refid="catch_8hpp" local="no">catch.hpp</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_catch_1_1is__callable__tester_1a9f770cae4c16dfa96d4c0299a6b4f980" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Fun</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_catch_1_1true__given" kindref="compound">true_given</ref>&lt; decltype(std::declval&lt; Fun &gt;()(std::declval&lt; Args &gt;()...))&gt;</type>
        <definition>static true_given&lt; decltype(std::declval&lt; Fun &gt;()(std::declval&lt; Args &gt;()...))&gt; Catch::is_callable_tester::test</definition>
        <argsstring>(int)</argsstring>
        <name>test</name>
        <qualifiedname>Catch::is_callable_tester::test</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="930" column="31"/>
      </memberdef>
      <memberdef kind="function" id="struct_catch_1_1is__callable__tester_1adce16c4accb860bf46f6491dd70cfd63" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
          </param>
        </templateparamlist>
        <type>std::false_type</type>
        <definition>static std::false_type Catch::is_callable_tester::test</definition>
        <argsstring>(...)</argsstring>
        <name>test</name>
        <qualifiedname>Catch::is_callable_tester::test</qualifiedname>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="932" column="32"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="shadow-engine/shadow-file-format/test/catch2/catch.hpp" line="928" column="5" bodyfile="shadow-engine/shadow-file-format/test/catch2/catch.hpp" bodystart="928" bodyend="933"/>
    <listofallmembers>
      <member refid="struct_catch_1_1is__callable__tester_1a9f770cae4c16dfa96d4c0299a6b4f980" prot="public" virt="non-virtual"><scope>Catch::is_callable_tester</scope><name>test</name></member>
      <member refid="struct_catch_1_1is__callable__tester_1adce16c4accb860bf46f6491dd70cfd63" prot="public" virt="non-virtual"><scope>Catch::is_callable_tester</scope><name>test</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
