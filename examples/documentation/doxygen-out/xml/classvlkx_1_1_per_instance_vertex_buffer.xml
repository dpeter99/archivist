<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classvlkx_1_1_per_instance_vertex_buffer" kind="class" language="C++" prot="public">
    <compoundname>vlkx::PerInstanceVertexBuffer</compoundname>
    <basecompoundref refid="classvlkx_1_1_vertex_buffer" prot="public" virt="non-virtual">vlkx::VertexBuffer</basecompoundref>
    <derivedcompoundref refid="classvlkx_1_1_dynamic_per_instance_buffer" prot="public" virt="non-virtual">vlkx::DynamicPerInstanceBuffer</derivedcompoundref>
    <derivedcompoundref refid="classvlkx_1_1_static_per_instance_buffer" prot="public" virt="non-virtual">vlkx::StaticPerInstanceBuffer</derivedcompoundref>
    <includes refid="_buffer_8h" local="no">Buffer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvlkx_1_1_per_instance_vertex_buffer_1a0b399dbf85004da823d25cd438ca1eb8" prot="private" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t vlkx::PerInstanceVertexBuffer::sizePerInstance</definition>
        <argsstring></argsstring>
        <name>sizePerInstance</name>
        <qualifiedname>vlkx::PerInstanceVertexBuffer::sizePerInstance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Buffer.h" line="294" column="24" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Buffer.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvlkx_1_1_per_instance_vertex_buffer_1acc6425d534b0abe14c24c78a864532e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vlkx::PerInstanceVertexBuffer::PerInstanceVertexBuffer</definition>
        <argsstring>(const PerInstanceVertexBuffer &amp;)=delete</argsstring>
        <name>PerInstanceVertexBuffer</name>
        <qualifiedname>vlkx::PerInstanceVertexBuffer::PerInstanceVertexBuffer</qualifiedname>
        <param>
          <type>const <ref refid="classvlkx_1_1_per_instance_vertex_buffer" kindref="compound">PerInstanceVertexBuffer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Buffer.h" line="284" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_per_instance_vertex_buffer_1ae9345162e624bfff5922b57159336016" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvlkx_1_1_per_instance_vertex_buffer" kindref="compound">PerInstanceVertexBuffer</ref> &amp;</type>
        <definition>PerInstanceVertexBuffer &amp; vlkx::PerInstanceVertexBuffer::operator=</definition>
        <argsstring>(const PerInstanceVertexBuffer &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>vlkx::PerInstanceVertexBuffer::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classvlkx_1_1_per_instance_vertex_buffer" kindref="compound">PerInstanceVertexBuffer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Buffer.h" line="285" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_per_instance_vertex_buffer_1a13f7de7c325adb97284000e9cbb6fe78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vlkx::PerInstanceVertexBuffer::bind</definition>
        <argsstring>(const VkCommandBuffer &amp;commands, uint32_t bindPoint, int offset) const</argsstring>
        <name>bind</name>
        <qualifiedname>vlkx::PerInstanceVertexBuffer::bind</qualifiedname>
        <param>
          <type>const VkCommandBuffer &amp;</type>
          <declname>commands</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bindPoint</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Buffer.h" line="287" column="14" bodyfile="shadow-engine/shadow-renderer/src/vulkan/abstraction/Buffer.cpp" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classvlkx_1_1_per_instance_vertex_buffer_1a464fb2dc542029bb71c5af7afe32a47e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t vlkx::PerInstanceVertexBuffer::getSize</definition>
        <argsstring>() const</argsstring>
        <name>getSize</name>
        <qualifiedname>vlkx::PerInstanceVertexBuffer::getSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Buffer.h" line="289" column="18" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Buffer.h" bodystart="289" bodyend="289"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classvlkx_1_1_per_instance_vertex_buffer_1a18c790870716d8ec6cd7590d1e44175c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vlkx::PerInstanceVertexBuffer::PerInstanceVertexBuffer</definition>
        <argsstring>(uint32_t size, std::vector&lt; VkVertexInputAttributeDescription &gt; &amp;&amp;attrs)</argsstring>
        <name>PerInstanceVertexBuffer</name>
        <qualifiedname>vlkx::PerInstanceVertexBuffer::PerInstanceVertexBuffer</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>std::vector&lt; VkVertexInputAttributeDescription &gt; &amp;&amp;</type>
          <declname>attrs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Buffer.h" line="292" column="9" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Buffer.h" bodystart="292" bodyend="292"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>END OF PER-VERTEX BUFFERS </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>vlkx::Buffer</label>
        <link refid="classvlkx_1_1_buffer"/>
      </node>
      <node id="3">
        <label>vlkx::DataBuffer</label>
        <link refid="classvlkx_1_1_data_buffer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>vlkx::DynamicPerInstanceBuffer</label>
        <link refid="classvlkx_1_1_dynamic_per_instance_buffer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>vlkx::PerInstanceVertexBuffer</label>
        <link refid="classvlkx_1_1_per_instance_vertex_buffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>vlkx::StaticPerInstanceBuffer</label>
        <link refid="classvlkx_1_1_static_per_instance_buffer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>vlkx::VertexBuffer</label>
        <link refid="classvlkx_1_1_vertex_buffer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>vlkx::Buffer</label>
        <link refid="classvlkx_1_1_buffer"/>
      </node>
      <node id="3">
        <label>vlkx::DataBuffer</label>
        <link refid="classvlkx_1_1_data_buffer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>vlkx::PerInstanceVertexBuffer</label>
        <link refid="classvlkx_1_1_per_instance_vertex_buffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>vlkx::VertexBuffer</label>
        <link refid="classvlkx_1_1_vertex_buffer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Buffer.h" line="282" column="5" bodyfile="shadow-engine/shadow-renderer/inc/vlkx/vulkan/abstraction/Buffer.h" bodystart="282" bodyend="295"/>
    <listofallmembers>
      <member refid="classvlkx_1_1_vertex_buffer_1acac05ae64c87a431410d0537dd7bfb73" prot="protected" virt="non-virtual"><scope>vlkx::PerInstanceVertexBuffer</scope><name>attributes</name></member>
      <member refid="classvlkx_1_1_per_instance_vertex_buffer_1a13f7de7c325adb97284000e9cbb6fe78" prot="public" virt="non-virtual"><scope>vlkx::PerInstanceVertexBuffer</scope><name>bind</name></member>
      <member refid="classvlkx_1_1_data_buffer_1a8ad640258cbc9aa645ed68e3c320af99" prot="protected" virt="non-virtual"><scope>vlkx::PerInstanceVertexBuffer</scope><name>Buffer</name></member>
      <member refid="classvlkx_1_1_data_buffer_1a055bf8f2da8b0c7084493579a2f27ccb" prot="protected" virt="non-virtual"><scope>vlkx::PerInstanceVertexBuffer</scope><name>Buffer</name></member>
      <member refid="classvlkx_1_1_vertex_buffer_1ad7d395f14fe512540318e0bb971ec712" prot="protected" virt="non-virtual"><scope>vlkx::PerInstanceVertexBuffer</scope><name>create</name></member>
      <member refid="classvlkx_1_1_data_buffer_1ad6b6ba2e5dd942b42f66a3f5c04e87a3" prot="public" virt="non-virtual"><scope>vlkx::PerInstanceVertexBuffer</scope><name>DataBuffer</name></member>
      <member refid="classvlkx_1_1_data_buffer_1a3abb23c2d7be5c18b266478202796c9b" prot="public" virt="non-virtual"><scope>vlkx::PerInstanceVertexBuffer</scope><name>DataBuffer</name></member>
      <member refid="classvlkx_1_1_vertex_buffer_1a84a1d2695206f30ab3eaf15a0d9f101b" prot="public" virt="non-virtual"><scope>vlkx::PerInstanceVertexBuffer</scope><name>draw</name></member>
      <member refid="classvlkx_1_1_data_buffer_1a0b3ac1c5f2d714165c994f65e18b6604" prot="protected" virt="non-virtual"><scope>vlkx::PerInstanceVertexBuffer</scope><name>get</name></member>
      <member refid="classvlkx_1_1_vertex_buffer_1af7102131161f21cbf3a52653971324f8" prot="public" virt="non-virtual"><scope>vlkx::PerInstanceVertexBuffer</scope><name>getAttrs</name></member>
      <member refid="classvlkx_1_1_data_buffer_1a9e10436c90954e0f4e213af704e10707" prot="protected" virt="non-virtual"><scope>vlkx::PerInstanceVertexBuffer</scope><name>getBuffer</name></member>
      <member refid="classvlkx_1_1_per_instance_vertex_buffer_1a464fb2dc542029bb71c5af7afe32a47e" prot="public" virt="non-virtual"><scope>vlkx::PerInstanceVertexBuffer</scope><name>getSize</name></member>
      <member refid="classvlkx_1_1_per_instance_vertex_buffer_1ae9345162e624bfff5922b57159336016" prot="public" virt="non-virtual"><scope>vlkx::PerInstanceVertexBuffer</scope><name>operator=</name></member>
      <member refid="classvlkx_1_1_vertex_buffer_1aca19fea4a31e96e9dbea2e77e5a2ea1c" prot="public" virt="non-virtual" ambiguityscope="vlkx::VertexBuffer::"><scope>vlkx::PerInstanceVertexBuffer</scope><name>operator=</name></member>
      <member refid="classvlkx_1_1_data_buffer_1a0caf832cd047de702e77433a3e97dc8d" prot="public" virt="non-virtual" ambiguityscope="vlkx::DataBuffer::"><scope>vlkx::PerInstanceVertexBuffer</scope><name>operator=</name></member>
      <member refid="classvlkx_1_1_buffer_1a9971cfc28a88cebf00d2642baa5cd72e" prot="public" virt="non-virtual" ambiguityscope="vlkx::Buffer::"><scope>vlkx::PerInstanceVertexBuffer</scope><name>operator=</name></member>
      <member refid="classvlkx_1_1_per_instance_vertex_buffer_1acc6425d534b0abe14c24c78a864532e8" prot="public" virt="non-virtual"><scope>vlkx::PerInstanceVertexBuffer</scope><name>PerInstanceVertexBuffer</name></member>
      <member refid="classvlkx_1_1_per_instance_vertex_buffer_1a18c790870716d8ec6cd7590d1e44175c" prot="protected" virt="non-virtual"><scope>vlkx::PerInstanceVertexBuffer</scope><name>PerInstanceVertexBuffer</name></member>
      <member refid="classvlkx_1_1_data_buffer_1ab4e03d32dd898176c66e13d19d7d2fa8" prot="protected" virt="non-virtual"><scope>vlkx::PerInstanceVertexBuffer</scope><name>setBuffer</name></member>
      <member refid="classvlkx_1_1_per_instance_vertex_buffer_1a0b399dbf85004da823d25cd438ca1eb8" prot="private" virt="non-virtual"><scope>vlkx::PerInstanceVertexBuffer</scope><name>sizePerInstance</name></member>
      <member refid="classvlkx_1_1_vertex_buffer_1a3a57f3575d6852d24b8df1307c90cd78" prot="public" virt="non-virtual"><scope>vlkx::PerInstanceVertexBuffer</scope><name>VertexBuffer</name></member>
      <member refid="classvlkx_1_1_vertex_buffer_1aceabde3791209d5801d823d020db7721" prot="protected" virt="non-virtual"><scope>vlkx::PerInstanceVertexBuffer</scope><name>VertexBuffer</name></member>
      <member refid="classvlkx_1_1_buffer_1a5ad6564545b79d1ce612ebf2b6fc44f7" prot="public" virt="virtual"><scope>vlkx::PerInstanceVertexBuffer</scope><name>~Buffer</name></member>
      <member refid="classvlkx_1_1_data_buffer_1abe2a28ce8e68a76cda222d51bfca0ac0" prot="public" virt="non-virtual"><scope>vlkx::PerInstanceVertexBuffer</scope><name>~DataBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
